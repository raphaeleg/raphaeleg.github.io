[{"/Users/crushedsummers/Desktop/Work/Application/portfolio22/src/index.js":"1","/Users/crushedsummers/Desktop/Work/Application/portfolio22/src/App.js":"2","/Users/crushedsummers/Desktop/Work/Application/portfolio22/src/reportWebVitals.js":"3","/Users/crushedsummers/Desktop/Work/Application/portfolio22/src/components/Splash.js":"4","/Users/crushedsummers/Desktop/Work/Application/portfolio22/src/components/About.js":"5","/Users/crushedsummers/Desktop/Work/Application/portfolio22/src/components/MainWorks.js":"6","/Users/crushedsummers/Desktop/Work/Application/portfolio22/src/components/SideWorks.js":"7","/Users/crushedsummers/Desktop/Work/Application/portfolio22/src/components/CTA.js":"8","/Users/crushedsummers/Desktop/Work/Application/portfolio22/src/components/Tech.js":"9","/Users/crushedsummers/Desktop/Work/Application/portfolio22/src/constants/index.js":"10","/Users/crushedsummers/Desktop/Work/Application/portfolio22/src/components/Ball.js":"11","/Users/crushedsummers/Desktop/Work/Application/portfolio22/src/components/ScrollBar.js":"12","/Users/crushedsummers/Desktop/Work/Application/portfolio22/src/components/SplashBg.js":"13"},{"size":535,"mtime":1657980732985,"results":"14","hashOfConfig":"15"},{"size":3212,"mtime":1685036773593,"results":"16","hashOfConfig":"15"},{"size":362,"mtime":1657980732985,"results":"17","hashOfConfig":"15"},{"size":1036,"mtime":1685015442898,"results":"18","hashOfConfig":"15"},{"size":1157,"mtime":1684983819314,"results":"19","hashOfConfig":"15"},{"size":2834,"mtime":1684918267769,"results":"20","hashOfConfig":"15"},{"size":2855,"mtime":1685011392734,"results":"21","hashOfConfig":"15"},{"size":941,"mtime":1684919585878,"results":"22","hashOfConfig":"15"},{"size":491,"mtime":1684922158429,"results":"23","hashOfConfig":"15"},{"size":1532,"mtime":1684979766266,"results":"24","hashOfConfig":"15"},{"size":1223,"mtime":1684920711898,"results":"25","hashOfConfig":"15"},{"size":623,"mtime":1685036348133,"results":"26","hashOfConfig":"15"},{"size":2797,"mtime":1685015931170,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","suppressedMessages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},"1qr4xis",{"filePath":"32","messages":"33","suppressedMessages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"35","messages":"36","suppressedMessages":"37","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},{"filePath":"38","messages":"39","suppressedMessages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},{"filePath":"41","messages":"42","suppressedMessages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},{"filePath":"44","messages":"45","suppressedMessages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"31"},{"filePath":"48","messages":"49","suppressedMessages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"31"},{"filePath":"52","messages":"53","suppressedMessages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},{"filePath":"55","messages":"56","suppressedMessages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"58","messages":"59","suppressedMessages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},{"filePath":"61","messages":"62","suppressedMessages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},{"filePath":"64","messages":"65","suppressedMessages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"67","messages":"68","suppressedMessages":"69","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"31"},"/Users/crushedsummers/Desktop/Work/Application/portfolio22/src/index.js",[],[],[],"/Users/crushedsummers/Desktop/Work/Application/portfolio22/src/App.js",["71","72","73"],[],"/Users/crushedsummers/Desktop/Work/Application/portfolio22/src/reportWebVitals.js",[],[],"/Users/crushedsummers/Desktop/Work/Application/portfolio22/src/components/Splash.js",[],[],"/Users/crushedsummers/Desktop/Work/Application/portfolio22/src/components/About.js",[],[],"/Users/crushedsummers/Desktop/Work/Application/portfolio22/src/components/MainWorks.js",["74"],[],"import React, { useState, useEffect, useRef } from 'react'\n// Import Swiper React components\nimport { Swiper, SwiperSlide } from 'swiper/react';\nimport { EffectFade } from 'swiper';\n// Import Swiper styles\nimport 'swiper/css';\nimport 'swiper/css/effect-fade';\nimport { gsap } from \"gsap\";\nimport { ScrollTrigger } from \"gsap/ScrollTrigger\";\ngsap.registerPlugin( ScrollTrigger );\n\nconst MainWorks = ( { title, category, images, dark, ytLink } ) => {\n    const [my_swiper, set_my_swiper] = useState( {} );\n    const headLineRef = useRef();\n    const [showHeading, setShowHeading] = useState( true );\n    useEffect( () => {\n        gsap.fromTo(\n            headLineRef.current,\n            { autoAlpha: 0, y: -40 },\n            {\n                autoAlpha: 1, y: 0, duration: 1,\n                scrollTrigger: {\n                    scroller: 'html',\n                    trigger: headLineRef.current,\n                    start: \"top 60%\",\n                    end: \"bottom 0%\",\n                    toggleActions: \"play none restart reverse\"\n                },\n            },\n        );\n    }, [] );\n\n    return (\n        <section className={'mainGalleryContainer'}>\n            <span className='mainWorksTitles' ref={headLineRef}>\n                {showHeading &&\n                    <>\n                        <h1>{title}</h1>\n                        <h2>{category}</h2>\n                    </>\n                }\n            </span>\n            <Swiper\n                pagination={{\n                    dynamicBullets: true,\n                }}\n                modules={[EffectFade]}\n                effect=\"fade\"\n                className={`mySwiper ${dark ? 'arrCursorDark' : 'arrCursorLight'}`}\n                onInit={( ev ) => {\n                    set_my_swiper( ev )\n                }}\n                onClick={() => {\n                    my_swiper.slideNext();\n                    if ( my_swiper.realIndex == 0 )\n                        setShowHeading( true );\n                    else\n                        setShowHeading( false );\n                }}\n                loop={true}\n            >\n                {images.map( ( slideContent ) => (\n                    <SwiperSlide key={slideContent}>\n                        <img src={`../MainWorks/${slideContent}.jpg`} alt={slideContent} />\n                    </SwiperSlide>\n                ) )}\n\n                {ytLink &&\n                    <SwiperSlide key={0}>\n                        <iframe width={49 * window.screen.width / 100} height={46 * window.screen.height / 100} src={ytLink} title=\"YouTube video player\" frameBorder=\"5\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share\" allowFullScreen></iframe>\n                    </SwiperSlide>}\n            </Swiper>\n        </section>\n    )\n}\n\nexport default MainWorks","/Users/crushedsummers/Desktop/Work/Application/portfolio22/src/components/SideWorks.js",["75"],[],"import React, { useState, useEffect, useRef } from 'react'\n// Import Swiper React components\nimport { Swiper, SwiperSlide } from 'swiper/react';\nimport { EffectFade } from 'swiper';\n// Import Swiper styles\nimport 'swiper/css';\nimport 'swiper/css/effect-fade';\nimport { gsap } from \"gsap\";\nimport { ScrollTrigger } from \"gsap/ScrollTrigger\";\ngsap.registerPlugin( ScrollTrigger );\n\nconst SideWorks = ( { title, category, images, dark, ytLink } ) => {\n    const [my_swiper, set_my_swiper] = useState( {} );\n    const headLineRef = useRef();\n    const [showHeading, setShowHeading] = useState( true );\n    useEffect( () => {\n        gsap.fromTo(\n            headLineRef.current,\n            { autoAlpha: 0, y: -40 },\n            {\n                autoAlpha: 1, y: 0, duration: 1,\n                scrollTrigger: {\n                    scroller: 'html',\n                    trigger: headLineRef.current,\n                    start: \"top 60%\",\n                    end: \"bottom 0%\",\n                    toggleActions: \"play none restart reverse\"\n                },\n            },\n        );\n    }, [] );\n\n    return (\n        <section className={'sideGalleryContainer'}>\n            <span className='mainWorksTitles positionRight' ref={headLineRef}>\n                {showHeading &&\n                    <>\n                        <h1>{title}</h1>\n                        <h2>{category}</h2>\n                    </>\n                }\n            </span>\n            <Swiper\n                pagination={{\n                    dynamicBullets: true,\n                }}\n                modules={[EffectFade]}\n                effect=\"fade\"\n                className={`mySwiper ${showHeading ? 'arrCursorLight' : 'arrCursorDark'}`}\n                onInit={( ev ) => {\n                    set_my_swiper( ev )\n                }}\n                onClick={() => {\n                    my_swiper.slideNext();\n                    if ( my_swiper.realIndex == 0 )\n                        setShowHeading( true );\n                    else\n                        setShowHeading( false );\n                }}\n                loop={true}\n            >\n                {images.map( ( slideContent ) => (\n                    <SwiperSlide key={slideContent}>\n                        <img src={`../MainWorks/${slideContent}.jpg`} alt={slideContent} />\n                    </SwiperSlide>\n                ) )}\n\n                {ytLink &&\n                    <SwiperSlide key={0}>\n                        <iframe width={49 * window.screen.width / 100} height={46 * window.screen.height / 100} src={ytLink} title=\"YouTube video player\" frameBorder=\"5\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share\" allowFullScreen></iframe>\n                    </SwiperSlide>}\n            </Swiper>\n        </section>\n    )\n}\n\nexport default SideWorks","/Users/crushedsummers/Desktop/Work/Application/portfolio22/src/components/CTA.js",[],[],"/Users/crushedsummers/Desktop/Work/Application/portfolio22/src/components/Tech.js",[],[],"/Users/crushedsummers/Desktop/Work/Application/portfolio22/src/constants/index.js",[],[],"/Users/crushedsummers/Desktop/Work/Application/portfolio22/src/components/Ball.js",[],[],"/Users/crushedsummers/Desktop/Work/Application/portfolio22/src/components/ScrollBar.js",["76"],[],"/Users/crushedsummers/Desktop/Work/Application/portfolio22/src/components/SplashBg.js",["77"],[],"import * as THREE from 'three';\nimport { OrbitControls } from 'three/examples/jsm/controls/OrbitControls';\nimport { Canvas, extend, useFrame, useLoader, useThree } from '@react-three/fiber';\nimport circleImg from '../assets/circle.png';\nimport { Suspense, useCallback, useMemo, useRef } from 'react';\nextend( { OrbitControls } )\n\n\nfunction Points() {\n    const imgTex = useLoader( THREE.TextureLoader, circleImg );\n    const bufferRef = useRef();\n\n    let t = 0;\n    let f = 0.002;\n    let a = 2;\n    const graph = useCallback( ( x, z ) => {\n        return Math.sin( f * ( x ** 2 + z ** 2 + t ) ) * a;\n    }, [t, f, a] )\n\n    const count = 100\n    const sep = 3\n    let positions = useMemo( () => {\n        let positions = []\n\n        for ( let xi = 0; xi < count; xi++ ) {\n            for ( let zi = 0; zi < count; zi++ ) {\n                let x = sep * ( xi - count / 2 );\n                let z = sep * ( zi - count / 2 );\n                let y = graph( x, z );\n                positions.push( x, y, z );\n            }\n        }\n\n        return new Float32Array( positions );\n    }, [count, sep, graph] )\n\n    useFrame( () => {\n        t += 15\n\n        const positions = bufferRef.current.array;\n\n        let i = 0;\n        for ( let xi = 0; xi < count; xi++ ) {\n            for ( let zi = 0; zi < count; zi++ ) {\n                let x = sep * ( xi - count / 2 );\n                let z = sep * ( zi - count / 2 );\n\n                positions[i + 1] = graph( x, z );\n                i += 3;\n            }\n        }\n\n        bufferRef.current.needsUpdate = true;\n    } )\n\n    return (\n        <points>\n            <bufferGeometry attach=\"geometry\">\n                <bufferAttribute\n                    ref={bufferRef}\n                    attach='attributes-position'\n                    array={positions}\n                    count={positions.length / 3}\n                    itemSize={3}\n                />\n            </bufferGeometry>\n\n            <pointsMaterial\n                attach=\"material\"\n                map={imgTex}\n                color={0xFFFFFF}\n                size={0.5}\n                sizeAttenuation\n                transparent={false}\n                alphaTest={0.5}\n                opacity={1.0}\n            />\n        </points>\n    );\n}\n\nfunction AnimationCanvas() {\n    return (\n        <Canvas\n            // colorManagement={false}\n            camera={{ position: [100, 10, 0], fov: 75 }}\n        >\n            <Suspense fallback={null}>\n                <Points />\n            </Suspense>\n        </Canvas>\n    );\n}\n\n\nfunction SplashBg() {\n    return (\n        <div className=\"anim\">\n            <Suspense fallback={<p style={{ color: 'white' }}>Loading...</p>}>\n                <AnimationCanvas />\n            </Suspense>\n        </div>\n    );\n}\n\nexport default SplashBg;",{"ruleId":"78","severity":1,"message":"79","line":5,"column":8,"nodeType":"80","messageId":"81","endLine":5,"endColumn":16},{"ruleId":"82","severity":1,"message":"83","line":30,"column":22,"nodeType":"84","messageId":"85","endLine":30,"endColumn":24},{"ruleId":"86","severity":1,"message":"87","line":43,"column":6,"nodeType":"88","endLine":43,"endColumn":17,"suggestions":"89"},{"ruleId":"82","severity":1,"message":"90","line":55,"column":46,"nodeType":"84","messageId":"85","endLine":55,"endColumn":48},{"ruleId":"82","severity":1,"message":"90","line":55,"column":46,"nodeType":"84","messageId":"85","endLine":55,"endColumn":48},{"ruleId":"78","severity":1,"message":"91","line":1,"column":17,"nodeType":"80","messageId":"81","endLine":1,"endColumn":25},{"ruleId":"78","severity":1,"message":"92","line":3,"column":47,"nodeType":"80","messageId":"81","endLine":3,"endColumn":55},"no-unused-vars","'SplashBg' is defined but never used.","Identifier","unusedVar","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'prevPage'. Either include it or remove the dependency array.","ArrayExpression",["93"],"Expected '===' and instead saw '=='.","'useState' is defined but never used.","'useThree' is defined but never used.",{"desc":"94","fix":"95"},"Update the dependencies array to be: [prevPage, scrollPos]",{"range":"96","text":"97"},[1545,1556],"[prevPage, scrollPos]"]