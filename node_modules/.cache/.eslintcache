[{"/Users/crushedsummers/Desktop/Work/Application/portfolio22/src/index.js":"1","/Users/crushedsummers/Desktop/Work/Application/portfolio22/src/App.js":"2","/Users/crushedsummers/Desktop/Work/Application/portfolio22/src/reportWebVitals.js":"3","/Users/crushedsummers/Desktop/Work/Application/portfolio22/src/components/Splash.js":"4","/Users/crushedsummers/Desktop/Work/Application/portfolio22/src/components/About.js":"5","/Users/crushedsummers/Desktop/Work/Application/portfolio22/src/components/MainWorks.js":"6","/Users/crushedsummers/Desktop/Work/Application/portfolio22/src/components/SideWorks.js":"7","/Users/crushedsummers/Desktop/Work/Application/portfolio22/src/components/CTA.js":"8","/Users/crushedsummers/Desktop/Work/Application/portfolio22/src/components/Tech.js":"9","/Users/crushedsummers/Desktop/Work/Application/portfolio22/src/constants/index.js":"10","/Users/crushedsummers/Desktop/Work/Application/portfolio22/src/components/Ball.js":"11","/Users/crushedsummers/Desktop/Work/Application/portfolio22/src/components/ScrollBar.js":"12","/Users/crushedsummers/Desktop/Work/Application/portfolio22/src/components/SplashBg.js":"13"},{"size":535,"mtime":1657980732985,"results":"14","hashOfConfig":"15"},{"size":3587,"mtime":1685015458017,"results":"16","hashOfConfig":"15"},{"size":362,"mtime":1657980732985,"results":"17","hashOfConfig":"15"},{"size":1036,"mtime":1685015442898,"results":"18","hashOfConfig":"15"},{"size":1157,"mtime":1684983819314,"results":"19","hashOfConfig":"15"},{"size":2834,"mtime":1684918267769,"results":"20","hashOfConfig":"15"},{"size":2855,"mtime":1685011392734,"results":"21","hashOfConfig":"15"},{"size":941,"mtime":1684919585878,"results":"22","hashOfConfig":"15"},{"size":491,"mtime":1684922158429,"results":"23","hashOfConfig":"15"},{"size":1532,"mtime":1684979766266,"results":"24","hashOfConfig":"15"},{"size":1223,"mtime":1684920711898,"results":"25","hashOfConfig":"15"},{"size":610,"mtime":1685000455589,"results":"26","hashOfConfig":"15"},{"size":2797,"mtime":1685015931170,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","suppressedMessages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},"1qr4xis",{"filePath":"32","messages":"33","suppressedMessages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35"},{"filePath":"36","messages":"37","suppressedMessages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},{"filePath":"39","messages":"40","suppressedMessages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"42","messages":"43","suppressedMessages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},{"filePath":"45","messages":"46","suppressedMessages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"31"},{"filePath":"49","messages":"50","suppressedMessages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"31"},{"filePath":"53","messages":"54","suppressedMessages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},{"filePath":"56","messages":"57","suppressedMessages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"59","messages":"60","suppressedMessages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},{"filePath":"62","messages":"63","suppressedMessages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},{"filePath":"65","messages":"66","suppressedMessages":"67","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"31"},{"filePath":"69","messages":"70","suppressedMessages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72"},"/Users/crushedsummers/Desktop/Work/Application/portfolio22/src/index.js",[],[],[],"/Users/crushedsummers/Desktop/Work/Application/portfolio22/src/App.js",["73","74","75","76"],[],"import React, { useState, useEffect, useRef } from \"react\";\n\nimport './App.scss';\nimport Splash from './components/Splash';\nimport SplashBg from './components/SplashBg';\nimport About from './components/About';\nimport MainWorks from './components/MainWorks';\nimport SideWorks from './components/SideWorks';\nimport CTA from './components/CTA';\nimport ScrollBar from \"./components/ScrollBar\";\n\nfunction App() {\n  const worksRef = useRef();\n  const aboutRef = useRef();\n  const splashRef = useRef();\n  const [scrollPos, setScrollPos] = useState( 0 );\n  const [isNotFirstPage, setIsNotFirstPage] = useState( false );\n  const [currentPage, setCurrentPage] = useState( 1 );\n  const [prevPage, setPrevPage] = useState( 0 );\n  const [totalPages, setTotalPages] = useState( 5 );\n  const [scrollBarPos, setScrollBarPos] = useState( 0 );\n\n  useEffect( () => {\n    function onScroll() {\n      let currentPosition = window.pageYOffset; // or use document.documentElement.scrollTop;\n      if ( currentPosition > 500 ) {\n        setIsNotFirstPage( true );\n        let idx = Math.floor( currentPosition / window.innerHeight );\n        // get scroll values for scrollbar\n        if ( currentPosition > window.innerHeight * 7 ) {\n          setCurrentPage( idx - 6 );\n          setTotalPages( 3 );\n          if ( idx - 6 != prevPage ) {\n            setScrollBarPos( calcPosition( idx - 6, 3 ) );\n            setPrevPage( idx - 6 );\n          }\n        }\n        else {\n          setCurrentPage( idx - 1 );\n          setTotalPages( 5 );\n          if ( idx - 6 != prevPage ) {\n            setScrollBarPos( calcPosition( idx - 1, 5 ) );\n            setPrevPage( idx - 1 );\n          }\n        }\n      }\n      else\n        setIsNotFirstPage( false );\n\n      setScrollPos( currentPosition );\n    }\n    window.addEventListener( \"scroll\", onScroll );\n    return () => window.removeEventListener( \"scroll\", onScroll );\n  }, [scrollPos] );\n\n  function scrollTo( toGo ) {\n    toGo.current.scrollIntoView( { behavior: 'smooth' } );\n  }\n\n  function calcPosition( cur, tot ) {\n    let calcPosition = ( cur - 0.5 ) * window.innerHeight / tot;\n    return calcPosition\n  }\n\n  return (\n    <div className=\"App\">\n      <ScrollBar currentPage={currentPage} totalPages={totalPages} scrollBarPos={scrollBarPos} />\n      <span ref={splashRef}>\n        <Splash />\n      </span>\n      <span ref={aboutRef}>\n        <About />\n      </span>\n\n      <span ref={worksRef}>\n        <MainWorks title='Escapee' category='Video Game • RPG • Unity' images={[1, 2, 3, 4]} dark={false} ytLink=\"https://www.youtube.com/embed/f3OJeqz19LE\" />\n      </span>\n      <MainWorks title='Liminal Floor' category='Study • Horror • React.js' images={[5, 6, 7, 8]} dark={false} ytLink=\"https://www.youtube.com/embed/oDc_kKkF0g0\" />\n      <MainWorks title='Sharing© Water' category='Board Game • Speculative Design • Adobe Illustrator' images={[9, 10, 11, 12, 13, 14]} dark={false} />\n      <MainWorks title='Jane Austen' category='Website • UXUI • Next.js' images={[15, 16, 17, 18]} dark={true} />\n      <MainWorks title='SALBOY FIFTY5IVE' category='Website • VR • JQuery' images={[19, 20, 21, 22]} dark={true} />\n\n      <SideWorks title='Marketing' category='' images={[35, 23, 24, 25, 26]} />\n      <SideWorks title='Art & Graphic' category='' images={[36, 27, 28, 29, 30, 31]} />\n      <SideWorks title='Upcoming Projects' category='' images={[32, 33, 34]} />\n\n      <CTA isNotFirstPage={isNotFirstPage} aboutRef={aboutRef} worksRef={worksRef} splashRef={splashRef} scrollTo={scrollTo} />\n    </div>\n  );\n}\n\nexport default App;\n","/Users/crushedsummers/Desktop/Work/Application/portfolio22/src/reportWebVitals.js",[],[],"/Users/crushedsummers/Desktop/Work/Application/portfolio22/src/components/Splash.js",[],[],"/Users/crushedsummers/Desktop/Work/Application/portfolio22/src/components/About.js",[],[],"/Users/crushedsummers/Desktop/Work/Application/portfolio22/src/components/MainWorks.js",["77"],[],"import React, { useState, useEffect, useRef } from 'react'\n// Import Swiper React components\nimport { Swiper, SwiperSlide } from 'swiper/react';\nimport { EffectFade } from 'swiper';\n// Import Swiper styles\nimport 'swiper/css';\nimport 'swiper/css/effect-fade';\nimport { gsap } from \"gsap\";\nimport { ScrollTrigger } from \"gsap/ScrollTrigger\";\ngsap.registerPlugin( ScrollTrigger );\n\nconst MainWorks = ( { title, category, images, dark, ytLink } ) => {\n    const [my_swiper, set_my_swiper] = useState( {} );\n    const headLineRef = useRef();\n    const [showHeading, setShowHeading] = useState( true );\n    useEffect( () => {\n        gsap.fromTo(\n            headLineRef.current,\n            { autoAlpha: 0, y: -40 },\n            {\n                autoAlpha: 1, y: 0, duration: 1,\n                scrollTrigger: {\n                    scroller: 'html',\n                    trigger: headLineRef.current,\n                    start: \"top 60%\",\n                    end: \"bottom 0%\",\n                    toggleActions: \"play none restart reverse\"\n                },\n            },\n        );\n    }, [] );\n\n    return (\n        <section className={'mainGalleryContainer'}>\n            <span className='mainWorksTitles' ref={headLineRef}>\n                {showHeading &&\n                    <>\n                        <h1>{title}</h1>\n                        <h2>{category}</h2>\n                    </>\n                }\n            </span>\n            <Swiper\n                pagination={{\n                    dynamicBullets: true,\n                }}\n                modules={[EffectFade]}\n                effect=\"fade\"\n                className={`mySwiper ${dark ? 'arrCursorDark' : 'arrCursorLight'}`}\n                onInit={( ev ) => {\n                    set_my_swiper( ev )\n                }}\n                onClick={() => {\n                    my_swiper.slideNext();\n                    if ( my_swiper.realIndex == 0 )\n                        setShowHeading( true );\n                    else\n                        setShowHeading( false );\n                }}\n                loop={true}\n            >\n                {images.map( ( slideContent ) => (\n                    <SwiperSlide key={slideContent}>\n                        <img src={`../MainWorks/${slideContent}.jpg`} alt={slideContent} />\n                    </SwiperSlide>\n                ) )}\n\n                {ytLink &&\n                    <SwiperSlide key={0}>\n                        <iframe width={49 * window.screen.width / 100} height={46 * window.screen.height / 100} src={ytLink} title=\"YouTube video player\" frameBorder=\"5\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share\" allowFullScreen></iframe>\n                    </SwiperSlide>}\n            </Swiper>\n        </section>\n    )\n}\n\nexport default MainWorks","/Users/crushedsummers/Desktop/Work/Application/portfolio22/src/components/SideWorks.js",["78"],[],"import React, { useState, useEffect, useRef } from 'react'\n// Import Swiper React components\nimport { Swiper, SwiperSlide } from 'swiper/react';\nimport { EffectFade } from 'swiper';\n// Import Swiper styles\nimport 'swiper/css';\nimport 'swiper/css/effect-fade';\nimport { gsap } from \"gsap\";\nimport { ScrollTrigger } from \"gsap/ScrollTrigger\";\ngsap.registerPlugin( ScrollTrigger );\n\nconst SideWorks = ( { title, category, images, dark, ytLink } ) => {\n    const [my_swiper, set_my_swiper] = useState( {} );\n    const headLineRef = useRef();\n    const [showHeading, setShowHeading] = useState( true );\n    useEffect( () => {\n        gsap.fromTo(\n            headLineRef.current,\n            { autoAlpha: 0, y: -40 },\n            {\n                autoAlpha: 1, y: 0, duration: 1,\n                scrollTrigger: {\n                    scroller: 'html',\n                    trigger: headLineRef.current,\n                    start: \"top 60%\",\n                    end: \"bottom 0%\",\n                    toggleActions: \"play none restart reverse\"\n                },\n            },\n        );\n    }, [] );\n\n    return (\n        <section className={'sideGalleryContainer'}>\n            <span className='mainWorksTitles positionRight' ref={headLineRef}>\n                {showHeading &&\n                    <>\n                        <h1>{title}</h1>\n                        <h2>{category}</h2>\n                    </>\n                }\n            </span>\n            <Swiper\n                pagination={{\n                    dynamicBullets: true,\n                }}\n                modules={[EffectFade]}\n                effect=\"fade\"\n                className={`mySwiper ${showHeading ? 'arrCursorLight' : 'arrCursorDark'}`}\n                onInit={( ev ) => {\n                    set_my_swiper( ev )\n                }}\n                onClick={() => {\n                    my_swiper.slideNext();\n                    if ( my_swiper.realIndex == 0 )\n                        setShowHeading( true );\n                    else\n                        setShowHeading( false );\n                }}\n                loop={true}\n            >\n                {images.map( ( slideContent ) => (\n                    <SwiperSlide key={slideContent}>\n                        <img src={`../MainWorks/${slideContent}.jpg`} alt={slideContent} />\n                    </SwiperSlide>\n                ) )}\n\n                {ytLink &&\n                    <SwiperSlide key={0}>\n                        <iframe width={49 * window.screen.width / 100} height={46 * window.screen.height / 100} src={ytLink} title=\"YouTube video player\" frameBorder=\"5\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share\" allowFullScreen></iframe>\n                    </SwiperSlide>}\n            </Swiper>\n        </section>\n    )\n}\n\nexport default SideWorks","/Users/crushedsummers/Desktop/Work/Application/portfolio22/src/components/CTA.js",[],[],"/Users/crushedsummers/Desktop/Work/Application/portfolio22/src/components/Tech.js",[],[],"/Users/crushedsummers/Desktop/Work/Application/portfolio22/src/constants/index.js",[],[],"/Users/crushedsummers/Desktop/Work/Application/portfolio22/src/components/Ball.js",[],[],"/Users/crushedsummers/Desktop/Work/Application/portfolio22/src/components/ScrollBar.js",["79"],[],"import React, { useState } from 'react'\n\nconst ScrollBar = ( { currentPage, totalPages, scrollBarPos } ) => {\n    return (\n        <span className={`scrollContainer ${currentPage > 0 ? '' : 'toHide'} ${totalPages === 3 ? 'sideScrollContainer' : ''}`}>\n            <span className='scrollNumbers' style={{ marginTop: scrollBarPos }}>\n                <p className='scrollCurr'>{Math.min( Math.max( currentPage, 1 ), totalPages )}</p>\n                <p className='scrollDash'>/</p>\n                <p className='scrollTotal'>{totalPages}</p>\n            </span>\n        </span >\n    )\n}\n\nexport default ScrollBar","/Users/crushedsummers/Desktop/Work/Application/portfolio22/src/components/SplashBg.js",["80"],[],"import * as THREE from 'three';\nimport { OrbitControls } from 'three/examples/jsm/controls/OrbitControls';\nimport { Canvas, extend, useFrame, useLoader, useThree } from '@react-three/fiber';\nimport circleImg from '../assets/circle.png';\nimport { Suspense, useCallback, useMemo, useRef } from 'react';\nextend( { OrbitControls } )\n\n\nfunction Points() {\n    const imgTex = useLoader( THREE.TextureLoader, circleImg );\n    const bufferRef = useRef();\n\n    let t = 0;\n    let f = 0.002;\n    let a = 2;\n    const graph = useCallback( ( x, z ) => {\n        return Math.sin( f * ( x ** 2 + z ** 2 + t ) ) * a;\n    }, [t, f, a] )\n\n    const count = 100\n    const sep = 3\n    let positions = useMemo( () => {\n        let positions = []\n\n        for ( let xi = 0; xi < count; xi++ ) {\n            for ( let zi = 0; zi < count; zi++ ) {\n                let x = sep * ( xi - count / 2 );\n                let z = sep * ( zi - count / 2 );\n                let y = graph( x, z );\n                positions.push( x, y, z );\n            }\n        }\n\n        return new Float32Array( positions );\n    }, [count, sep, graph] )\n\n    useFrame( () => {\n        t += 15\n\n        const positions = bufferRef.current.array;\n\n        let i = 0;\n        for ( let xi = 0; xi < count; xi++ ) {\n            for ( let zi = 0; zi < count; zi++ ) {\n                let x = sep * ( xi - count / 2 );\n                let z = sep * ( zi - count / 2 );\n\n                positions[i + 1] = graph( x, z );\n                i += 3;\n            }\n        }\n\n        bufferRef.current.needsUpdate = true;\n    } )\n\n    return (\n        <points>\n            <bufferGeometry attach=\"geometry\">\n                <bufferAttribute\n                    ref={bufferRef}\n                    attach='attributes-position'\n                    array={positions}\n                    count={positions.length / 3}\n                    itemSize={3}\n                />\n            </bufferGeometry>\n\n            <pointsMaterial\n                attach=\"material\"\n                map={imgTex}\n                color={0xFFFFFF}\n                size={0.5}\n                sizeAttenuation\n                transparent={false}\n                alphaTest={0.5}\n                opacity={1.0}\n            />\n        </points>\n    );\n}\n\nfunction AnimationCanvas() {\n    return (\n        <Canvas\n            // colorManagement={false}\n            camera={{ position: [100, 10, 0], fov: 75 }}\n        >\n            <Suspense fallback={null}>\n                <Points />\n            </Suspense>\n        </Canvas>\n    );\n}\n\n\nfunction SplashBg() {\n    return (\n        <div className=\"anim\">\n            <Suspense fallback={<p style={{ color: 'white' }}>Loading...</p>}>\n                <AnimationCanvas />\n            </Suspense>\n        </div>\n    );\n}\n\nexport default SplashBg;",{"ruleId":"81","severity":1,"message":"82","line":5,"column":8,"nodeType":"83","messageId":"84","endLine":5,"endColumn":16},{"ruleId":"85","severity":1,"message":"86","line":33,"column":24,"nodeType":"87","messageId":"88","endLine":33,"endColumn":26},{"ruleId":"85","severity":1,"message":"86","line":41,"column":24,"nodeType":"87","messageId":"88","endLine":41,"endColumn":26},{"ruleId":"89","severity":1,"message":"90","line":54,"column":6,"nodeType":"91","endLine":54,"endColumn":17,"suggestions":"92"},{"ruleId":"85","severity":1,"message":"93","line":55,"column":46,"nodeType":"87","messageId":"88","endLine":55,"endColumn":48},{"ruleId":"85","severity":1,"message":"93","line":55,"column":46,"nodeType":"87","messageId":"88","endLine":55,"endColumn":48},{"ruleId":"81","severity":1,"message":"94","line":1,"column":17,"nodeType":"83","messageId":"84","endLine":1,"endColumn":25},{"ruleId":"81","severity":1,"message":"95","line":3,"column":47,"nodeType":"83","messageId":"84","endLine":3,"endColumn":55},"no-unused-vars","'SplashBg' is defined but never used.","Identifier","unusedVar","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'prevPage'. Either include it or remove the dependency array.","ArrayExpression",["96"],"Expected '===' and instead saw '=='.","'useState' is defined but never used.","'useThree' is defined but never used.",{"desc":"97","fix":"98"},"Update the dependencies array to be: [prevPage, scrollPos]",{"range":"99","text":"100"},[1896,1907],"[prevPage, scrollPos]"]