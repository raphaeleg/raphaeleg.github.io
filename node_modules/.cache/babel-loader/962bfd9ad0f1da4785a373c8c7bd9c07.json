{"ast":null,"code":"import _defineProperty from \"/Users/crushedsummers/Documents/GitHub/raphaeleg.github.io/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\nimport _objectSpread from \"/Users/crushedsummers/Documents/GitHub/raphaeleg.github.io/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport _toConsumableArray from \"/Users/crushedsummers/Documents/GitHub/raphaeleg.github.io/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";\nimport _slicedToArray from \"/Users/crushedsummers/Documents/GitHub/raphaeleg.github.io/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nimport _objectWithoutProperties from \"/Users/crushedsummers/Documents/GitHub/raphaeleg.github.io/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js\";\nimport _classCallCheck from \"/Users/crushedsummers/Documents/GitHub/raphaeleg.github.io/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/Users/crushedsummers/Documents/GitHub/raphaeleg.github.io/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _inherits from \"/Users/crushedsummers/Documents/GitHub/raphaeleg.github.io/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"/Users/crushedsummers/Documents/GitHub/raphaeleg.github.io/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\nvar _excluded = [\"context\", \"children\"],\n    _excluded2 = [\"children\", \"range\", \"limit\", \"frames\"],\n    _excluded3 = [\"meshes\", \"children\"];\nimport _extends from '@babel/runtime/helpers/esm/extends';\nimport * as THREE from 'three';\nimport * as React from 'react';\nimport { extend, useFrame } from '@react-three/fiber';\nimport mergeRefs from 'react-merge-refs';\nimport Composer from 'react-composer';\n\nvar _instanceLocalMatrix = /*@__PURE__*/new THREE.Matrix4();\n\nvar _instanceWorldMatrix = /*@__PURE__*/new THREE.Matrix4();\n\nvar _instanceIntersects = [];\n\nvar _mesh = /*@__PURE__*/new THREE.Mesh();\n\nvar PositionMesh = /*#__PURE__*/function (_THREE$Group) {\n  _inherits(PositionMesh, _THREE$Group);\n\n  var _super = _createSuper(PositionMesh);\n\n  function PositionMesh() {\n    var _this;\n\n    _classCallCheck(this, PositionMesh);\n\n    _this = _super.call(this);\n    _this.color = new THREE.Color('white');\n    _this.instance = {\n      current: undefined\n    };\n    _this.instanceKey = {\n      current: undefined\n    };\n    return _this;\n  } // This will allow the virtual instance have bounds\n\n\n  _createClass(PositionMesh, [{\n    key: \"geometry\",\n    get: function get() {\n      var _this$instance$curren;\n\n      return (_this$instance$curren = this.instance.current) == null ? void 0 : _this$instance$curren.geometry;\n    } // And this will allow the virtual instance to receive events\n\n  }, {\n    key: \"raycast\",\n    value: function raycast(raycaster, intersects) {\n      var parent = this.instance.current;\n      if (!parent) return;\n      if (!parent.geometry || !parent.material) return;\n      _mesh.geometry = parent.geometry;\n      var matrixWorld = parent.matrixWorld;\n      var instanceId = parent.userData.instances.indexOf(this.instanceKey); // If the instance wasn't found or exceeds the parents draw range, bail out\n\n      if (instanceId === -1 || instanceId > parent.count) return; // calculate the world matrix for each instance\n\n      parent.getMatrixAt(instanceId, _instanceLocalMatrix);\n\n      _instanceWorldMatrix.multiplyMatrices(matrixWorld, _instanceLocalMatrix); // the mesh represents this single instance\n\n\n      _mesh.matrixWorld = _instanceWorldMatrix; // raycast side according to instance material\n\n      if (parent.material instanceof THREE.Material) _mesh.material.side = parent.material.side;else _mesh.material.side = parent.material[0].side;\n\n      _mesh.raycast(raycaster, _instanceIntersects); // process the result of raycast\n\n\n      for (var i = 0, l = _instanceIntersects.length; i < l; i++) {\n        var intersect = _instanceIntersects[i];\n        intersect.instanceId = instanceId;\n        intersect.object = this;\n        intersects.push(intersect);\n      }\n\n      _instanceIntersects.length = 0;\n    }\n  }]);\n\n  return PositionMesh;\n}(THREE.Group);\n\nvar globalContext = /*@__PURE__*/React.createContext(null);\nvar parentMatrix = /*@__PURE__*/new THREE.Matrix4();\nvar instanceMatrix = /*@__PURE__*/new THREE.Matrix4();\nvar tempMatrix = /*@__PURE__*/new THREE.Matrix4();\nvar translation = /*@__PURE__*/new THREE.Vector3();\nvar rotation = /*@__PURE__*/new THREE.Quaternion();\nvar scale = /*@__PURE__*/new THREE.Vector3();\nvar Instance = /*#__PURE__*/React.forwardRef(function (_ref, ref) {\n  var context = _ref.context,\n      children = _ref.children,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  React.useMemo(function () {\n    return extend({\n      PositionMesh: PositionMesh\n    });\n  }, []);\n  var group = React.useRef();\n\n  var _React$useContext = React.useContext(context || globalContext),\n      subscribe = _React$useContext.subscribe,\n      getParent = _React$useContext.getParent;\n\n  React.useLayoutEffect(function () {\n    return subscribe(group);\n  }, []);\n  return /*#__PURE__*/React.createElement(\"positionMesh\", _extends({\n    instance: getParent(),\n    instanceKey: group,\n    ref: mergeRefs([ref, group])\n  }, props), children);\n});\nvar Instances = /*#__PURE__*/React.forwardRef(function (_ref2, ref) {\n  var children = _ref2.children,\n      range = _ref2.range,\n      _ref2$limit = _ref2.limit,\n      limit = _ref2$limit === void 0 ? 1000 : _ref2$limit,\n      _ref2$frames = _ref2.frames,\n      frames = _ref2$frames === void 0 ? Infinity : _ref2$frames,\n      props = _objectWithoutProperties(_ref2, _excluded2);\n\n  var _React$useState = React.useState(function () {\n    var context = /*#__PURE__*/React.createContext(null);\n    return {\n      context: context,\n      instance: /*#__PURE__*/React.forwardRef(function (props, ref) {\n        return /*#__PURE__*/React.createElement(Instance, _extends({\n          context: context\n        }, props, {\n          ref: ref\n        }));\n      })\n    };\n  }),\n      _React$useState2 = _slicedToArray(_React$useState, 1),\n      _React$useState2$ = _React$useState2[0],\n      context = _React$useState2$.context,\n      instance = _React$useState2$.instance;\n\n  var parentRef = React.useRef(null);\n\n  var _React$useState3 = React.useState([]),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      instances = _React$useState4[0],\n      setInstances = _React$useState4[1];\n\n  var _React$useState5 = React.useState(function () {\n    var mArray = new Float32Array(limit * 16);\n\n    for (var i = 0; i < limit; i++) {\n      tempMatrix.identity().toArray(mArray, i * 16);\n    }\n\n    return [mArray, new Float32Array(_toConsumableArray(new Array(limit * 3)).map(function () {\n      return 1;\n    }))];\n  }),\n      _React$useState6 = _slicedToArray(_React$useState5, 1),\n      _React$useState6$ = _slicedToArray(_React$useState6[0], 2),\n      matrices = _React$useState6$[0],\n      colors = _React$useState6$[1];\n\n  React.useEffect(function () {\n    // We might be a frame too late? 🤷‍♂️\n    parentRef.current.instanceMatrix.needsUpdate = true;\n  });\n  var count = 0;\n  var updateRange = 0;\n  useFrame(function () {\n    if (frames === Infinity || count < frames) {\n      parentRef.current.updateMatrix();\n      parentRef.current.updateMatrixWorld();\n      parentMatrix.copy(parentRef.current.matrixWorld).invert();\n      updateRange = Math.min(limit, range !== undefined ? range : limit, instances.length);\n      parentRef.current.count = updateRange;\n      parentRef.current.instanceMatrix.updateRange.count = updateRange * 16;\n      parentRef.current.instanceColor.updateRange.count = updateRange * 3;\n\n      for (var i = 0; i < instances.length; i++) {\n        var _instance = instances[i].current; // Multiply the inverse of the InstancedMesh world matrix or else\n        // Instances will be double-transformed if <Instances> isn't at identity\n\n        _instance.matrixWorld.decompose(translation, rotation, scale);\n\n        instanceMatrix.compose(translation, rotation, scale).premultiply(parentMatrix);\n        instanceMatrix.toArray(matrices, i * 16);\n        parentRef.current.instanceMatrix.needsUpdate = true;\n\n        _instance.color.toArray(colors, i * 3);\n\n        parentRef.current.instanceColor.needsUpdate = true;\n      }\n\n      count++;\n    }\n  });\n  var api = React.useMemo(function () {\n    return {\n      getParent: function getParent() {\n        return parentRef;\n      },\n      subscribe: function subscribe(ref) {\n        setInstances(function (instances) {\n          return [].concat(_toConsumableArray(instances), [ref]);\n        });\n        return function () {\n          return setInstances(function (instances) {\n            return instances.filter(function (item) {\n              return item.current !== ref.current;\n            });\n          });\n        };\n      }\n    };\n  }, []);\n  return /*#__PURE__*/React.createElement(\"instancedMesh\", _extends({\n    userData: {\n      instances: instances\n    },\n    matrixAutoUpdate: false,\n    ref: mergeRefs([ref, parentRef]),\n    args: [null, null, 0],\n    raycast: function raycast() {\n      return null;\n    }\n  }, props), /*#__PURE__*/React.createElement(\"instancedBufferAttribute\", {\n    attach: \"instanceMatrix\",\n    count: matrices.length / 16,\n    array: matrices,\n    itemSize: 16,\n    usage: THREE.DynamicDrawUsage\n  }), /*#__PURE__*/React.createElement(\"instancedBufferAttribute\", {\n    attach: \"instanceColor\",\n    count: colors.length / 3,\n    array: colors,\n    itemSize: 3,\n    usage: THREE.DynamicDrawUsage\n  }), typeof children === 'function' ? /*#__PURE__*/React.createElement(context.Provider, {\n    value: api\n  }, children(instance)) : /*#__PURE__*/React.createElement(globalContext.Provider, {\n    value: api\n  }, children));\n});\nvar Merged = /*#__PURE__*/React.forwardRef(function Merged(_ref3, ref) {\n  var meshes = _ref3.meshes,\n      children = _ref3.children,\n      props = _objectWithoutProperties(_ref3, _excluded3);\n\n  var isArray = Array.isArray(meshes); // Filter out meshes from collections, which may contain non-meshes\n\n  if (!isArray) for (var _i = 0, _Object$keys = Object.keys(meshes); _i < _Object$keys.length; _i++) {\n    var key = _Object$keys[_i];\n    if (!meshes[key].isMesh) delete meshes[key];\n  }\n  return /*#__PURE__*/React.createElement(\"group\", {\n    ref: ref\n  }, /*#__PURE__*/React.createElement(Composer, {\n    components: (isArray ? meshes : Object.values(meshes)).map(function (_ref4) {\n      var geometry = _ref4.geometry,\n          material = _ref4.material;\n      return /*#__PURE__*/React.createElement(Instances, _extends({\n        key: geometry.uuid,\n        geometry: geometry,\n        material: material\n      }, props));\n    })\n  }, function (args) {\n    return isArray ? children.apply(void 0, _toConsumableArray(args)) : children(Object.keys(meshes).filter(function (key) {\n      return meshes[key].isMesh;\n    }).reduce(function (acc, key, i) {\n      return _objectSpread(_objectSpread({}, acc), {}, _defineProperty({}, key, args[i]));\n    }, {}));\n  }));\n});\nexport { Instance, Instances, Merged };","map":{"version":3,"names":["_extends","THREE","React","extend","useFrame","mergeRefs","Composer","_instanceLocalMatrix","Matrix4","_instanceWorldMatrix","_instanceIntersects","_mesh","Mesh","PositionMesh","color","Color","instance","current","undefined","instanceKey","_this$instance$curren","geometry","raycaster","intersects","parent","material","matrixWorld","instanceId","userData","instances","indexOf","count","getMatrixAt","multiplyMatrices","Material","side","raycast","i","l","length","intersect","object","push","Group","globalContext","createContext","parentMatrix","instanceMatrix","tempMatrix","translation","Vector3","rotation","Quaternion","scale","Instance","forwardRef","ref","context","children","props","useMemo","group","useRef","useContext","subscribe","getParent","useLayoutEffect","createElement","Instances","range","limit","frames","Infinity","useState","parentRef","setInstances","mArray","Float32Array","identity","toArray","Array","map","matrices","colors","useEffect","needsUpdate","updateRange","updateMatrix","updateMatrixWorld","copy","invert","Math","min","instanceColor","decompose","compose","premultiply","api","filter","item","matrixAutoUpdate","args","attach","array","itemSize","usage","DynamicDrawUsage","Provider","value","Merged","meshes","isArray","Object","keys","key","isMesh","components","values","uuid","reduce","acc"],"sources":["/Users/crushedsummers/Documents/GitHub/raphaeleg.github.io/node_modules/@react-three/drei/core/Instances.js"],"sourcesContent":["import _extends from '@babel/runtime/helpers/esm/extends';\nimport * as THREE from 'three';\nimport * as React from 'react';\nimport { extend, useFrame } from '@react-three/fiber';\nimport mergeRefs from 'react-merge-refs';\nimport Composer from 'react-composer';\n\nconst _instanceLocalMatrix = /*@__PURE__*/new THREE.Matrix4();\n\nconst _instanceWorldMatrix = /*@__PURE__*/new THREE.Matrix4();\n\nconst _instanceIntersects = [];\n\nconst _mesh = /*@__PURE__*/new THREE.Mesh();\n\nclass PositionMesh extends THREE.Group {\n  constructor() {\n    super();\n    this.color = new THREE.Color('white');\n    this.instance = {\n      current: undefined\n    };\n    this.instanceKey = {\n      current: undefined\n    };\n  } // This will allow the virtual instance have bounds\n\n\n  get geometry() {\n    var _this$instance$curren;\n\n    return (_this$instance$curren = this.instance.current) == null ? void 0 : _this$instance$curren.geometry;\n  } // And this will allow the virtual instance to receive events\n\n\n  raycast(raycaster, intersects) {\n    const parent = this.instance.current;\n    if (!parent) return;\n    if (!parent.geometry || !parent.material) return;\n    _mesh.geometry = parent.geometry;\n    const matrixWorld = parent.matrixWorld;\n    const instanceId = parent.userData.instances.indexOf(this.instanceKey); // If the instance wasn't found or exceeds the parents draw range, bail out\n\n    if (instanceId === -1 || instanceId > parent.count) return; // calculate the world matrix for each instance\n\n    parent.getMatrixAt(instanceId, _instanceLocalMatrix);\n\n    _instanceWorldMatrix.multiplyMatrices(matrixWorld, _instanceLocalMatrix); // the mesh represents this single instance\n\n\n    _mesh.matrixWorld = _instanceWorldMatrix; // raycast side according to instance material\n\n    if (parent.material instanceof THREE.Material) _mesh.material.side = parent.material.side;else _mesh.material.side = parent.material[0].side;\n\n    _mesh.raycast(raycaster, _instanceIntersects); // process the result of raycast\n\n\n    for (let i = 0, l = _instanceIntersects.length; i < l; i++) {\n      const intersect = _instanceIntersects[i];\n      intersect.instanceId = instanceId;\n      intersect.object = this;\n      intersects.push(intersect);\n    }\n\n    _instanceIntersects.length = 0;\n  }\n\n}\n\nconst globalContext = /*@__PURE__*/React.createContext(null);\nconst parentMatrix = /*@__PURE__*/new THREE.Matrix4();\nconst instanceMatrix = /*@__PURE__*/new THREE.Matrix4();\nconst tempMatrix = /*@__PURE__*/new THREE.Matrix4();\nconst translation = /*@__PURE__*/new THREE.Vector3();\nconst rotation = /*@__PURE__*/new THREE.Quaternion();\nconst scale = /*@__PURE__*/new THREE.Vector3();\nconst Instance = /*#__PURE__*/React.forwardRef(({\n  context,\n  children,\n  ...props\n}, ref) => {\n  React.useMemo(() => extend({\n    PositionMesh\n  }), []);\n  const group = React.useRef();\n  const {\n    subscribe,\n    getParent\n  } = React.useContext(context || globalContext);\n  React.useLayoutEffect(() => subscribe(group), []);\n  return /*#__PURE__*/React.createElement(\"positionMesh\", _extends({\n    instance: getParent(),\n    instanceKey: group,\n    ref: mergeRefs([ref, group])\n  }, props), children);\n});\nconst Instances = /*#__PURE__*/React.forwardRef(({\n  children,\n  range,\n  limit = 1000,\n  frames = Infinity,\n  ...props\n}, ref) => {\n  const [{\n    context,\n    instance\n  }] = React.useState(() => {\n    const context = /*#__PURE__*/React.createContext(null);\n    return {\n      context,\n      instance: /*#__PURE__*/React.forwardRef((props, ref) => /*#__PURE__*/React.createElement(Instance, _extends({\n        context: context\n      }, props, {\n        ref: ref\n      })))\n    };\n  });\n  const parentRef = React.useRef(null);\n  const [instances, setInstances] = React.useState([]);\n  const [[matrices, colors]] = React.useState(() => {\n    const mArray = new Float32Array(limit * 16);\n\n    for (let i = 0; i < limit; i++) tempMatrix.identity().toArray(mArray, i * 16);\n\n    return [mArray, new Float32Array([...new Array(limit * 3)].map(() => 1))];\n  });\n  React.useEffect(() => {\n    // We might be a frame too late? 🤷‍♂️\n    parentRef.current.instanceMatrix.needsUpdate = true;\n  });\n  let count = 0;\n  let updateRange = 0;\n  useFrame(() => {\n    if (frames === Infinity || count < frames) {\n      parentRef.current.updateMatrix();\n      parentRef.current.updateMatrixWorld();\n      parentMatrix.copy(parentRef.current.matrixWorld).invert();\n      updateRange = Math.min(limit, range !== undefined ? range : limit, instances.length);\n      parentRef.current.count = updateRange;\n      parentRef.current.instanceMatrix.updateRange.count = updateRange * 16;\n      parentRef.current.instanceColor.updateRange.count = updateRange * 3;\n\n      for (let i = 0; i < instances.length; i++) {\n        const instance = instances[i].current; // Multiply the inverse of the InstancedMesh world matrix or else\n        // Instances will be double-transformed if <Instances> isn't at identity\n\n        instance.matrixWorld.decompose(translation, rotation, scale);\n        instanceMatrix.compose(translation, rotation, scale).premultiply(parentMatrix);\n        instanceMatrix.toArray(matrices, i * 16);\n        parentRef.current.instanceMatrix.needsUpdate = true;\n        instance.color.toArray(colors, i * 3);\n        parentRef.current.instanceColor.needsUpdate = true;\n      }\n\n      count++;\n    }\n  });\n  const api = React.useMemo(() => ({\n    getParent: () => parentRef,\n    subscribe: ref => {\n      setInstances(instances => [...instances, ref]);\n      return () => setInstances(instances => instances.filter(item => item.current !== ref.current));\n    }\n  }), []);\n  return /*#__PURE__*/React.createElement(\"instancedMesh\", _extends({\n    userData: {\n      instances\n    },\n    matrixAutoUpdate: false,\n    ref: mergeRefs([ref, parentRef]),\n    args: [null, null, 0],\n    raycast: () => null\n  }, props), /*#__PURE__*/React.createElement(\"instancedBufferAttribute\", {\n    attach: \"instanceMatrix\",\n    count: matrices.length / 16,\n    array: matrices,\n    itemSize: 16,\n    usage: THREE.DynamicDrawUsage\n  }), /*#__PURE__*/React.createElement(\"instancedBufferAttribute\", {\n    attach: \"instanceColor\",\n    count: colors.length / 3,\n    array: colors,\n    itemSize: 3,\n    usage: THREE.DynamicDrawUsage\n  }), typeof children === 'function' ? /*#__PURE__*/React.createElement(context.Provider, {\n    value: api\n  }, children(instance)) : /*#__PURE__*/React.createElement(globalContext.Provider, {\n    value: api\n  }, children));\n});\nconst Merged = /*#__PURE__*/React.forwardRef(function Merged({\n  meshes,\n  children,\n  ...props\n}, ref) {\n  const isArray = Array.isArray(meshes); // Filter out meshes from collections, which may contain non-meshes\n\n  if (!isArray) for (const key of Object.keys(meshes)) if (!meshes[key].isMesh) delete meshes[key];\n  return /*#__PURE__*/React.createElement(\"group\", {\n    ref: ref\n  }, /*#__PURE__*/React.createElement(Composer, {\n    components: (isArray ? meshes : Object.values(meshes)).map(({\n      geometry,\n      material\n    }) => /*#__PURE__*/React.createElement(Instances, _extends({\n      key: geometry.uuid,\n      geometry: geometry,\n      material: material\n    }, props)))\n  }, args => isArray ? children(...args) : children(Object.keys(meshes).filter(key => meshes[key].isMesh).reduce((acc, key, i) => ({ ...acc,\n    [key]: args[i]\n  }), {}))));\n});\n\nexport { Instance, Instances, Merged };\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}