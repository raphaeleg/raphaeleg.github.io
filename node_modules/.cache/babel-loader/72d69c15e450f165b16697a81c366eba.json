{"ast":null,"code":"import { extend } from '../../shared/utils.js';\n\nvar isGridEnabled = function isGridEnabled(swiper, params) {\n  return swiper.grid && params.grid && params.grid.rows > 1;\n};\n\nexport default function setBreakpoint() {\n  var swiper = this;\n  var realIndex = swiper.realIndex,\n      initialized = swiper.initialized,\n      params = swiper.params,\n      el = swiper.el;\n  var breakpoints = params.breakpoints;\n  if (!breakpoints || breakpoints && Object.keys(breakpoints).length === 0) return; // Get breakpoint for window width and update parameters\n\n  var breakpoint = swiper.getBreakpoint(breakpoints, swiper.params.breakpointsBase, swiper.el);\n  if (!breakpoint || swiper.currentBreakpoint === breakpoint) return;\n  var breakpointOnlyParams = breakpoint in breakpoints ? breakpoints[breakpoint] : undefined;\n  var breakpointParams = breakpointOnlyParams || swiper.originalParams;\n  var wasMultiRow = isGridEnabled(swiper, params);\n  var isMultiRow = isGridEnabled(swiper, breakpointParams);\n  var wasEnabled = params.enabled;\n\n  if (wasMultiRow && !isMultiRow) {\n    el.classList.remove(\"\".concat(params.containerModifierClass, \"grid\"), \"\".concat(params.containerModifierClass, \"grid-column\"));\n    swiper.emitContainerClasses();\n  } else if (!wasMultiRow && isMultiRow) {\n    el.classList.add(\"\".concat(params.containerModifierClass, \"grid\"));\n\n    if (breakpointParams.grid.fill && breakpointParams.grid.fill === 'column' || !breakpointParams.grid.fill && params.grid.fill === 'column') {\n      el.classList.add(\"\".concat(params.containerModifierClass, \"grid-column\"));\n    }\n\n    swiper.emitContainerClasses();\n  } // Toggle navigation, pagination, scrollbar\n\n\n  ['navigation', 'pagination', 'scrollbar'].forEach(function (prop) {\n    var wasModuleEnabled = params[prop] && params[prop].enabled;\n    var isModuleEnabled = breakpointParams[prop] && breakpointParams[prop].enabled;\n\n    if (wasModuleEnabled && !isModuleEnabled) {\n      swiper[prop].disable();\n    }\n\n    if (!wasModuleEnabled && isModuleEnabled) {\n      swiper[prop].enable();\n    }\n  });\n  var directionChanged = breakpointParams.direction && breakpointParams.direction !== params.direction;\n  var needsReLoop = params.loop && (breakpointParams.slidesPerView !== params.slidesPerView || directionChanged);\n\n  if (directionChanged && initialized) {\n    swiper.changeDirection();\n  }\n\n  extend(swiper.params, breakpointParams);\n  var isEnabled = swiper.params.enabled;\n  Object.assign(swiper, {\n    allowTouchMove: swiper.params.allowTouchMove,\n    allowSlideNext: swiper.params.allowSlideNext,\n    allowSlidePrev: swiper.params.allowSlidePrev\n  });\n\n  if (wasEnabled && !isEnabled) {\n    swiper.disable();\n  } else if (!wasEnabled && isEnabled) {\n    swiper.enable();\n  }\n\n  swiper.currentBreakpoint = breakpoint;\n  swiper.emit('_beforeBreakpoint', breakpointParams);\n\n  if (needsReLoop && initialized) {\n    swiper.loopDestroy();\n    swiper.loopCreate(realIndex);\n    swiper.updateSlides();\n  }\n\n  swiper.emit('breakpoint', breakpointParams);\n}","map":{"version":3,"names":["extend","isGridEnabled","swiper","params","grid","rows","setBreakpoint","realIndex","initialized","el","breakpoints","Object","keys","length","breakpoint","getBreakpoint","breakpointsBase","currentBreakpoint","breakpointOnlyParams","undefined","breakpointParams","originalParams","wasMultiRow","isMultiRow","wasEnabled","enabled","classList","remove","containerModifierClass","emitContainerClasses","add","fill","forEach","prop","wasModuleEnabled","isModuleEnabled","disable","enable","directionChanged","direction","needsReLoop","loop","slidesPerView","changeDirection","isEnabled","assign","allowTouchMove","allowSlideNext","allowSlidePrev","emit","loopDestroy","loopCreate","updateSlides"],"sources":["/Users/crushedsummers/Desktop/Work/Application/portfolio22/node_modules/swiper/core/breakpoints/setBreakpoint.js"],"sourcesContent":["import { extend } from '../../shared/utils.js';\nconst isGridEnabled = (swiper, params) => {\n  return swiper.grid && params.grid && params.grid.rows > 1;\n};\nexport default function setBreakpoint() {\n  const swiper = this;\n  const {\n    realIndex,\n    initialized,\n    params,\n    el\n  } = swiper;\n  const breakpoints = params.breakpoints;\n  if (!breakpoints || breakpoints && Object.keys(breakpoints).length === 0) return;\n\n  // Get breakpoint for window width and update parameters\n  const breakpoint = swiper.getBreakpoint(breakpoints, swiper.params.breakpointsBase, swiper.el);\n  if (!breakpoint || swiper.currentBreakpoint === breakpoint) return;\n  const breakpointOnlyParams = breakpoint in breakpoints ? breakpoints[breakpoint] : undefined;\n  const breakpointParams = breakpointOnlyParams || swiper.originalParams;\n  const wasMultiRow = isGridEnabled(swiper, params);\n  const isMultiRow = isGridEnabled(swiper, breakpointParams);\n  const wasEnabled = params.enabled;\n  if (wasMultiRow && !isMultiRow) {\n    el.classList.remove(`${params.containerModifierClass}grid`, `${params.containerModifierClass}grid-column`);\n    swiper.emitContainerClasses();\n  } else if (!wasMultiRow && isMultiRow) {\n    el.classList.add(`${params.containerModifierClass}grid`);\n    if (breakpointParams.grid.fill && breakpointParams.grid.fill === 'column' || !breakpointParams.grid.fill && params.grid.fill === 'column') {\n      el.classList.add(`${params.containerModifierClass}grid-column`);\n    }\n    swiper.emitContainerClasses();\n  }\n\n  // Toggle navigation, pagination, scrollbar\n  ['navigation', 'pagination', 'scrollbar'].forEach(prop => {\n    const wasModuleEnabled = params[prop] && params[prop].enabled;\n    const isModuleEnabled = breakpointParams[prop] && breakpointParams[prop].enabled;\n    if (wasModuleEnabled && !isModuleEnabled) {\n      swiper[prop].disable();\n    }\n    if (!wasModuleEnabled && isModuleEnabled) {\n      swiper[prop].enable();\n    }\n  });\n  const directionChanged = breakpointParams.direction && breakpointParams.direction !== params.direction;\n  const needsReLoop = params.loop && (breakpointParams.slidesPerView !== params.slidesPerView || directionChanged);\n  if (directionChanged && initialized) {\n    swiper.changeDirection();\n  }\n  extend(swiper.params, breakpointParams);\n  const isEnabled = swiper.params.enabled;\n  Object.assign(swiper, {\n    allowTouchMove: swiper.params.allowTouchMove,\n    allowSlideNext: swiper.params.allowSlideNext,\n    allowSlidePrev: swiper.params.allowSlidePrev\n  });\n  if (wasEnabled && !isEnabled) {\n    swiper.disable();\n  } else if (!wasEnabled && isEnabled) {\n    swiper.enable();\n  }\n  swiper.currentBreakpoint = breakpoint;\n  swiper.emit('_beforeBreakpoint', breakpointParams);\n  if (needsReLoop && initialized) {\n    swiper.loopDestroy();\n    swiper.loopCreate(realIndex);\n    swiper.updateSlides();\n  }\n  swiper.emit('breakpoint', breakpointParams);\n}"],"mappings":"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"},"metadata":{},"sourceType":"module"}