{"ast":null,"code":"import _objectSpread from \"/Users/crushedsummers/Documents/GitHub/raphaeleg.github.io/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport _slicedToArray from \"/Users/crushedsummers/Documents/GitHub/raphaeleg.github.io/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nimport _objectWithoutProperties from \"/Users/crushedsummers/Documents/GitHub/raphaeleg.github.io/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js\";\nvar _excluded = [\"scale\", \"frames\", \"opacity\", \"width\", \"height\", \"blur\", \"far\", \"resolution\", \"smooth\", \"color\", \"depthWrite\", \"renderOrder\"];\nimport _extends from '@babel/runtime/helpers/esm/extends';\nimport * as React from 'react';\nimport * as THREE from 'three';\nimport { useThree, useFrame } from '@react-three/fiber';\nimport { HorizontalBlurShader, VerticalBlurShader } from 'three-stdlib';\nvar ContactShadows = /*#__PURE__*/React.forwardRef(function (_ref, fref) {\n  var _ref$scale = _ref.scale,\n      scale = _ref$scale === void 0 ? 10 : _ref$scale,\n      _ref$frames = _ref.frames,\n      frames = _ref$frames === void 0 ? Infinity : _ref$frames,\n      _ref$opacity = _ref.opacity,\n      opacity = _ref$opacity === void 0 ? 1 : _ref$opacity,\n      _ref$width = _ref.width,\n      width = _ref$width === void 0 ? 1 : _ref$width,\n      _ref$height = _ref.height,\n      height = _ref$height === void 0 ? 1 : _ref$height,\n      _ref$blur = _ref.blur,\n      blur = _ref$blur === void 0 ? 1 : _ref$blur,\n      _ref$far = _ref.far,\n      far = _ref$far === void 0 ? 10 : _ref$far,\n      _ref$resolution = _ref.resolution,\n      resolution = _ref$resolution === void 0 ? 512 : _ref$resolution,\n      _ref$smooth = _ref.smooth,\n      smooth = _ref$smooth === void 0 ? true : _ref$smooth,\n      _ref$color = _ref.color,\n      color = _ref$color === void 0 ? '#000000' : _ref$color,\n      _ref$depthWrite = _ref.depthWrite,\n      depthWrite = _ref$depthWrite === void 0 ? false : _ref$depthWrite,\n      renderOrder = _ref.renderOrder,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  var ref = React.useRef(null);\n  var scene = useThree(function (state) {\n    return state.scene;\n  });\n  var gl = useThree(function (state) {\n    return state.gl;\n  });\n  var shadowCamera = React.useRef(null);\n  width = width * (Array.isArray(scale) ? scale[0] : scale || 1);\n  height = height * (Array.isArray(scale) ? scale[1] : scale || 1);\n\n  var _React$useMemo = React.useMemo(function () {\n    var renderTarget = new THREE.WebGLRenderTarget(resolution, resolution);\n    var renderTargetBlur = new THREE.WebGLRenderTarget(resolution, resolution);\n    renderTargetBlur.texture.generateMipmaps = renderTarget.texture.generateMipmaps = false;\n    var planeGeometry = new THREE.PlaneGeometry(width, height).rotateX(Math.PI / 2);\n    var blurPlane = new THREE.Mesh(planeGeometry);\n    var depthMaterial = new THREE.MeshDepthMaterial();\n    depthMaterial.depthTest = depthMaterial.depthWrite = false;\n\n    depthMaterial.onBeforeCompile = function (shader) {\n      shader.uniforms = _objectSpread(_objectSpread({}, shader.uniforms), {}, {\n        ucolor: {\n          value: new THREE.Color(color)\n        }\n      });\n      shader.fragmentShader = shader.fragmentShader.replace(\"void main() {\", //\n      \"uniform vec3 ucolor;\\n           void main() {\\n          \");\n      shader.fragmentShader = shader.fragmentShader.replace('vec4( vec3( 1.0 - fragCoordZ ), opacity );', // Colorize the shadow, multiply by the falloff so that the center can remain darker\n      'vec4( ucolor * fragCoordZ * 2.0, ( 1.0 - fragCoordZ ) * 1.0 );');\n    };\n\n    var horizontalBlurMaterial = new THREE.ShaderMaterial(HorizontalBlurShader);\n    var verticalBlurMaterial = new THREE.ShaderMaterial(VerticalBlurShader);\n    verticalBlurMaterial.depthTest = horizontalBlurMaterial.depthTest = false;\n    return [renderTarget, planeGeometry, depthMaterial, blurPlane, horizontalBlurMaterial, verticalBlurMaterial, renderTargetBlur];\n  }, [resolution, width, height, scale, color]),\n      _React$useMemo2 = _slicedToArray(_React$useMemo, 7),\n      renderTarget = _React$useMemo2[0],\n      planeGeometry = _React$useMemo2[1],\n      depthMaterial = _React$useMemo2[2],\n      blurPlane = _React$useMemo2[3],\n      horizontalBlurMaterial = _React$useMemo2[4],\n      verticalBlurMaterial = _React$useMemo2[5],\n      renderTargetBlur = _React$useMemo2[6];\n\n  var blurShadows = function blurShadows(blur) {\n    blurPlane.visible = true;\n    blurPlane.material = horizontalBlurMaterial;\n    horizontalBlurMaterial.uniforms.tDiffuse.value = renderTarget.texture;\n    horizontalBlurMaterial.uniforms.h.value = blur * 1 / 256;\n    gl.setRenderTarget(renderTargetBlur);\n    gl.render(blurPlane, shadowCamera.current);\n    blurPlane.material = verticalBlurMaterial;\n    verticalBlurMaterial.uniforms.tDiffuse.value = renderTargetBlur.texture;\n    verticalBlurMaterial.uniforms.v.value = blur * 1 / 256;\n    gl.setRenderTarget(renderTarget);\n    gl.render(blurPlane, shadowCamera.current);\n    blurPlane.visible = false;\n  };\n\n  var count = 0;\n  var initialBackground;\n  var initialOverrideMaterial;\n  useFrame(function () {\n    if (shadowCamera.current && (frames === Infinity || count < frames)) {\n      count++;\n      initialBackground = scene.background;\n      initialOverrideMaterial = scene.overrideMaterial;\n      ref.current.visible = false;\n      scene.background = null;\n      scene.overrideMaterial = depthMaterial;\n      gl.setRenderTarget(renderTarget);\n      gl.render(scene, shadowCamera.current);\n      blurShadows(blur);\n      if (smooth) blurShadows(blur * 0.4);\n      gl.setRenderTarget(null);\n      ref.current.visible = true;\n      scene.overrideMaterial = initialOverrideMaterial;\n      scene.background = initialBackground;\n    }\n  });\n  React.useImperativeHandle(fref, function () {\n    return ref.current;\n  }, []);\n  return /*#__PURE__*/React.createElement(\"group\", _extends({\n    \"rotation-x\": Math.PI / 2\n  }, props, {\n    ref: ref\n  }), /*#__PURE__*/React.createElement(\"mesh\", {\n    renderOrder: renderOrder,\n    geometry: planeGeometry,\n    scale: [1, -1, 1],\n    rotation: [-Math.PI / 2, 0, 0]\n  }, /*#__PURE__*/React.createElement(\"meshBasicMaterial\", {\n    transparent: true,\n    map: renderTarget.texture,\n    opacity: opacity,\n    depthWrite: depthWrite\n  })), /*#__PURE__*/React.createElement(\"orthographicCamera\", {\n    ref: shadowCamera,\n    args: [-width / 2, width / 2, height / 2, -height / 2, 0, far]\n  }));\n});\nexport { ContactShadows };","map":{"version":3,"names":["_extends","React","THREE","useThree","useFrame","HorizontalBlurShader","VerticalBlurShader","ContactShadows","forwardRef","fref","scale","frames","Infinity","opacity","width","height","blur","far","resolution","smooth","color","depthWrite","renderOrder","props","ref","useRef","scene","state","gl","shadowCamera","Array","isArray","useMemo","renderTarget","WebGLRenderTarget","renderTargetBlur","texture","generateMipmaps","planeGeometry","PlaneGeometry","rotateX","Math","PI","blurPlane","Mesh","depthMaterial","MeshDepthMaterial","depthTest","onBeforeCompile","shader","uniforms","ucolor","value","Color","fragmentShader","replace","horizontalBlurMaterial","ShaderMaterial","verticalBlurMaterial","blurShadows","visible","material","tDiffuse","h","setRenderTarget","render","current","v","count","initialBackground","initialOverrideMaterial","background","overrideMaterial","useImperativeHandle","createElement","geometry","rotation","transparent","map","args"],"sources":["/Users/crushedsummers/Documents/GitHub/raphaeleg.github.io/node_modules/@react-three/drei/core/ContactShadows.js"],"sourcesContent":["import _extends from '@babel/runtime/helpers/esm/extends';\nimport * as React from 'react';\nimport * as THREE from 'three';\nimport { useThree, useFrame } from '@react-three/fiber';\nimport { HorizontalBlurShader, VerticalBlurShader } from 'three-stdlib';\n\nconst ContactShadows = /*#__PURE__*/React.forwardRef(({\n  scale = 10,\n  frames = Infinity,\n  opacity = 1,\n  width = 1,\n  height = 1,\n  blur = 1,\n  far = 10,\n  resolution = 512,\n  smooth = true,\n  color = '#000000',\n  depthWrite = false,\n  renderOrder,\n  ...props\n}, fref) => {\n  const ref = React.useRef(null);\n  const scene = useThree(state => state.scene);\n  const gl = useThree(state => state.gl);\n  const shadowCamera = React.useRef(null);\n  width = width * (Array.isArray(scale) ? scale[0] : scale || 1);\n  height = height * (Array.isArray(scale) ? scale[1] : scale || 1);\n  const [renderTarget, planeGeometry, depthMaterial, blurPlane, horizontalBlurMaterial, verticalBlurMaterial, renderTargetBlur] = React.useMemo(() => {\n    const renderTarget = new THREE.WebGLRenderTarget(resolution, resolution);\n    const renderTargetBlur = new THREE.WebGLRenderTarget(resolution, resolution);\n    renderTargetBlur.texture.generateMipmaps = renderTarget.texture.generateMipmaps = false;\n    const planeGeometry = new THREE.PlaneGeometry(width, height).rotateX(Math.PI / 2);\n    const blurPlane = new THREE.Mesh(planeGeometry);\n    const depthMaterial = new THREE.MeshDepthMaterial();\n    depthMaterial.depthTest = depthMaterial.depthWrite = false;\n\n    depthMaterial.onBeforeCompile = shader => {\n      shader.uniforms = { ...shader.uniforms,\n        ucolor: {\n          value: new THREE.Color(color)\n        }\n      };\n      shader.fragmentShader = shader.fragmentShader.replace(`void main() {`, //\n      `uniform vec3 ucolor;\n           void main() {\n          `);\n      shader.fragmentShader = shader.fragmentShader.replace('vec4( vec3( 1.0 - fragCoordZ ), opacity );', // Colorize the shadow, multiply by the falloff so that the center can remain darker\n      'vec4( ucolor * fragCoordZ * 2.0, ( 1.0 - fragCoordZ ) * 1.0 );');\n    };\n\n    const horizontalBlurMaterial = new THREE.ShaderMaterial(HorizontalBlurShader);\n    const verticalBlurMaterial = new THREE.ShaderMaterial(VerticalBlurShader);\n    verticalBlurMaterial.depthTest = horizontalBlurMaterial.depthTest = false;\n    return [renderTarget, planeGeometry, depthMaterial, blurPlane, horizontalBlurMaterial, verticalBlurMaterial, renderTargetBlur];\n  }, [resolution, width, height, scale, color]);\n\n  const blurShadows = blur => {\n    blurPlane.visible = true;\n    blurPlane.material = horizontalBlurMaterial;\n    horizontalBlurMaterial.uniforms.tDiffuse.value = renderTarget.texture;\n    horizontalBlurMaterial.uniforms.h.value = blur * 1 / 256;\n    gl.setRenderTarget(renderTargetBlur);\n    gl.render(blurPlane, shadowCamera.current);\n    blurPlane.material = verticalBlurMaterial;\n    verticalBlurMaterial.uniforms.tDiffuse.value = renderTargetBlur.texture;\n    verticalBlurMaterial.uniforms.v.value = blur * 1 / 256;\n    gl.setRenderTarget(renderTarget);\n    gl.render(blurPlane, shadowCamera.current);\n    blurPlane.visible = false;\n  };\n\n  let count = 0;\n  let initialBackground;\n  let initialOverrideMaterial;\n  useFrame(() => {\n    if (shadowCamera.current && (frames === Infinity || count < frames)) {\n      count++;\n      initialBackground = scene.background;\n      initialOverrideMaterial = scene.overrideMaterial;\n      ref.current.visible = false;\n      scene.background = null;\n      scene.overrideMaterial = depthMaterial;\n      gl.setRenderTarget(renderTarget);\n      gl.render(scene, shadowCamera.current);\n      blurShadows(blur);\n      if (smooth) blurShadows(blur * 0.4);\n      gl.setRenderTarget(null);\n      ref.current.visible = true;\n      scene.overrideMaterial = initialOverrideMaterial;\n      scene.background = initialBackground;\n    }\n  });\n  React.useImperativeHandle(fref, () => ref.current, []);\n  return /*#__PURE__*/React.createElement(\"group\", _extends({\n    \"rotation-x\": Math.PI / 2\n  }, props, {\n    ref: ref\n  }), /*#__PURE__*/React.createElement(\"mesh\", {\n    renderOrder: renderOrder,\n    geometry: planeGeometry,\n    scale: [1, -1, 1],\n    rotation: [-Math.PI / 2, 0, 0]\n  }, /*#__PURE__*/React.createElement(\"meshBasicMaterial\", {\n    transparent: true,\n    map: renderTarget.texture,\n    opacity: opacity,\n    depthWrite: depthWrite\n  })), /*#__PURE__*/React.createElement(\"orthographicCamera\", {\n    ref: shadowCamera,\n    args: [-width / 2, width / 2, height / 2, -height / 2, 0, far]\n  }));\n});\n\nexport { ContactShadows };\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}