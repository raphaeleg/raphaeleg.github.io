{"ast":null,"code":"import _extends from '@babel/runtime/helpers/esm/extends';\nimport * as THREE from 'three';\nimport * as React from 'react';\nimport { useThree, createPortal, useFrame } from '@react-three/fiber';\nimport { useFBO } from './useFBO.js';\nconst RenderTexture = /*#__PURE__*/React.forwardRef((_ref, forwardRef) => {\n  let {\n    children,\n    compute,\n    width,\n    height,\n    samples = 8,\n    renderPriority = 0,\n    eventPriority = 0,\n    frames = Infinity,\n    stencilBuffer = false,\n    depthBuffer = true,\n    generateMipmaps = false,\n    ...props\n  } = _ref;\n  const {\n    size,\n    viewport\n  } = useThree();\n  const fbo = useFBO((width || size.width) * viewport.dpr, (height || size.height) * viewport.dpr, {\n    samples,\n    stencilBuffer,\n    depthBuffer,\n    generateMipmaps\n  });\n  const [vScene] = React.useState(() => new THREE.Scene());\n  const uvCompute = React.useCallback((event, state, previous) => {\n    var _fbo$texture, _previous$previousRoo; // Since this is only a texture it does not have an easy way to obtain the parent, which we\n    // need to transform event coordinates to local coordinates. We use r3f internals to find the\n    // next Object3D.\n\n\n    let parent = (_fbo$texture = fbo.texture) == null ? void 0 : _fbo$texture.__r3f.parent;\n\n    while (parent && !(parent instanceof THREE.Object3D)) {\n      parent = parent.__r3f.parent;\n    }\n\n    if (!parent) return false; // First we call the previous state-onion-layers compute, this is what makes it possible to nest portals\n\n    if (!previous.raycaster.camera) previous.events.compute(event, previous, (_previous$previousRoo = previous.previousRoot) == null ? void 0 : _previous$previousRoo.getState()); // We run a quick check against the parent, if it isn't hit there's no need to raycast at all\n\n    const [intersection] = previous.raycaster.intersectObject(parent);\n    if (!intersection) return false; // We take that hits uv coords, set up this layers raycaster, et voilà, we have raycasting on arbitrary surfaces\n\n    const uv = intersection.uv;\n    if (!uv) return false;\n    state.raycaster.setFromCamera(state.pointer.set(uv.x * 2 - 1, uv.y * 2 - 1), state.camera);\n  }, []);\n  React.useImperativeHandle(forwardRef, () => fbo.texture, [fbo]);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, createPortal( /*#__PURE__*/React.createElement(Container, {\n    renderPriority: renderPriority,\n    frames: frames,\n    fbo: fbo\n  }, children), vScene, {\n    events: {\n      compute: compute || uvCompute,\n      priority: eventPriority\n    }\n  }), /*#__PURE__*/React.createElement(\"primitive\", _extends({\n    object: fbo.texture\n  }, props)));\n}); // The container component has to be separate, it can not be inlined because \"useFrame(state\" when run inside createPortal will return\n// the portals own state which includes user-land overrides (custom cameras etc), but if it is executed in <RenderTexture>'s render function\n// it would return the default state.\n\nfunction Container(_ref2) {\n  let {\n    frames,\n    renderPriority,\n    children,\n    fbo\n  } = _ref2;\n  let count = 0;\n  useFrame(state => {\n    if (frames === Infinity || count < frames) {\n      state.gl.setRenderTarget(fbo);\n      state.gl.render(state.scene, state.camera);\n      state.gl.setRenderTarget(null);\n      count++;\n    }\n  }, renderPriority);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, children);\n}\n\nexport { RenderTexture };","map":{"version":3,"names":["_extends","THREE","React","useThree","createPortal","useFrame","useFBO","RenderTexture","forwardRef","children","compute","width","height","samples","renderPriority","eventPriority","frames","Infinity","stencilBuffer","depthBuffer","generateMipmaps","props","size","viewport","fbo","dpr","vScene","useState","Scene","uvCompute","useCallback","event","state","previous","_fbo$texture","_previous$previousRoo","parent","texture","__r3f","Object3D","raycaster","camera","events","previousRoot","getState","intersection","intersectObject","uv","setFromCamera","pointer","set","x","y","useImperativeHandle","createElement","Fragment","Container","priority","object","count","gl","setRenderTarget","render","scene"],"sources":["/Users/crushedsummers/Desktop/Work/Application/portfolio22/node_modules/@react-three/drei/core/RenderTexture.js"],"sourcesContent":["import _extends from '@babel/runtime/helpers/esm/extends';\nimport * as THREE from 'three';\nimport * as React from 'react';\nimport { useThree, createPortal, useFrame } from '@react-three/fiber';\nimport { useFBO } from './useFBO.js';\n\nconst RenderTexture = /*#__PURE__*/React.forwardRef(({\n  children,\n  compute,\n  width,\n  height,\n  samples = 8,\n  renderPriority = 0,\n  eventPriority = 0,\n  frames = Infinity,\n  stencilBuffer = false,\n  depthBuffer = true,\n  generateMipmaps = false,\n  ...props\n}, forwardRef) => {\n  const {\n    size,\n    viewport\n  } = useThree();\n  const fbo = useFBO((width || size.width) * viewport.dpr, (height || size.height) * viewport.dpr, {\n    samples,\n    stencilBuffer,\n    depthBuffer,\n    generateMipmaps\n  });\n  const [vScene] = React.useState(() => new THREE.Scene());\n  const uvCompute = React.useCallback((event, state, previous) => {\n    var _fbo$texture, _previous$previousRoo;\n\n    // Since this is only a texture it does not have an easy way to obtain the parent, which we\n    // need to transform event coordinates to local coordinates. We use r3f internals to find the\n    // next Object3D.\n    let parent = (_fbo$texture = fbo.texture) == null ? void 0 : _fbo$texture.__r3f.parent;\n\n    while (parent && !(parent instanceof THREE.Object3D)) {\n      parent = parent.__r3f.parent;\n    }\n\n    if (!parent) return false; // First we call the previous state-onion-layers compute, this is what makes it possible to nest portals\n\n    if (!previous.raycaster.camera) previous.events.compute(event, previous, (_previous$previousRoo = previous.previousRoot) == null ? void 0 : _previous$previousRoo.getState()); // We run a quick check against the parent, if it isn't hit there's no need to raycast at all\n\n    const [intersection] = previous.raycaster.intersectObject(parent);\n    if (!intersection) return false; // We take that hits uv coords, set up this layers raycaster, et voilà, we have raycasting on arbitrary surfaces\n\n    const uv = intersection.uv;\n    if (!uv) return false;\n    state.raycaster.setFromCamera(state.pointer.set(uv.x * 2 - 1, uv.y * 2 - 1), state.camera);\n  }, []);\n  React.useImperativeHandle(forwardRef, () => fbo.texture, [fbo]);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, createPortal( /*#__PURE__*/React.createElement(Container, {\n    renderPriority: renderPriority,\n    frames: frames,\n    fbo: fbo\n  }, children), vScene, {\n    events: {\n      compute: compute || uvCompute,\n      priority: eventPriority\n    }\n  }), /*#__PURE__*/React.createElement(\"primitive\", _extends({\n    object: fbo.texture\n  }, props)));\n}); // The container component has to be separate, it can not be inlined because \"useFrame(state\" when run inside createPortal will return\n// the portals own state which includes user-land overrides (custom cameras etc), but if it is executed in <RenderTexture>'s render function\n// it would return the default state.\n\nfunction Container({\n  frames,\n  renderPriority,\n  children,\n  fbo\n}) {\n  let count = 0;\n  useFrame(state => {\n    if (frames === Infinity || count < frames) {\n      state.gl.setRenderTarget(fbo);\n      state.gl.render(state.scene, state.camera);\n      state.gl.setRenderTarget(null);\n      count++;\n    }\n  }, renderPriority);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, children);\n}\n\nexport { RenderTexture };\n"],"mappings":"AAAA,OAAOA,QAAP,MAAqB,oCAArB;AACA,OAAO,KAAKC,KAAZ,MAAuB,OAAvB;AACA,OAAO,KAAKC,KAAZ,MAAuB,OAAvB;AACA,SAASC,QAAT,EAAmBC,YAAnB,EAAiCC,QAAjC,QAAiD,oBAAjD;AACA,SAASC,MAAT,QAAuB,aAAvB;AAEA,MAAMC,aAAa,GAAG,aAAaL,KAAK,CAACM,UAAN,CAAiB,OAajDA,UAbiD,KAalC;EAAA,IAbmC;IACnDC,QADmD;IAEnDC,OAFmD;IAGnDC,KAHmD;IAInDC,MAJmD;IAKnDC,OAAO,GAAG,CALyC;IAMnDC,cAAc,GAAG,CANkC;IAOnDC,aAAa,GAAG,CAPmC;IAQnDC,MAAM,GAAGC,QAR0C;IASnDC,aAAa,GAAG,KATmC;IAUnDC,WAAW,GAAG,IAVqC;IAWnDC,eAAe,GAAG,KAXiC;IAYnD,GAAGC;EAZgD,CAanC;EAChB,MAAM;IACJC,IADI;IAEJC;EAFI,IAGFpB,QAAQ,EAHZ;EAIA,MAAMqB,GAAG,GAAGlB,MAAM,CAAC,CAACK,KAAK,IAAIW,IAAI,CAACX,KAAf,IAAwBY,QAAQ,CAACE,GAAlC,EAAuC,CAACb,MAAM,IAAIU,IAAI,CAACV,MAAhB,IAA0BW,QAAQ,CAACE,GAA1E,EAA+E;IAC/FZ,OAD+F;IAE/FK,aAF+F;IAG/FC,WAH+F;IAI/FC;EAJ+F,CAA/E,CAAlB;EAMA,MAAM,CAACM,MAAD,IAAWxB,KAAK,CAACyB,QAAN,CAAe,MAAM,IAAI1B,KAAK,CAAC2B,KAAV,EAArB,CAAjB;EACA,MAAMC,SAAS,GAAG3B,KAAK,CAAC4B,WAAN,CAAkB,CAACC,KAAD,EAAQC,KAAR,EAAeC,QAAf,KAA4B;IAC9D,IAAIC,YAAJ,EAAkBC,qBAAlB,CAD8D,CAG9D;IACA;IACA;;;IACA,IAAIC,MAAM,GAAG,CAACF,YAAY,GAAGV,GAAG,CAACa,OAApB,KAAgC,IAAhC,GAAuC,KAAK,CAA5C,GAAgDH,YAAY,CAACI,KAAb,CAAmBF,MAAhF;;IAEA,OAAOA,MAAM,IAAI,EAAEA,MAAM,YAAYnC,KAAK,CAACsC,QAA1B,CAAjB,EAAsD;MACpDH,MAAM,GAAGA,MAAM,CAACE,KAAP,CAAaF,MAAtB;IACD;;IAED,IAAI,CAACA,MAAL,EAAa,OAAO,KAAP,CAZiD,CAYnC;;IAE3B,IAAI,CAACH,QAAQ,CAACO,SAAT,CAAmBC,MAAxB,EAAgCR,QAAQ,CAACS,MAAT,CAAgBhC,OAAhB,CAAwBqB,KAAxB,EAA+BE,QAA/B,EAAyC,CAACE,qBAAqB,GAAGF,QAAQ,CAACU,YAAlC,KAAmD,IAAnD,GAA0D,KAAK,CAA/D,GAAmER,qBAAqB,CAACS,QAAtB,EAA5G,EAd8B,CAciH;;IAE/K,MAAM,CAACC,YAAD,IAAiBZ,QAAQ,CAACO,SAAT,CAAmBM,eAAnB,CAAmCV,MAAnC,CAAvB;IACA,IAAI,CAACS,YAAL,EAAmB,OAAO,KAAP,CAjB2C,CAiB7B;;IAEjC,MAAME,EAAE,GAAGF,YAAY,CAACE,EAAxB;IACA,IAAI,CAACA,EAAL,EAAS,OAAO,KAAP;IACTf,KAAK,CAACQ,SAAN,CAAgBQ,aAAhB,CAA8BhB,KAAK,CAACiB,OAAN,CAAcC,GAAd,CAAkBH,EAAE,CAACI,CAAH,GAAO,CAAP,GAAW,CAA7B,EAAgCJ,EAAE,CAACK,CAAH,GAAO,CAAP,GAAW,CAA3C,CAA9B,EAA6EpB,KAAK,CAACS,MAAnF;EACD,CAtBiB,EAsBf,EAtBe,CAAlB;EAuBAvC,KAAK,CAACmD,mBAAN,CAA0B7C,UAA1B,EAAsC,MAAMgB,GAAG,CAACa,OAAhD,EAAyD,CAACb,GAAD,CAAzD;EACA,OAAO,aAAatB,KAAK,CAACoD,aAAN,CAAoBpD,KAAK,CAACqD,QAA1B,EAAoC,IAApC,EAA0CnD,YAAY,EAAE,aAAaF,KAAK,CAACoD,aAAN,CAAoBE,SAApB,EAA+B;IACtH1C,cAAc,EAAEA,cADsG;IAEtHE,MAAM,EAAEA,MAF8G;IAGtHQ,GAAG,EAAEA;EAHiH,CAA/B,EAItFf,QAJsF,CAAf,EAI5DiB,MAJ4D,EAIpD;IACpBgB,MAAM,EAAE;MACNhC,OAAO,EAAEA,OAAO,IAAImB,SADd;MAEN4B,QAAQ,EAAE1C;IAFJ;EADY,CAJoD,CAAtD,EAShB,aAAab,KAAK,CAACoD,aAAN,CAAoB,WAApB,EAAiCtD,QAAQ,CAAC;IACzD0D,MAAM,EAAElC,GAAG,CAACa;EAD6C,CAAD,EAEvDhB,KAFuD,CAAzC,CATG,CAApB;AAYD,CA7DkC,CAAnC,C,CA6DI;AACJ;AACA;;AAEA,SAASmC,SAAT,QAKG;EAAA,IALgB;IACjBxC,MADiB;IAEjBF,cAFiB;IAGjBL,QAHiB;IAIjBe;EAJiB,CAKhB;EACD,IAAImC,KAAK,GAAG,CAAZ;EACAtD,QAAQ,CAAC2B,KAAK,IAAI;IAChB,IAAIhB,MAAM,KAAKC,QAAX,IAAuB0C,KAAK,GAAG3C,MAAnC,EAA2C;MACzCgB,KAAK,CAAC4B,EAAN,CAASC,eAAT,CAAyBrC,GAAzB;MACAQ,KAAK,CAAC4B,EAAN,CAASE,MAAT,CAAgB9B,KAAK,CAAC+B,KAAtB,EAA6B/B,KAAK,CAACS,MAAnC;MACAT,KAAK,CAAC4B,EAAN,CAASC,eAAT,CAAyB,IAAzB;MACAF,KAAK;IACN;EACF,CAPO,EAOL7C,cAPK,CAAR;EAQA,OAAO,aAAaZ,KAAK,CAACoD,aAAN,CAAoBpD,KAAK,CAACqD,QAA1B,EAAoC,IAApC,EAA0C9C,QAA1C,CAApB;AACD;;AAED,SAASF,aAAT"},"metadata":{},"sourceType":"module"}