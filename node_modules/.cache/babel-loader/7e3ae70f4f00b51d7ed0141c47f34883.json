{"ast":null,"code":"import _extends from '@babel/runtime/helpers/esm/extends';\nimport * as React from 'react';\nimport * as THREE from 'three';\n\nfunction create(type, effect) {\n  const El = type + 'Geometry';\n  return /*#__PURE__*/React.forwardRef((_ref, fref) => {\n    let {\n      args,\n      children,\n      ...props\n    } = _ref;\n    const ref = React.useRef(null);\n    React.useImperativeHandle(fref, () => ref.current);\n    React.useLayoutEffect(() => void (effect == null ? void 0 : effect(ref.current)));\n    return /*#__PURE__*/React.createElement(\"mesh\", _extends({\n      ref: ref\n    }, props), /*#__PURE__*/React.createElement(El, {\n      attach: \"geometry\",\n      args: args\n    }), children);\n  });\n}\n\nconst Box = create('box');\nconst Circle = create('circle');\nconst Cone = create('cone');\nconst Cylinder = create('cylinder');\nconst Sphere = create('sphere');\nconst Plane = create('plane');\nconst Tube = create('tube');\nconst Torus = create('torus');\nconst TorusKnot = create('torusKnot');\nconst Tetrahedron = create('tetrahedron');\nconst Ring = create('ring');\nconst Polyhedron = create('polyhedron');\nconst Icosahedron = create('icosahedron');\nconst Octahedron = create('octahedron');\nconst Dodecahedron = create('dodecahedron');\nconst Extrude = create('extrude');\nconst Lathe = create('lathe');\nconst Capsule = create('capsule');\nconst Shape = create('shape', _ref2 => {\n  let {\n    geometry\n  } = _ref2;\n  // Calculate UVs (by https://discourse.threejs.org/u/prisoner849)\n  // https://discourse.threejs.org/t/custom-shape-in-image-not-working/49348/10\n  const pos = geometry.attributes.position;\n  const b3 = new THREE.Box3().setFromBufferAttribute(pos);\n  const b3size = new THREE.Vector3();\n  b3.getSize(b3size);\n  const uv = [];\n  let x = 0,\n      y = 0,\n      u = 0,\n      v = 0;\n\n  for (let i = 0; i < pos.count; i++) {\n    x = pos.getX(i);\n    y = pos.getY(i);\n    u = (x - b3.min.x) / b3size.x;\n    v = (y - b3.min.y) / b3size.y;\n    uv.push(u, v);\n  }\n\n  geometry.setAttribute('uv', new THREE.Float32BufferAttribute(uv, 2));\n});\nexport { Box, Capsule, Circle, Cone, Cylinder, Dodecahedron, Extrude, Icosahedron, Lathe, Octahedron, Plane, Polyhedron, Ring, Shape, Sphere, Tetrahedron, Torus, TorusKnot, Tube };","map":{"version":3,"names":["_extends","React","THREE","create","type","effect","El","forwardRef","fref","args","children","props","ref","useRef","useImperativeHandle","current","useLayoutEffect","createElement","attach","Box","Circle","Cone","Cylinder","Sphere","Plane","Tube","Torus","TorusKnot","Tetrahedron","Ring","Polyhedron","Icosahedron","Octahedron","Dodecahedron","Extrude","Lathe","Capsule","Shape","geometry","pos","attributes","position","b3","Box3","setFromBufferAttribute","b3size","Vector3","getSize","uv","x","y","u","v","i","count","getX","getY","min","push","setAttribute","Float32BufferAttribute"],"sources":["/Users/crushedsummers/Documents/GitHub/raphaeleg.github.io/node_modules/@react-three/drei/core/shapes.js"],"sourcesContent":["import _extends from '@babel/runtime/helpers/esm/extends';\nimport * as React from 'react';\nimport * as THREE from 'three';\n\nfunction create(type, effect) {\n  const El = type + 'Geometry';\n  return /*#__PURE__*/React.forwardRef(({\n    args,\n    children,\n    ...props\n  }, fref) => {\n    const ref = React.useRef(null);\n    React.useImperativeHandle(fref, () => ref.current);\n    React.useLayoutEffect(() => void (effect == null ? void 0 : effect(ref.current)));\n    return /*#__PURE__*/React.createElement(\"mesh\", _extends({\n      ref: ref\n    }, props), /*#__PURE__*/React.createElement(El, {\n      attach: \"geometry\",\n      args: args\n    }), children);\n  });\n}\n\nconst Box = create('box');\nconst Circle = create('circle');\nconst Cone = create('cone');\nconst Cylinder = create('cylinder');\nconst Sphere = create('sphere');\nconst Plane = create('plane');\nconst Tube = create('tube');\nconst Torus = create('torus');\nconst TorusKnot = create('torusKnot');\nconst Tetrahedron = create('tetrahedron');\nconst Ring = create('ring');\nconst Polyhedron = create('polyhedron');\nconst Icosahedron = create('icosahedron');\nconst Octahedron = create('octahedron');\nconst Dodecahedron = create('dodecahedron');\nconst Extrude = create('extrude');\nconst Lathe = create('lathe');\nconst Capsule = create('capsule');\nconst Shape = create('shape', ({\n  geometry\n}) => {\n  // Calculate UVs (by https://discourse.threejs.org/u/prisoner849)\n  // https://discourse.threejs.org/t/custom-shape-in-image-not-working/49348/10\n  const pos = geometry.attributes.position;\n  const b3 = new THREE.Box3().setFromBufferAttribute(pos);\n  const b3size = new THREE.Vector3();\n  b3.getSize(b3size);\n  const uv = [];\n  let x = 0,\n      y = 0,\n      u = 0,\n      v = 0;\n\n  for (let i = 0; i < pos.count; i++) {\n    x = pos.getX(i);\n    y = pos.getY(i);\n    u = (x - b3.min.x) / b3size.x;\n    v = (y - b3.min.y) / b3size.y;\n    uv.push(u, v);\n  }\n\n  geometry.setAttribute('uv', new THREE.Float32BufferAttribute(uv, 2));\n});\n\nexport { Box, Capsule, Circle, Cone, Cylinder, Dodecahedron, Extrude, Icosahedron, Lathe, Octahedron, Plane, Polyhedron, Ring, Shape, Sphere, Tetrahedron, Torus, TorusKnot, Tube };\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}