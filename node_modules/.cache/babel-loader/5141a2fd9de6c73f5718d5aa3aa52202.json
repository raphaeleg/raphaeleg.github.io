{"ast":null,"code":"import _get from \"/Users/crushedsummers/Documents/GitHub/raphaeleg.github.io/node_modules/@babel/runtime/helpers/esm/get.js\";\nimport _getPrototypeOf from \"/Users/crushedsummers/Documents/GitHub/raphaeleg.github.io/node_modules/@babel/runtime/helpers/esm/getPrototypeOf.js\";\nimport _inherits from \"/Users/crushedsummers/Documents/GitHub/raphaeleg.github.io/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"/Users/crushedsummers/Documents/GitHub/raphaeleg.github.io/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\nimport _classCallCheck from \"/Users/crushedsummers/Documents/GitHub/raphaeleg.github.io/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/Users/crushedsummers/Documents/GitHub/raphaeleg.github.io/node_modules/@babel/runtime/helpers/esm/createClass.js\";\n\n/*!\n * camera-controls\n * https://github.com/yomotsu/camera-controls\n * (c) 2017 @yomotsu\n * Released under the MIT License.\n */\n// see https://developer.mozilla.org/en-US/docs/Web/API/MouseEvent/buttons#value\nvar MOUSE_BUTTON = {\n  LEFT: 1,\n  RIGHT: 2,\n  MIDDLE: 4\n};\nvar ACTION = Object.freeze({\n  NONE: 0,\n  ROTATE: 1,\n  TRUCK: 2,\n  OFFSET: 4,\n  DOLLY: 8,\n  ZOOM: 16,\n  TOUCH_ROTATE: 32,\n  TOUCH_TRUCK: 64,\n  TOUCH_OFFSET: 128,\n  TOUCH_DOLLY: 256,\n  TOUCH_ZOOM: 512,\n  TOUCH_DOLLY_TRUCK: 1024,\n  TOUCH_DOLLY_OFFSET: 2048,\n  TOUCH_DOLLY_ROTATE: 4096,\n  TOUCH_ZOOM_TRUCK: 8192,\n  TOUCH_ZOOM_OFFSET: 16384,\n  TOUCH_ZOOM_ROTATE: 32768\n});\n\nfunction isPerspectiveCamera(camera) {\n  return camera.isPerspectiveCamera;\n}\n\nfunction isOrthographicCamera(camera) {\n  return camera.isOrthographicCamera;\n}\n\nvar PI_2 = Math.PI * 2;\nvar PI_HALF = Math.PI / 2;\nvar EPSILON = 1e-5;\nvar DEG2RAD = Math.PI / 180;\n\nfunction clamp(value, min, max) {\n  return Math.max(min, Math.min(max, value));\n}\n\nfunction approxZero(number) {\n  var error = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : EPSILON;\n  return Math.abs(number) < error;\n}\n\nfunction approxEquals(a, b) {\n  var error = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : EPSILON;\n  return approxZero(a - b, error);\n}\n\nfunction roundToStep(value, step) {\n  return Math.round(value / step) * step;\n}\n\nfunction infinityToMaxNumber(value) {\n  if (isFinite(value)) return value;\n  if (value < 0) return -Number.MAX_VALUE;\n  return Number.MAX_VALUE;\n}\n\nfunction maxNumberToInfinity(value) {\n  if (Math.abs(value) < Number.MAX_VALUE) return value;\n  return value * Infinity;\n} // https://docs.unity3d.com/ScriptReference/Mathf.SmoothDamp.html\n// https://github.com/Unity-Technologies/UnityCsReference/blob/a2bdfe9b3c4cd4476f44bf52f848063bfaf7b6b9/Runtime/Export/Math/Mathf.cs#L308\n\n\nfunction smoothDamp(current, target, currentVelocityRef, smoothTime) {\n  var maxSpeed = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : Infinity;\n  var deltaTime = arguments.length > 5 ? arguments[5] : undefined;\n  // Based on Game Programming Gems 4 Chapter 1.10\n  smoothTime = Math.max(0.0001, smoothTime);\n  var omega = 2 / smoothTime;\n  var x = omega * deltaTime;\n  var exp = 1 / (1 + x + 0.48 * x * x + 0.235 * x * x * x);\n  var change = current - target;\n  var originalTo = target; // Clamp maximum speed\n\n  var maxChange = maxSpeed * smoothTime;\n  change = clamp(change, -maxChange, maxChange);\n  target = current - change;\n  var temp = (currentVelocityRef.value + omega * change) * deltaTime;\n  currentVelocityRef.value = (currentVelocityRef.value - omega * temp) * exp;\n  var output = target + (change + temp) * exp; // Prevent overshooting\n\n  if (originalTo - current > 0.0 === output > originalTo) {\n    output = originalTo;\n    currentVelocityRef.value = (output - originalTo) / deltaTime;\n  }\n\n  return output;\n} // https://docs.unity3d.com/ScriptReference/Vector3.SmoothDamp.html\n// https://github.com/Unity-Technologies/UnityCsReference/blob/a2bdfe9b3c4cd4476f44bf52f848063bfaf7b6b9/Runtime/Export/Math/Vector3.cs#L97\n\n\nfunction smoothDampVec3(current, target, currentVelocityRef, smoothTime) {\n  var maxSpeed = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : Infinity;\n  var deltaTime = arguments.length > 5 ? arguments[5] : undefined;\n  var out = arguments.length > 6 ? arguments[6] : undefined;\n  // Based on Game Programming Gems 4 Chapter 1.10\n  smoothTime = Math.max(0.0001, smoothTime);\n  var omega = 2 / smoothTime;\n  var x = omega * deltaTime;\n  var exp = 1 / (1 + x + 0.48 * x * x + 0.235 * x * x * x);\n  var targetX = target.x;\n  var targetY = target.y;\n  var targetZ = target.z;\n  var changeX = current.x - targetX;\n  var changeY = current.y - targetY;\n  var changeZ = current.z - targetZ;\n  var originalToX = targetX;\n  var originalToY = targetY;\n  var originalToZ = targetZ; // Clamp maximum speed\n\n  var maxChange = maxSpeed * smoothTime;\n  var maxChangeSq = maxChange * maxChange;\n  var magnitudeSq = changeX * changeX + changeY * changeY + changeZ * changeZ;\n\n  if (magnitudeSq > maxChangeSq) {\n    var magnitude = Math.sqrt(magnitudeSq);\n    changeX = changeX / magnitude * maxChange;\n    changeY = changeY / magnitude * maxChange;\n    changeZ = changeZ / magnitude * maxChange;\n  }\n\n  targetX = current.x - changeX;\n  targetY = current.y - changeY;\n  targetZ = current.z - changeZ;\n  var tempX = (currentVelocityRef.x + omega * changeX) * deltaTime;\n  var tempY = (currentVelocityRef.y + omega * changeY) * deltaTime;\n  var tempZ = (currentVelocityRef.z + omega * changeZ) * deltaTime;\n  currentVelocityRef.x = (currentVelocityRef.x - omega * tempX) * exp;\n  currentVelocityRef.y = (currentVelocityRef.y - omega * tempY) * exp;\n  currentVelocityRef.z = (currentVelocityRef.z - omega * tempZ) * exp;\n  out.x = targetX + (changeX + tempX) * exp;\n  out.y = targetY + (changeY + tempY) * exp;\n  out.z = targetZ + (changeZ + tempZ) * exp; // Prevent overshooting\n\n  var origMinusCurrentX = originalToX - current.x;\n  var origMinusCurrentY = originalToY - current.y;\n  var origMinusCurrentZ = originalToZ - current.z;\n  var outMinusOrigX = out.x - originalToX;\n  var outMinusOrigY = out.y - originalToY;\n  var outMinusOrigZ = out.z - originalToZ;\n\n  if (origMinusCurrentX * outMinusOrigX + origMinusCurrentY * outMinusOrigY + origMinusCurrentZ * outMinusOrigZ > 0) {\n    out.x = originalToX;\n    out.y = originalToY;\n    out.z = originalToZ;\n    currentVelocityRef.x = (out.x - originalToX) / deltaTime;\n    currentVelocityRef.y = (out.y - originalToY) / deltaTime;\n    currentVelocityRef.z = (out.z - originalToZ) / deltaTime;\n  }\n\n  return out;\n}\n\nfunction extractClientCoordFromEvent(pointers, out) {\n  out.set(0, 0);\n  pointers.forEach(function (pointer) {\n    out.x += pointer.clientX;\n    out.y += pointer.clientY;\n  });\n  out.x /= pointers.length;\n  out.y /= pointers.length;\n}\n\nfunction notSupportedInOrthographicCamera(camera, message) {\n  if (isOrthographicCamera(camera)) {\n    console.warn(\"\".concat(message, \" is not supported in OrthographicCamera\"));\n    return true;\n  }\n\n  return false;\n}\n\nvar EventDispatcher = /*#__PURE__*/function () {\n  function EventDispatcher() {\n    _classCallCheck(this, EventDispatcher);\n\n    this._listeners = {};\n  }\n  /**\n   * Adds the specified event listener.\n   * @param type event name\n   * @param listener handler function\n   * @category Methods\n   */\n\n\n  _createClass(EventDispatcher, [{\n    key: \"addEventListener\",\n    value: function addEventListener(type, listener) {\n      var listeners = this._listeners;\n      if (listeners[type] === undefined) listeners[type] = [];\n      if (listeners[type].indexOf(listener) === -1) listeners[type].push(listener);\n    }\n    /**\n     * Presence of the specified event listener.\n     * @param type event name\n     * @param listener handler function\n     * @category Methods\n     */\n\n  }, {\n    key: \"hasEventListener\",\n    value: function hasEventListener(type, listener) {\n      var listeners = this._listeners;\n      return listeners[type] !== undefined && listeners[type].indexOf(listener) !== -1;\n    }\n    /**\n     * Removes the specified event listener\n     * @param type event name\n     * @param listener handler function\n     * @category Methods\n     */\n\n  }, {\n    key: \"removeEventListener\",\n    value: function removeEventListener(type, listener) {\n      var listeners = this._listeners;\n      var listenerArray = listeners[type];\n\n      if (listenerArray !== undefined) {\n        var index = listenerArray.indexOf(listener);\n        if (index !== -1) listenerArray.splice(index, 1);\n      }\n    }\n    /**\n     * Removes all event listeners\n     * @param type event name\n     * @category Methods\n     */\n\n  }, {\n    key: \"removeAllEventListeners\",\n    value: function removeAllEventListeners(type) {\n      if (!type) {\n        this._listeners = {};\n        return;\n      }\n\n      if (Array.isArray(this._listeners[type])) this._listeners[type].length = 0;\n    }\n    /**\n     * Fire an event type.\n     * @param event DispatcherEvent\n     * @category Methods\n     */\n\n  }, {\n    key: \"dispatchEvent\",\n    value: function dispatchEvent(event) {\n      var listeners = this._listeners;\n      var listenerArray = listeners[event.type];\n\n      if (listenerArray !== undefined) {\n        event.target = this;\n        var array = listenerArray.slice(0);\n\n        for (var i = 0, l = array.length; i < l; i++) {\n          array[i].call(this, event);\n        }\n      }\n    }\n  }]);\n\n  return EventDispatcher;\n}();\n\nvar VERSION = '2.3.5'; // will be replaced with `version` in package.json during the build process.\n\nvar TOUCH_DOLLY_FACTOR = 1 / 8;\nvar isBrowser = typeof window !== 'undefined';\nvar isMac = isBrowser && /Mac/.test(navigator.platform);\nvar isPointerEventsNotSupported = !(isBrowser && 'PointerEvent' in window); // macOS Safari 12 does not support PointerEvents API\n\nvar THREE;\n\nvar _ORIGIN;\n\nvar _AXIS_Y;\n\nvar _AXIS_Z;\n\nvar _v2;\n\nvar _v3A;\n\nvar _v3B;\n\nvar _v3C;\n\nvar _xColumn;\n\nvar _yColumn;\n\nvar _zColumn;\n\nvar _deltaTarget;\n\nvar _deltaOffset;\n\nvar _sphericalA;\n\nvar _sphericalB;\n\nvar _box3A;\n\nvar _box3B;\n\nvar _sphere;\n\nvar _quaternionA;\n\nvar _quaternionB;\n\nvar _rotationMatrix;\n\nvar _raycaster;\n\nvar CameraControls = /*#__PURE__*/function (_EventDispatcher) {\n  _inherits(CameraControls, _EventDispatcher);\n\n  var _super = _createSuper(CameraControls);\n\n  /**\n   * Creates a `CameraControls` instance.\n   *\n   * Note:\n   * You **must install** three.js before using camera-controls. see [#install](#install)\n   * Not doing so will lead to runtime errors (`undefined` references to THREE).\n   *\n   * e.g.\n   * ```\n   * CameraControls.install( { THREE } );\n   * const cameraControls = new CameraControls( camera, domElement );\n   * ```\n   *\n   * @param camera A `THREE.PerspectiveCamera` or `THREE.OrthographicCamera` to be controlled.\n   * @param domElement A `HTMLElement` for the draggable area, usually `renderer.domElement`.\n   * @category Constructor\n   */\n  function CameraControls(camera, domElement) {\n    var _this;\n\n    _classCallCheck(this, CameraControls);\n\n    _this = _super.call(this);\n    /**\n     * Minimum vertical angle in radians.\n     * The angle has to be between `0` and `.maxPolarAngle` inclusive.\n     * The default value is `0`.\n     *\n     * e.g.\n     * ```\n     * cameraControls.maxPolarAngle = 0;\n     * ```\n     * @category Properties\n     */\n\n    _this.minPolarAngle = 0; // radians\n\n    /**\n     * Maximum vertical angle in radians.\n     * The angle has to be between `.maxPolarAngle` and `Math.PI` inclusive.\n     * The default value is `Math.PI`.\n     *\n     * e.g.\n     * ```\n     * cameraControls.maxPolarAngle = Math.PI;\n     * ```\n     * @category Properties\n     */\n\n    _this.maxPolarAngle = Math.PI; // radians\n\n    /**\n     * Minimum horizontal angle in radians.\n     * The angle has to be less than `.maxAzimuthAngle`.\n     * The default value is `- Infinity`.\n     *\n     * e.g.\n     * ```\n     * cameraControls.minAzimuthAngle = - Infinity;\n     * ```\n     * @category Properties\n     */\n\n    _this.minAzimuthAngle = -Infinity; // radians\n\n    /**\n     * Maximum horizontal angle in radians.\n     * The angle has to be greater than `.minAzimuthAngle`.\n     * The default value is `Infinity`.\n     *\n     * e.g.\n     * ```\n     * cameraControls.maxAzimuthAngle = Infinity;\n     * ```\n     * @category Properties\n     */\n\n    _this.maxAzimuthAngle = Infinity; // radians\n    // How far you can dolly in and out ( PerspectiveCamera only )\n\n    /**\n     * Minimum distance for dolly. The value must be higher than `0`.\n     * PerspectiveCamera only.\n     * @category Properties\n     */\n\n    _this.minDistance = 0;\n    /**\n     * Maximum distance for dolly. The value must be higher than `minDistance`.\n     * PerspectiveCamera only.\n     * @category Properties\n     */\n\n    _this.maxDistance = Infinity;\n    /**\n     * `true` to enable Infinity Dolly.\n     * When the Dolly distance is less than the `minDistance`, radius of the sphere will be set `minDistance` automatically.\n     * @category Properties\n     */\n\n    _this.infinityDolly = false;\n    /**\n     * Minimum camera zoom.\n     * @category Properties\n     */\n\n    _this.minZoom = 0.01;\n    /**\n     * Maximum camera zoom.\n     * @category Properties\n     */\n\n    _this.maxZoom = Infinity;\n    /**\n     * Approximate time in seconds to reach the target. A smaller value will reach the target faster.\n     * @category Properties\n     */\n\n    _this.smoothTime = 0.25;\n    /**\n     * the smoothTime while dragging\n     * @category Properties\n     */\n\n    _this.draggingSmoothTime = 0.125;\n    /**\n     * Max transition speed in unit-per-seconds\n     * @category Properties\n     */\n\n    _this.maxSpeed = Infinity;\n    /**\n     * Speed of azimuth (horizontal) rotation.\n     * @category Properties\n     */\n\n    _this.azimuthRotateSpeed = 1.0;\n    /**\n     * Speed of polar (vertical) rotation.\n     * @category Properties\n     */\n\n    _this.polarRotateSpeed = 1.0;\n    /**\n     * Speed of mouse-wheel dollying.\n     * @category Properties\n     */\n\n    _this.dollySpeed = 1.0;\n    /**\n     * `true` to invert direction when dollying or zooming via drag\n     * @category Properties\n     */\n\n    _this.dollyDragInverted = false;\n    /**\n     * Speed of drag for truck and pedestal.\n     * @category Properties\n     */\n\n    _this.truckSpeed = 2.0;\n    /**\n     * `true` to enable Dolly-in to the mouse cursor coords.\n     * @category Properties\n     */\n\n    _this.dollyToCursor = false;\n    /**\n     * @category Properties\n     */\n\n    _this.dragToOffset = false;\n    /**\n     * The same as `.screenSpacePanning` in three.js's OrbitControls.\n     * @category Properties\n     */\n\n    _this.verticalDragToForward = false;\n    /**\n     * Friction ratio of the boundary.\n     * @category Properties\n     */\n\n    _this.boundaryFriction = 0.0;\n    /**\n     * Controls how soon the `rest` event fires as the camera slows.\n     * @category Properties\n     */\n\n    _this.restThreshold = 0.01;\n    /**\n     * An array of Meshes to collide with camera.\n     * Be aware colliderMeshes may decrease performance. The collision test uses 4 raycasters from the camera since the near plane has 4 corners.\n     * @category Properties\n     */\n\n    _this.colliderMeshes = [];\n    /**\n     * Force cancel user dragging.\n     * @category Methods\n     */\n    // cancel will be overwritten in the constructor.\n\n    _this.cancel = function () {};\n\n    _this._enabled = true;\n    _this._state = ACTION.NONE;\n    _this._viewport = null;\n    _this._dollyControlAmount = 0;\n    _this._hasRested = true;\n    _this._boundaryEnclosesCamera = false;\n    _this._needsUpdate = true;\n    _this._updatedLastTime = false;\n    _this._elementRect = new DOMRect();\n    _this._isDragging = false;\n    _this._activePointers = [];\n    _this._lockedPointer = null; // Use draggingSmoothTime over smoothTime while true.\n    // set automatically true on user-dragging start.\n    // set automatically false on programmable methods call.\n\n    _this._isUserControllingRotate = false;\n    _this._isUserControllingDolly = false;\n    _this._isUserControllingTruck = false;\n    _this._isUserControllingOffset = false;\n    _this._isUserControllingZoom = false; // velocities for smoothDamp\n\n    _this._thetaVelocity = {\n      value: 0\n    };\n    _this._phiVelocity = {\n      value: 0\n    };\n    _this._radiusVelocity = {\n      value: 0\n    };\n    _this._targetVelocity = new THREE.Vector3();\n    _this._focalOffsetVelocity = new THREE.Vector3();\n    _this._zoomVelocity = {\n      value: 0\n    };\n\n    _this._truckInternal = function (deltaX, deltaY, dragToOffset) {\n      var truckX;\n      var pedestalY;\n\n      if (isPerspectiveCamera(_this._camera)) {\n        var offset = _v3A.copy(_this._camera.position).sub(_this._target); // half of the fov is center to top of screen\n\n\n        var fov = _this._camera.getEffectiveFOV() * DEG2RAD;\n        var targetDistance = offset.length() * Math.tan(fov * 0.5);\n        truckX = _this.truckSpeed * deltaX * targetDistance / _this._elementRect.height;\n        pedestalY = _this.truckSpeed * deltaY * targetDistance / _this._elementRect.height;\n      } else if (isOrthographicCamera(_this._camera)) {\n        var _camera = _this._camera;\n        truckX = deltaX * (_camera.right - _camera.left) / _camera.zoom / _this._elementRect.width;\n        pedestalY = deltaY * (_camera.top - _camera.bottom) / _camera.zoom / _this._elementRect.height;\n      } else {\n        return;\n      }\n\n      if (_this.verticalDragToForward) {\n        dragToOffset ? _this.setFocalOffset(_this._focalOffsetEnd.x + truckX, _this._focalOffsetEnd.y, _this._focalOffsetEnd.z, true) : _this.truck(truckX, 0, true);\n\n        _this.forward(-pedestalY, true);\n      } else {\n        dragToOffset ? _this.setFocalOffset(_this._focalOffsetEnd.x + truckX, _this._focalOffsetEnd.y + pedestalY, _this._focalOffsetEnd.z, true) : _this.truck(truckX, pedestalY, true);\n      }\n    };\n\n    _this._rotateInternal = function (deltaX, deltaY) {\n      var theta = PI_2 * _this.azimuthRotateSpeed * deltaX / _this._elementRect.height; // divide by *height* to refer the resolution\n\n      var phi = PI_2 * _this.polarRotateSpeed * deltaY / _this._elementRect.height;\n\n      _this.rotate(theta, phi, true);\n    };\n\n    _this._dollyInternal = function (delta, x, y) {\n      var dollyScale = Math.pow(0.95, -delta * _this.dollySpeed);\n      var distance = _this._sphericalEnd.radius * dollyScale;\n      var prevRadius = _this._sphericalEnd.radius;\n      var signedPrevRadius = prevRadius * (delta >= 0 ? -1 : 1);\n\n      _this.dollyTo(distance);\n\n      if (_this.infinityDolly && (distance < _this.minDistance || _this.maxDistance === _this.minDistance)) {\n        _this._camera.getWorldDirection(_v3A);\n\n        _this._targetEnd.add(_v3A.normalize().multiplyScalar(signedPrevRadius));\n\n        _this._target.add(_v3A.normalize().multiplyScalar(signedPrevRadius));\n      }\n\n      if (_this.dollyToCursor) {\n        _this._dollyControlAmount += _this._sphericalEnd.radius - prevRadius;\n\n        if (_this.infinityDolly && (distance < _this.minDistance || _this.maxDistance === _this.minDistance)) {\n          _this._dollyControlAmount -= signedPrevRadius;\n        }\n\n        _this._dollyControlCoord.set(x, y);\n      }\n    };\n\n    _this._zoomInternal = function (delta, x, y) {\n      var zoomScale = Math.pow(0.95, delta * _this.dollySpeed);\n      var prevZoom = _this._zoomEnd; // for both PerspectiveCamera and OrthographicCamera\n\n      _this.zoomTo(_this._zoom * zoomScale);\n\n      if (_this.dollyToCursor) {\n        _this._dollyControlAmount += _this._zoomEnd - prevZoom;\n\n        _this._dollyControlCoord.set(x, y);\n      }\n    }; // Check if the user has installed THREE\n\n\n    if (typeof THREE === 'undefined') {\n      console.error('camera-controls: `THREE` is undefined. You must first run `CameraControls.install( { THREE: THREE } )`. Check the docs for further information.');\n    }\n\n    _this._camera = camera;\n    _this._yAxisUpSpace = new THREE.Quaternion().setFromUnitVectors(_this._camera.up, _AXIS_Y);\n    _this._yAxisUpSpaceInverse = _this._yAxisUpSpace.clone().invert();\n    _this._state = ACTION.NONE; // the location\n\n    _this._target = new THREE.Vector3();\n    _this._targetEnd = _this._target.clone();\n    _this._focalOffset = new THREE.Vector3();\n    _this._focalOffsetEnd = _this._focalOffset.clone(); // rotation\n\n    _this._spherical = new THREE.Spherical().setFromVector3(_v3A.copy(_this._camera.position).applyQuaternion(_this._yAxisUpSpace));\n    _this._sphericalEnd = _this._spherical.clone();\n    _this._zoom = _this._camera.zoom;\n    _this._zoomEnd = _this._zoom; // collisionTest uses nearPlane.s\n\n    _this._nearPlaneCorners = [new THREE.Vector3(), new THREE.Vector3(), new THREE.Vector3(), new THREE.Vector3()];\n\n    _this._updateNearPlaneCorners(); // Target cannot move outside of this box\n\n\n    _this._boundary = new THREE.Box3(new THREE.Vector3(-Infinity, -Infinity, -Infinity), new THREE.Vector3(Infinity, Infinity, Infinity)); // reset\n\n    _this._cameraUp0 = _this._camera.up.clone();\n    _this._target0 = _this._target.clone();\n    _this._position0 = _this._camera.position.clone();\n    _this._zoom0 = _this._zoom;\n    _this._focalOffset0 = _this._focalOffset.clone();\n    _this._dollyControlAmount = 0;\n    _this._dollyControlCoord = new THREE.Vector2(); // configs\n\n    _this.mouseButtons = {\n      left: ACTION.ROTATE,\n      middle: ACTION.DOLLY,\n      right: ACTION.TRUCK,\n      wheel: isPerspectiveCamera(_this._camera) ? ACTION.DOLLY : isOrthographicCamera(_this._camera) ? ACTION.ZOOM : ACTION.NONE\n    };\n    _this.touches = {\n      one: ACTION.TOUCH_ROTATE,\n      two: isPerspectiveCamera(_this._camera) ? ACTION.TOUCH_DOLLY_TRUCK : isOrthographicCamera(_this._camera) ? ACTION.TOUCH_ZOOM_TRUCK : ACTION.NONE,\n      three: ACTION.TOUCH_TRUCK\n    };\n    var dragStartPosition = new THREE.Vector2();\n    var lastDragPosition = new THREE.Vector2();\n    var dollyStart = new THREE.Vector2();\n\n    var onPointerDown = function onPointerDown(event) {\n      if (!_this._enabled || !_this._domElement) return; // Don't call `event.preventDefault()` on the pointerdown event\n      // to keep receiving pointermove evens outside dragging iframe\n      // https://taye.me/blog/tips/2015/11/16/mouse-drag-outside-iframe/\n\n      var mouseButton = event.pointerType !== 'mouse' ? null : (event.buttons & MOUSE_BUTTON.LEFT) === MOUSE_BUTTON.LEFT ? MOUSE_BUTTON.LEFT : (event.buttons & MOUSE_BUTTON.MIDDLE) === MOUSE_BUTTON.MIDDLE ? MOUSE_BUTTON.MIDDLE : (event.buttons & MOUSE_BUTTON.RIGHT) === MOUSE_BUTTON.RIGHT ? MOUSE_BUTTON.RIGHT : null;\n\n      if (mouseButton !== null) {\n        var zombiePointer = _this._findPointerByMouseButton(mouseButton);\n\n        zombiePointer && _this._disposePointer(zombiePointer);\n      }\n\n      if ((event.buttons & MOUSE_BUTTON.LEFT) === MOUSE_BUTTON.LEFT && _this._lockedPointer) return;\n      var pointer = {\n        pointerId: event.pointerId,\n        clientX: event.clientX,\n        clientY: event.clientY,\n        deltaX: 0,\n        deltaY: 0,\n        mouseButton: mouseButton\n      };\n\n      _this._activePointers.push(pointer); // eslint-disable-next-line no-undef\n\n\n      _this._domElement.ownerDocument.removeEventListener('pointermove', onPointerMove, {\n        passive: false\n      });\n\n      _this._domElement.ownerDocument.removeEventListener('pointerup', onPointerUp);\n\n      _this._domElement.ownerDocument.addEventListener('pointermove', onPointerMove, {\n        passive: false\n      });\n\n      _this._domElement.ownerDocument.addEventListener('pointerup', onPointerUp);\n\n      _this._isDragging = true;\n      startDragging(event);\n    };\n\n    var onMouseDown = function onMouseDown(event) {\n      if (!_this._enabled || !_this._domElement || _this._lockedPointer) return;\n      var mouseButton = (event.buttons & MOUSE_BUTTON.LEFT) === MOUSE_BUTTON.LEFT ? MOUSE_BUTTON.LEFT : (event.buttons & MOUSE_BUTTON.MIDDLE) === MOUSE_BUTTON.MIDDLE ? MOUSE_BUTTON.MIDDLE : (event.buttons & MOUSE_BUTTON.RIGHT) === MOUSE_BUTTON.RIGHT ? MOUSE_BUTTON.RIGHT : null;\n\n      if (mouseButton !== null) {\n        var zombiePointer = _this._findPointerByMouseButton(mouseButton);\n\n        zombiePointer && _this._disposePointer(zombiePointer);\n      }\n\n      var pointer = {\n        pointerId: 1,\n        clientX: event.clientX,\n        clientY: event.clientY,\n        deltaX: 0,\n        deltaY: 0,\n        mouseButton: (event.buttons & MOUSE_BUTTON.LEFT) === MOUSE_BUTTON.LEFT ? MOUSE_BUTTON.LEFT : (event.buttons & MOUSE_BUTTON.MIDDLE) === MOUSE_BUTTON.LEFT ? MOUSE_BUTTON.MIDDLE : (event.buttons & MOUSE_BUTTON.RIGHT) === MOUSE_BUTTON.LEFT ? MOUSE_BUTTON.RIGHT : null\n      };\n\n      _this._activePointers.push(pointer); // see https://github.com/microsoft/TypeScript/issues/32912#issuecomment-522142969\n      // eslint-disable-next-line no-undef\n\n\n      _this._domElement.ownerDocument.removeEventListener('mousemove', onMouseMove);\n\n      _this._domElement.ownerDocument.removeEventListener('mouseup', onMouseUp);\n\n      _this._domElement.ownerDocument.addEventListener('mousemove', onMouseMove);\n\n      _this._domElement.ownerDocument.addEventListener('mouseup', onMouseUp);\n\n      _this._isDragging = true;\n      startDragging(event);\n    };\n\n    var onPointerMove = function onPointerMove(event) {\n      if (event.cancelable) event.preventDefault();\n      var pointerId = event.pointerId;\n\n      var pointer = _this._lockedPointer || _this._findPointerById(pointerId);\n\n      if (!pointer) return;\n      pointer.clientX = event.clientX;\n      pointer.clientY = event.clientY;\n      pointer.deltaX = event.movementX;\n      pointer.deltaY = event.movementY;\n      _this._state = 0;\n\n      if (event.pointerType === 'touch') {\n        switch (_this._activePointers.length) {\n          case 1:\n            _this._state = _this.touches.one;\n            break;\n\n          case 2:\n            _this._state = _this.touches.two;\n            break;\n\n          case 3:\n            _this._state = _this.touches.three;\n            break;\n        }\n      } else {\n        if (!_this._isDragging && _this._lockedPointer || _this._isDragging && (event.buttons & MOUSE_BUTTON.LEFT) === MOUSE_BUTTON.LEFT) {\n          _this._state = _this._state | _this.mouseButtons.left;\n        }\n\n        if (_this._isDragging && (event.buttons & MOUSE_BUTTON.MIDDLE) === MOUSE_BUTTON.MIDDLE) {\n          _this._state = _this._state | _this.mouseButtons.middle;\n        }\n\n        if (_this._isDragging && (event.buttons & MOUSE_BUTTON.RIGHT) === MOUSE_BUTTON.RIGHT) {\n          _this._state = _this._state | _this.mouseButtons.right;\n        }\n      }\n\n      dragging();\n    };\n\n    var onMouseMove = function onMouseMove(event) {\n      var pointer = _this._lockedPointer || _this._findPointerById(1);\n\n      if (!pointer) return;\n      pointer.clientX = event.clientX;\n      pointer.clientY = event.clientY;\n      pointer.deltaX = event.movementX;\n      pointer.deltaY = event.movementY;\n      _this._state = 0;\n\n      if (_this._lockedPointer || (event.buttons & MOUSE_BUTTON.LEFT) === MOUSE_BUTTON.LEFT) {\n        _this._state = _this._state | _this.mouseButtons.left;\n      }\n\n      if ((event.buttons & MOUSE_BUTTON.MIDDLE) === MOUSE_BUTTON.MIDDLE) {\n        _this._state = _this._state | _this.mouseButtons.middle;\n      }\n\n      if ((event.buttons & MOUSE_BUTTON.RIGHT) === MOUSE_BUTTON.RIGHT) {\n        _this._state = _this._state | _this.mouseButtons.right;\n      }\n\n      dragging();\n    };\n\n    var onPointerUp = function onPointerUp(event) {\n      var pointer = _this._findPointerById(event.pointerId);\n\n      if (pointer && pointer === _this._lockedPointer) return;\n      pointer && _this._disposePointer(pointer);\n\n      if (event.pointerType === 'touch') {\n        switch (_this._activePointers.length) {\n          case 0:\n            _this._state = ACTION.NONE;\n            break;\n\n          case 1:\n            _this._state = _this.touches.one;\n            break;\n\n          case 2:\n            _this._state = _this.touches.two;\n            break;\n\n          case 3:\n            _this._state = _this.touches.three;\n            break;\n        }\n      } else {\n        _this._state = ACTION.NONE;\n      }\n\n      endDragging();\n    };\n\n    var onMouseUp = function onMouseUp() {\n      var pointer = _this._findPointerById(1);\n\n      if (pointer && pointer === _this._lockedPointer) return;\n      pointer && _this._disposePointer(pointer);\n      _this._state = ACTION.NONE;\n      endDragging();\n    };\n\n    var lastScrollTimeStamp = -1;\n\n    var onMouseWheel = function onMouseWheel(event) {\n      if (!_this._enabled || _this.mouseButtons.wheel === ACTION.NONE) return;\n      event.preventDefault();\n\n      if (_this.dollyToCursor || _this.mouseButtons.wheel === ACTION.ROTATE || _this.mouseButtons.wheel === ACTION.TRUCK) {\n        var now = performance.now(); // only need to fire this at scroll start.\n\n        if (lastScrollTimeStamp - now < 1000) _this._getClientRect(_this._elementRect);\n        lastScrollTimeStamp = now;\n      } // Ref: https://github.com/cedricpinson/osgjs/blob/00e5a7e9d9206c06fdde0436e1d62ab7cb5ce853/sources/osgViewer/input/source/InputSourceMouse.js#L89-L103\n\n\n      var deltaYFactor = isMac ? -1 : -3;\n      var delta = event.deltaMode === 1 ? event.deltaY / deltaYFactor : event.deltaY / (deltaYFactor * 10);\n      var x = _this.dollyToCursor ? (event.clientX - _this._elementRect.x) / _this._elementRect.width * 2 - 1 : 0;\n      var y = _this.dollyToCursor ? (event.clientY - _this._elementRect.y) / _this._elementRect.height * -2 + 1 : 0;\n\n      switch (_this.mouseButtons.wheel) {\n        case ACTION.ROTATE:\n          {\n            _this._rotateInternal(event.deltaX, event.deltaY);\n\n            _this._isUserControllingRotate = true;\n            break;\n          }\n\n        case ACTION.TRUCK:\n          {\n            _this._truckInternal(event.deltaX, event.deltaY, false);\n\n            _this._isUserControllingTruck = true;\n            break;\n          }\n\n        case ACTION.OFFSET:\n          {\n            _this._truckInternal(event.deltaX, event.deltaY, true);\n\n            _this._isUserControllingOffset = true;\n            break;\n          }\n\n        case ACTION.DOLLY:\n          {\n            _this._dollyInternal(-delta, x, y);\n\n            _this._isUserControllingDolly = true;\n            break;\n          }\n\n        case ACTION.ZOOM:\n          {\n            _this._zoomInternal(-delta, x, y);\n\n            _this._isUserControllingZoom = true;\n            break;\n          }\n      }\n\n      _this.dispatchEvent({\n        type: 'control'\n      });\n    };\n\n    var onContextMenu = function onContextMenu(event) {\n      if (!_this._domElement || !_this._enabled) return; // contextmenu event is fired right after pointerdown/mousedown.\n      // remove attached handlers and active pointer, if interrupted by contextmenu.\n\n      if (_this.mouseButtons.right === CameraControls.ACTION.NONE) {\n        var pointerId = event instanceof PointerEvent ? event.pointerId : event instanceof MouseEvent ? 0 : 0;\n\n        var pointer = _this._findPointerById(pointerId);\n\n        pointer && _this._disposePointer(pointer); // eslint-disable-next-line no-undef\n\n        _this._domElement.ownerDocument.removeEventListener('pointermove', onPointerMove, {\n          passive: false\n        });\n\n        _this._domElement.ownerDocument.removeEventListener('pointerup', onPointerUp);\n\n        _this._domElement.ownerDocument.removeEventListener('mousemove', onMouseMove);\n\n        _this._domElement.ownerDocument.removeEventListener('mouseup', onMouseUp);\n\n        return;\n      }\n\n      event.preventDefault();\n    };\n\n    var startDragging = function startDragging(event) {\n      if (!_this._enabled) return;\n      extractClientCoordFromEvent(_this._activePointers, _v2);\n\n      _this._getClientRect(_this._elementRect);\n\n      dragStartPosition.copy(_v2);\n      lastDragPosition.copy(_v2);\n      var isMultiTouch = _this._activePointers.length >= 2;\n\n      if (isMultiTouch) {\n        // 2 finger pinch\n        var dx = _v2.x - _this._activePointers[1].clientX;\n        var dy = _v2.y - _this._activePointers[1].clientY;\n        var distance = Math.sqrt(dx * dx + dy * dy);\n        dollyStart.set(0, distance); // center coords of 2 finger truck\n\n        var x = (_this._activePointers[0].clientX + _this._activePointers[1].clientX) * 0.5;\n        var y = (_this._activePointers[0].clientY + _this._activePointers[1].clientY) * 0.5;\n        lastDragPosition.set(x, y);\n      }\n\n      _this._state = 0;\n\n      if (!event) {\n        if (_this._lockedPointer) _this._state = _this._state | _this.mouseButtons.left;\n      } else if ('pointerType' in event && event.pointerType === 'touch') {\n        switch (_this._activePointers.length) {\n          case 1:\n            _this._state = _this.touches.one;\n            break;\n\n          case 2:\n            _this._state = _this.touches.two;\n            break;\n\n          case 3:\n            _this._state = _this.touches.three;\n            break;\n        }\n      } else {\n        if (!_this._lockedPointer && (event.buttons & MOUSE_BUTTON.LEFT) === MOUSE_BUTTON.LEFT) {\n          _this._state = _this._state | _this.mouseButtons.left;\n        }\n\n        if ((event.buttons & MOUSE_BUTTON.MIDDLE) === MOUSE_BUTTON.MIDDLE) {\n          _this._state = _this._state | _this.mouseButtons.middle;\n        }\n\n        if ((event.buttons & MOUSE_BUTTON.RIGHT) === MOUSE_BUTTON.RIGHT) {\n          _this._state = _this._state | _this.mouseButtons.right;\n        }\n      } // stop current movement on drag start\n\n\n      if ((_this._state & ACTION.ROTATE) === ACTION.ROTATE || (_this._state & ACTION.TOUCH_ROTATE) === ACTION.TOUCH_ROTATE || (_this._state & ACTION.TOUCH_DOLLY_ROTATE) === ACTION.TOUCH_DOLLY_ROTATE || (_this._state & ACTION.TOUCH_ZOOM_ROTATE) === ACTION.TOUCH_ZOOM_ROTATE) {\n        _this._sphericalEnd.theta = _this._spherical.theta;\n        _this._sphericalEnd.phi = _this._spherical.phi;\n        _this._thetaVelocity.value = 0;\n        _this._phiVelocity.value = 0;\n      }\n\n      if ((_this._state & ACTION.TRUCK) === ACTION.TRUCK || (_this._state & ACTION.TOUCH_TRUCK) === ACTION.TOUCH_TRUCK || (_this._state & ACTION.TOUCH_DOLLY_TRUCK) === ACTION.TOUCH_DOLLY_TRUCK || (_this._state & ACTION.TOUCH_ZOOM_TRUCK) === ACTION.TOUCH_ZOOM_TRUCK) {\n        _this._targetEnd.copy(_this._target);\n\n        _this._targetVelocity.set(0, 0, 0);\n      }\n\n      if ((_this._state & ACTION.DOLLY) === ACTION.DOLLY || (_this._state & ACTION.TOUCH_DOLLY) === ACTION.TOUCH_DOLLY || (_this._state & ACTION.TOUCH_DOLLY_TRUCK) === ACTION.TOUCH_DOLLY_TRUCK || (_this._state & ACTION.TOUCH_DOLLY_OFFSET) === ACTION.TOUCH_DOLLY_OFFSET || (_this._state & ACTION.TOUCH_DOLLY_ROTATE) === ACTION.TOUCH_DOLLY_ROTATE) {\n        _this._sphericalEnd.radius = _this._spherical.radius;\n        _this._radiusVelocity.value = 0;\n      }\n\n      if ((_this._state & ACTION.ZOOM) === ACTION.ZOOM || (_this._state & ACTION.TOUCH_ZOOM) === ACTION.TOUCH_ZOOM || (_this._state & ACTION.TOUCH_ZOOM_TRUCK) === ACTION.TOUCH_ZOOM_TRUCK || (_this._state & ACTION.TOUCH_ZOOM_OFFSET) === ACTION.TOUCH_ZOOM_OFFSET || (_this._state & ACTION.TOUCH_ZOOM_ROTATE) === ACTION.TOUCH_ZOOM_ROTATE) {\n        _this._zoomEnd = _this._zoom;\n        _this._zoomVelocity.value = 0;\n      }\n\n      if ((_this._state & ACTION.OFFSET) === ACTION.OFFSET || (_this._state & ACTION.TOUCH_OFFSET) === ACTION.TOUCH_OFFSET || (_this._state & ACTION.TOUCH_DOLLY_OFFSET) === ACTION.TOUCH_DOLLY_OFFSET || (_this._state & ACTION.TOUCH_ZOOM_OFFSET) === ACTION.TOUCH_ZOOM_OFFSET) {\n        _this._focalOffsetEnd.copy(_this._focalOffset);\n\n        _this._focalOffsetVelocity.set(0, 0, 0);\n      }\n\n      _this.dispatchEvent({\n        type: 'controlstart'\n      });\n    };\n\n    var dragging = function dragging() {\n      if (!_this._enabled) return;\n      extractClientCoordFromEvent(_this._activePointers, _v2); // When pointer lock is enabled clientX, clientY, screenX, and screenY remain 0.\n      // If pointer lock is enabled, use the Delta directory, and assume active-pointer is not multiple.\n\n      var isPointerLockActive = _this._domElement && document.pointerLockElement === _this._domElement;\n      var lockedPointer = isPointerLockActive ? _this._lockedPointer || _this._activePointers[0] : null;\n      var deltaX = lockedPointer ? -lockedPointer.deltaX : lastDragPosition.x - _v2.x;\n      var deltaY = lockedPointer ? -lockedPointer.deltaY : lastDragPosition.y - _v2.y;\n      lastDragPosition.copy(_v2);\n\n      if ((_this._state & ACTION.ROTATE) === ACTION.ROTATE || (_this._state & ACTION.TOUCH_ROTATE) === ACTION.TOUCH_ROTATE || (_this._state & ACTION.TOUCH_DOLLY_ROTATE) === ACTION.TOUCH_DOLLY_ROTATE || (_this._state & ACTION.TOUCH_ZOOM_ROTATE) === ACTION.TOUCH_ZOOM_ROTATE) {\n        _this._rotateInternal(deltaX, deltaY);\n\n        _this._isUserControllingRotate = true;\n      }\n\n      if ((_this._state & ACTION.DOLLY) === ACTION.DOLLY || (_this._state & ACTION.ZOOM) === ACTION.ZOOM) {\n        var dollyX = _this.dollyToCursor ? (dragStartPosition.x - _this._elementRect.x) / _this._elementRect.width * 2 - 1 : 0;\n        var dollyY = _this.dollyToCursor ? (dragStartPosition.y - _this._elementRect.y) / _this._elementRect.height * -2 + 1 : 0;\n        var dollyDirection = _this.dollyDragInverted ? -1 : 1;\n\n        if ((_this._state & ACTION.DOLLY) === ACTION.DOLLY) {\n          _this._dollyInternal(dollyDirection * deltaY * TOUCH_DOLLY_FACTOR, dollyX, dollyY);\n\n          _this._isUserControllingDolly = true;\n        } else {\n          _this._zoomInternal(dollyDirection * deltaY * TOUCH_DOLLY_FACTOR, dollyX, dollyY);\n\n          _this._isUserControllingZoom = true;\n        }\n      }\n\n      if ((_this._state & ACTION.TOUCH_DOLLY) === ACTION.TOUCH_DOLLY || (_this._state & ACTION.TOUCH_ZOOM) === ACTION.TOUCH_ZOOM || (_this._state & ACTION.TOUCH_DOLLY_TRUCK) === ACTION.TOUCH_DOLLY_TRUCK || (_this._state & ACTION.TOUCH_ZOOM_TRUCK) === ACTION.TOUCH_ZOOM_TRUCK || (_this._state & ACTION.TOUCH_DOLLY_OFFSET) === ACTION.TOUCH_DOLLY_OFFSET || (_this._state & ACTION.TOUCH_ZOOM_OFFSET) === ACTION.TOUCH_ZOOM_OFFSET || (_this._state & ACTION.TOUCH_DOLLY_ROTATE) === ACTION.TOUCH_DOLLY_ROTATE || (_this._state & ACTION.TOUCH_ZOOM_ROTATE) === ACTION.TOUCH_ZOOM_ROTATE) {\n        var dx = _v2.x - _this._activePointers[1].clientX;\n        var dy = _v2.y - _this._activePointers[1].clientY;\n        var distance = Math.sqrt(dx * dx + dy * dy);\n        var dollyDelta = dollyStart.y - distance;\n        dollyStart.set(0, distance);\n\n        var _dollyX = _this.dollyToCursor ? (lastDragPosition.x - _this._elementRect.x) / _this._elementRect.width * 2 - 1 : 0;\n\n        var _dollyY = _this.dollyToCursor ? (lastDragPosition.y - _this._elementRect.y) / _this._elementRect.height * -2 + 1 : 0;\n\n        if ((_this._state & ACTION.TOUCH_DOLLY) === ACTION.TOUCH_DOLLY || (_this._state & ACTION.TOUCH_DOLLY_ROTATE) === ACTION.TOUCH_DOLLY_ROTATE || (_this._state & ACTION.TOUCH_DOLLY_TRUCK) === ACTION.TOUCH_DOLLY_TRUCK || (_this._state & ACTION.TOUCH_DOLLY_OFFSET) === ACTION.TOUCH_DOLLY_OFFSET) {\n          _this._dollyInternal(dollyDelta * TOUCH_DOLLY_FACTOR, _dollyX, _dollyY);\n\n          _this._isUserControllingDolly = true;\n        } else {\n          _this._zoomInternal(dollyDelta * TOUCH_DOLLY_FACTOR, _dollyX, _dollyY);\n\n          _this._isUserControllingZoom = true;\n        }\n      }\n\n      if ((_this._state & ACTION.TRUCK) === ACTION.TRUCK || (_this._state & ACTION.TOUCH_TRUCK) === ACTION.TOUCH_TRUCK || (_this._state & ACTION.TOUCH_DOLLY_TRUCK) === ACTION.TOUCH_DOLLY_TRUCK || (_this._state & ACTION.TOUCH_ZOOM_TRUCK) === ACTION.TOUCH_ZOOM_TRUCK) {\n        _this._truckInternal(deltaX, deltaY, false);\n\n        _this._isUserControllingTruck = true;\n      }\n\n      if ((_this._state & ACTION.OFFSET) === ACTION.OFFSET || (_this._state & ACTION.TOUCH_OFFSET) === ACTION.TOUCH_OFFSET || (_this._state & ACTION.TOUCH_DOLLY_OFFSET) === ACTION.TOUCH_DOLLY_OFFSET || (_this._state & ACTION.TOUCH_ZOOM_OFFSET) === ACTION.TOUCH_ZOOM_OFFSET) {\n        _this._truckInternal(deltaX, deltaY, true);\n\n        _this._isUserControllingOffset = true;\n      }\n\n      _this.dispatchEvent({\n        type: 'control'\n      });\n    };\n\n    var endDragging = function endDragging() {\n      extractClientCoordFromEvent(_this._activePointers, _v2);\n      lastDragPosition.copy(_v2);\n\n      if (_this._activePointers.length === 0 || _this._activePointers.length === 1 && _this._activePointers[0] === _this._lockedPointer) {\n        _this._isDragging = false;\n      }\n\n      if (_this._activePointers.length === 0 && _this._domElement) {\n        // eslint-disable-next-line no-undef\n        _this._domElement.ownerDocument.removeEventListener('pointermove', onPointerMove, {\n          passive: false\n        });\n\n        _this._domElement.ownerDocument.removeEventListener('mousemove', onMouseMove);\n\n        _this._domElement.ownerDocument.removeEventListener('pointerup', onPointerUp);\n\n        _this._domElement.ownerDocument.removeEventListener('mouseup', onMouseUp);\n\n        _this.dispatchEvent({\n          type: 'controlend'\n        });\n      }\n    };\n\n    _this.lockPointer = function () {\n      if (!_this._enabled || !_this._domElement) return;\n\n      _this.cancel(); // Element.requestPointerLock is allowed to happen without any pointer active - create a faux one for compatibility with controls\n\n\n      _this._lockedPointer = {\n        pointerId: -1,\n        clientX: 0,\n        clientY: 0,\n        deltaX: 0,\n        deltaY: 0,\n        mouseButton: null\n      };\n\n      _this._activePointers.push(_this._lockedPointer); // eslint-disable-next-line no-undef\n\n\n      _this._domElement.ownerDocument.removeEventListener('pointermove', onPointerMove, {\n        passive: false\n      });\n\n      _this._domElement.ownerDocument.removeEventListener('pointerup', onPointerUp);\n\n      _this._domElement.requestPointerLock();\n\n      _this._domElement.ownerDocument.addEventListener('pointerlockchange', onPointerLockChange);\n\n      _this._domElement.ownerDocument.addEventListener('pointerlockerror', onPointerLockError);\n\n      _this._domElement.ownerDocument.addEventListener('pointermove', onPointerMove, {\n        passive: false\n      });\n\n      _this._domElement.ownerDocument.addEventListener('pointerup', onPointerUp);\n\n      startDragging();\n    };\n\n    _this.unlockPointer = function () {\n      if (_this._lockedPointer !== null) {\n        _this._disposePointer(_this._lockedPointer);\n\n        _this._lockedPointer = null;\n      }\n\n      document.exitPointerLock();\n\n      _this.cancel();\n\n      if (!_this._domElement) return;\n\n      _this._domElement.ownerDocument.removeEventListener('pointerlockchange', onPointerLockChange);\n\n      _this._domElement.ownerDocument.removeEventListener('pointerlockerror', onPointerLockError);\n    };\n\n    var onPointerLockChange = function onPointerLockChange() {\n      var isPointerLockActive = _this._domElement && _this._domElement.ownerDocument.pointerLockElement === _this._domElement;\n      if (!isPointerLockActive) _this.unlockPointer();\n    };\n\n    var onPointerLockError = function onPointerLockError() {\n      _this.unlockPointer();\n    };\n\n    _this._addAllEventListeners = function (domElement) {\n      _this._domElement = domElement;\n      _this._domElement.style.touchAction = 'none';\n      _this._domElement.style.userSelect = 'none';\n      _this._domElement.style.webkitUserSelect = 'none';\n\n      _this._domElement.addEventListener('pointerdown', onPointerDown);\n\n      isPointerEventsNotSupported && _this._domElement.addEventListener('mousedown', onMouseDown);\n\n      _this._domElement.addEventListener('pointercancel', onPointerUp);\n\n      _this._domElement.addEventListener('wheel', onMouseWheel, {\n        passive: false\n      });\n\n      _this._domElement.addEventListener('contextmenu', onContextMenu);\n    };\n\n    _this._removeAllEventListeners = function () {\n      if (!_this._domElement) return;\n      _this._domElement.style.touchAction = '';\n      _this._domElement.style.userSelect = '';\n      _this._domElement.style.webkitUserSelect = '';\n\n      _this._domElement.removeEventListener('pointerdown', onPointerDown);\n\n      _this._domElement.removeEventListener('mousedown', onMouseDown);\n\n      _this._domElement.removeEventListener('pointercancel', onPointerUp); // https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/removeEventListener#matching_event_listeners_for_removal\n      // > it's probably wise to use the same values used for the call to `addEventListener()` when calling `removeEventListener()`\n      // see https://github.com/microsoft/TypeScript/issues/32912#issuecomment-522142969\n      // eslint-disable-next-line no-undef\n\n\n      _this._domElement.removeEventListener('wheel', onMouseWheel, {\n        passive: false\n      });\n\n      _this._domElement.removeEventListener('contextmenu', onContextMenu); // eslint-disable-next-line no-undef\n\n\n      _this._domElement.ownerDocument.removeEventListener('pointermove', onPointerMove, {\n        passive: false\n      });\n\n      _this._domElement.ownerDocument.removeEventListener('mousemove', onMouseMove);\n\n      _this._domElement.ownerDocument.removeEventListener('pointerup', onPointerUp);\n\n      _this._domElement.ownerDocument.removeEventListener('mouseup', onMouseUp);\n\n      _this._domElement.ownerDocument.removeEventListener('pointerlockchange', onPointerLockChange);\n\n      _this._domElement.ownerDocument.removeEventListener('pointerlockerror', onPointerLockError);\n    };\n\n    _this.cancel = function () {\n      if (_this._state === ACTION.NONE) return;\n      _this._state = ACTION.NONE;\n      _this._activePointers.length = 0;\n      endDragging();\n    };\n\n    if (domElement) _this.connect(domElement);\n\n    _this.update(0);\n\n    return _this;\n  }\n  /**\n   * The camera to be controlled\n   * @category Properties\n   */\n\n\n  _createClass(CameraControls, [{\n    key: \"camera\",\n    get: function get() {\n      return this._camera;\n    },\n    set: function set(camera) {\n      this._camera = camera;\n      this.updateCameraUp();\n\n      this._camera.updateProjectionMatrix();\n\n      this._updateNearPlaneCorners();\n\n      this._needsUpdate = true;\n    }\n    /**\n     * Whether or not the controls are enabled.\n     * `false` to disable user dragging/touch-move, but all methods works.\n     * @category Properties\n     */\n\n  }, {\n    key: \"enabled\",\n    get: function get() {\n      return this._enabled;\n    },\n    set: function set(enabled) {\n      this._enabled = enabled;\n      if (!this._domElement) return;\n\n      if (enabled) {\n        this._domElement.style.touchAction = 'none';\n        this._domElement.style.userSelect = 'none';\n        this._domElement.style.webkitUserSelect = 'none';\n      } else {\n        this.cancel();\n        this._domElement.style.touchAction = '';\n        this._domElement.style.userSelect = '';\n        this._domElement.style.webkitUserSelect = '';\n      }\n    }\n    /**\n     * Returns `true` if the controls are active updating.\n     * readonly value.\n     * @category Properties\n     */\n\n  }, {\n    key: \"active\",\n    get: function get() {\n      return !this._hasRested;\n    }\n    /**\n     * Getter for the current `ACTION`.\n     * readonly value.\n     * @category Properties\n     */\n\n  }, {\n    key: \"currentAction\",\n    get: function get() {\n      return this._state;\n    }\n    /**\n     * get/set Current distance.\n     * @category Properties\n     */\n\n  }, {\n    key: \"distance\",\n    get: function get() {\n      return this._spherical.radius;\n    },\n    set: function set(distance) {\n      if (this._spherical.radius === distance && this._sphericalEnd.radius === distance) return;\n      this._spherical.radius = distance;\n      this._sphericalEnd.radius = distance;\n      this._needsUpdate = true;\n    } // horizontal angle\n\n    /**\n     * get/set the azimuth angle (horizontal) in radians.\n     * Every 360 degrees turn is added to `.azimuthAngle` value, which is accumulative.\n     * @category Properties\n     */\n\n  }, {\n    key: \"azimuthAngle\",\n    get: function get() {\n      return this._spherical.theta;\n    },\n    set: function set(azimuthAngle) {\n      if (this._spherical.theta === azimuthAngle && this._sphericalEnd.theta === azimuthAngle) return;\n      this._spherical.theta = azimuthAngle;\n      this._sphericalEnd.theta = azimuthAngle;\n      this._needsUpdate = true;\n    } // vertical angle\n\n    /**\n     * get/set the polar angle (vertical) in radians.\n     * @category Properties\n     */\n\n  }, {\n    key: \"polarAngle\",\n    get: function get() {\n      return this._spherical.phi;\n    },\n    set: function set(polarAngle) {\n      if (this._spherical.phi === polarAngle && this._sphericalEnd.phi === polarAngle) return;\n      this._spherical.phi = polarAngle;\n      this._sphericalEnd.phi = polarAngle;\n      this._needsUpdate = true;\n    }\n    /**\n     * Whether camera position should be enclosed in the boundary or not.\n     * @category Properties\n     */\n\n  }, {\n    key: \"boundaryEnclosesCamera\",\n    get: function get() {\n      return this._boundaryEnclosesCamera;\n    },\n    set: function set(boundaryEnclosesCamera) {\n      this._boundaryEnclosesCamera = boundaryEnclosesCamera;\n      this._needsUpdate = true;\n    }\n    /**\n     * Adds the specified event listener.\n     * Applicable event types (which is `K`) are:\n     * | Event name          | Timing |\n     * | ------------------- | ------ |\n     * | `'controlstart'`    | When the user starts to control the camera via mouse / touches. ¹ |\n     * | `'control'`         | When the user controls the camera (dragging). |\n     * | `'controlend'`      | When the user ends to control the camera. ¹ |\n     * | `'transitionstart'` | When any kind of transition starts, either user control or using a method with `enableTransition = true` |\n     * | `'update'`          | When the camera position is updated. |\n     * | `'wake'`            | When the camera starts moving. |\n     * | `'rest'`            | When the camera movement is below `.restThreshold` ². |\n     * | `'sleep'`           | When the camera end moving. |\n     *\n     * 1. `mouseButtons.wheel` (Mouse wheel control) does not emit `'controlstart'` and `'controlend'`. `mouseButtons.wheel` uses scroll-event internally, and scroll-event happens intermittently. That means \"start\" and \"end\" cannot be detected.\n     * 2. Due to damping, `sleep` will usually fire a few seconds after the camera _appears_ to have stopped moving. If you want to do something (e.g. enable UI, perform another transition) at the point when the camera has stopped, you probably want the `rest` event. This can be fine tuned using the `.restThreshold` parameter. See the [Rest and Sleep Example](https://yomotsu.github.io/camera-controls/examples/rest-and-sleep.html).\n     *\n     * e.g.\n     * ```\n     * cameraControl.addEventListener( 'controlstart', myCallbackFunction );\n     * ```\n     * @param type event name\n     * @param listener handler function\n     * @category Methods\n     */\n\n  }, {\n    key: \"addEventListener\",\n    value: function addEventListener(type, listener) {\n      _get(_getPrototypeOf(CameraControls.prototype), \"addEventListener\", this).call(this, type, listener);\n    }\n    /**\n     * Removes the specified event listener\n     * e.g.\n     * ```\n     * cameraControl.addEventListener( 'controlstart', myCallbackFunction );\n     * ```\n     * @param type event name\n     * @param listener handler function\n     * @category Methods\n     */\n\n  }, {\n    key: \"removeEventListener\",\n    value: function removeEventListener(type, listener) {\n      _get(_getPrototypeOf(CameraControls.prototype), \"removeEventListener\", this).call(this, type, listener);\n    }\n    /**\n     * Rotate azimuthal angle(horizontal) and polar angle(vertical).\n     * Every value is added to the current value.\n     * @param azimuthAngle Azimuth rotate angle. In radian.\n     * @param polarAngle Polar rotate angle. In radian.\n     * @param enableTransition Whether to move smoothly or immediately\n     * @category Methods\n     */\n\n  }, {\n    key: \"rotate\",\n    value: function rotate(azimuthAngle, polarAngle) {\n      var enableTransition = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n      return this.rotateTo(this._sphericalEnd.theta + azimuthAngle, this._sphericalEnd.phi + polarAngle, enableTransition);\n    }\n    /**\n     * Rotate azimuthal angle(horizontal) to the given angle and keep the same polar angle(vertical) target.\n     *\n     * e.g.\n     * ```\n     * cameraControls.rotateAzimuthTo( 30 * THREE.MathUtils.DEG2RAD, true );\n     * ```\n     * @param azimuthAngle Azimuth rotate angle. In radian.\n     * @param enableTransition Whether to move smoothly or immediately\n     * @category Methods\n     */\n\n  }, {\n    key: \"rotateAzimuthTo\",\n    value: function rotateAzimuthTo(azimuthAngle) {\n      var enableTransition = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n      return this.rotateTo(azimuthAngle, this._sphericalEnd.phi, enableTransition);\n    }\n    /**\n     * Rotate polar angle(vertical) to the given angle and keep the same azimuthal angle(horizontal) target.\n     *\n     * e.g.\n     * ```\n     * cameraControls.rotatePolarTo( 30 * THREE.MathUtils.DEG2RAD, true );\n     * ```\n     * @param polarAngle Polar rotate angle. In radian.\n     * @param enableTransition Whether to move smoothly or immediately\n     * @category Methods\n     */\n\n  }, {\n    key: \"rotatePolarTo\",\n    value: function rotatePolarTo(polarAngle) {\n      var enableTransition = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n      return this.rotateTo(this._sphericalEnd.theta, polarAngle, enableTransition);\n    }\n    /**\n     * Rotate azimuthal angle(horizontal) and polar angle(vertical) to the given angle.\n     * Camera view will rotate over the orbit pivot absolutely:\n     *\n     * azimuthAngle\n     * ```\n     *       0º\n     *         \\\n     * 90º -----+----- -90º\n     *           \\\n     *           180º\n     * ```\n     * | direction | angle                  |\n     * | --------- | ---------------------- |\n     * | front     | 0º                     |\n     * | left      | 90º (`Math.PI / 2`)    |\n     * | right     | -90º (`- Math.PI / 2`) |\n     * | back      | 180º (`Math.PI`)       |\n     *\n     * polarAngle\n     * ```\n     *     180º\n     *      |\n     *      90º\n     *      |\n     *      0º\n     * ```\n     * | direction            | angle                  |\n     * | -------------------- | ---------------------- |\n     * | top/sky              | 180º (`Math.PI`)       |\n     * | horizontal from view | 90º (`Math.PI / 2`)    |\n     * | bottom/floor         | 0º                     |\n     *\n     * @param azimuthAngle Azimuth rotate angle to. In radian.\n     * @param polarAngle Polar rotate angle to. In radian.\n     * @param enableTransition  Whether to move smoothly or immediately\n     * @category Methods\n     */\n\n  }, {\n    key: \"rotateTo\",\n    value: function rotateTo(azimuthAngle, polarAngle) {\n      var enableTransition = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n      this._isUserControllingRotate = false;\n      var theta = clamp(azimuthAngle, this.minAzimuthAngle, this.maxAzimuthAngle);\n      var phi = clamp(polarAngle, this.minPolarAngle, this.maxPolarAngle);\n      this._sphericalEnd.theta = theta;\n      this._sphericalEnd.phi = phi;\n\n      this._sphericalEnd.makeSafe();\n\n      this._needsUpdate = true;\n\n      if (!enableTransition) {\n        this._spherical.theta = this._sphericalEnd.theta;\n        this._spherical.phi = this._sphericalEnd.phi;\n      }\n\n      var resolveImmediately = !enableTransition || approxEquals(this._spherical.theta, this._sphericalEnd.theta, this.restThreshold) && approxEquals(this._spherical.phi, this._sphericalEnd.phi, this.restThreshold);\n      return this._createOnRestPromise(resolveImmediately);\n    }\n    /**\n     * Dolly in/out camera position.\n     * @param distance Distance of dollyIn. Negative number for dollyOut.\n     * @param enableTransition Whether to move smoothly or immediately.\n     * @category Methods\n     */\n\n  }, {\n    key: \"dolly\",\n    value: function dolly(distance) {\n      var enableTransition = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n      return this.dollyTo(this._sphericalEnd.radius - distance, enableTransition);\n    }\n    /**\n     * Dolly in/out camera position to given distance.\n     * @param distance Distance of dolly.\n     * @param enableTransition Whether to move smoothly or immediately.\n     * @category Methods\n     */\n\n  }, {\n    key: \"dollyTo\",\n    value: function dollyTo(distance) {\n      var enableTransition = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n      this._isUserControllingDolly = false;\n      var lastRadius = this._sphericalEnd.radius;\n      var newRadius = clamp(distance, this.minDistance, this.maxDistance);\n      var hasCollider = this.colliderMeshes.length >= 1;\n\n      if (hasCollider) {\n        var maxDistanceByCollisionTest = this._collisionTest();\n\n        var isCollided = approxEquals(maxDistanceByCollisionTest, this._spherical.radius);\n        var isDollyIn = lastRadius > newRadius;\n        if (!isDollyIn && isCollided) return Promise.resolve();\n        this._sphericalEnd.radius = Math.min(newRadius, maxDistanceByCollisionTest);\n      } else {\n        this._sphericalEnd.radius = newRadius;\n      }\n\n      this._needsUpdate = true;\n\n      if (!enableTransition) {\n        this._spherical.radius = this._sphericalEnd.radius;\n      }\n\n      var resolveImmediately = !enableTransition || approxEquals(this._spherical.radius, this._sphericalEnd.radius, this.restThreshold);\n      return this._createOnRestPromise(resolveImmediately);\n    }\n    /**\n     * Zoom in/out camera. The value is added to camera zoom.\n     * Limits set with `.minZoom` and `.maxZoom`\n     * @param zoomStep zoom scale\n     * @param enableTransition Whether to move smoothly or immediately\n     * @category Methods\n     */\n\n  }, {\n    key: \"zoom\",\n    value: function zoom(zoomStep) {\n      var enableTransition = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n      return this.zoomTo(this._zoomEnd + zoomStep, enableTransition);\n    }\n    /**\n     * Zoom in/out camera to given scale. The value overwrites camera zoom.\n     * Limits set with .minZoom and .maxZoom\n     * @param zoom\n     * @param enableTransition\n     * @category Methods\n     */\n\n  }, {\n    key: \"zoomTo\",\n    value: function zoomTo(zoom) {\n      var enableTransition = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n      this._isUserControllingZoom = false;\n      this._zoomEnd = clamp(zoom, this.minZoom, this.maxZoom);\n      this._needsUpdate = true;\n\n      if (!enableTransition) {\n        this._zoom = this._zoomEnd;\n      }\n\n      var resolveImmediately = !enableTransition || approxEquals(this._zoom, this._zoomEnd, this.restThreshold);\n      return this._createOnRestPromise(resolveImmediately);\n    }\n    /**\n     * @deprecated `pan()` has been renamed to `truck()`\n     * @category Methods\n     */\n\n  }, {\n    key: \"pan\",\n    value: function pan(x, y) {\n      var enableTransition = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n      console.warn('`pan` has been renamed to `truck`');\n      return this.truck(x, y, enableTransition);\n    }\n    /**\n     * Truck and pedestal camera using current azimuthal angle\n     * @param x Horizontal translate amount\n     * @param y Vertical translate amount\n     * @param enableTransition Whether to move smoothly or immediately\n     * @category Methods\n     */\n\n  }, {\n    key: \"truck\",\n    value: function truck(x, y) {\n      var enableTransition = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n\n      this._camera.updateMatrix();\n\n      _xColumn.setFromMatrixColumn(this._camera.matrix, 0);\n\n      _yColumn.setFromMatrixColumn(this._camera.matrix, 1);\n\n      _xColumn.multiplyScalar(x);\n\n      _yColumn.multiplyScalar(-y);\n\n      var offset = _v3A.copy(_xColumn).add(_yColumn);\n\n      var to = _v3B.copy(this._targetEnd).add(offset);\n\n      return this.moveTo(to.x, to.y, to.z, enableTransition);\n    }\n    /**\n     * Move forward / backward.\n     * @param distance Amount to move forward / backward. Negative value to move backward\n     * @param enableTransition Whether to move smoothly or immediately\n     * @category Methods\n     */\n\n  }, {\n    key: \"forward\",\n    value: function forward(distance) {\n      var enableTransition = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n\n      _v3A.setFromMatrixColumn(this._camera.matrix, 0);\n\n      _v3A.crossVectors(this._camera.up, _v3A);\n\n      _v3A.multiplyScalar(distance);\n\n      var to = _v3B.copy(this._targetEnd).add(_v3A);\n\n      return this.moveTo(to.x, to.y, to.z, enableTransition);\n    }\n    /**\n     * Move up / down.\n     * @param height Amount to move up / down. Negative value to move down\n     * @param enableTransition Whether to move smoothly or immediately\n     * @category Methods\n     */\n\n  }, {\n    key: \"elevate\",\n    value: function elevate(height) {\n      var enableTransition = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n\n      _v3A.copy(this._camera.up).multiplyScalar(height);\n\n      return this.moveTo(this._targetEnd.x + _v3A.x, this._targetEnd.y + _v3A.y, this._targetEnd.z + _v3A.z, enableTransition);\n    }\n    /**\n     * Move target position to given point.\n     * @param x x coord to move center position\n     * @param y y coord to move center position\n     * @param z z coord to move center position\n     * @param enableTransition Whether to move smoothly or immediately\n     * @category Methods\n     */\n\n  }, {\n    key: \"moveTo\",\n    value: function moveTo(x, y, z) {\n      var enableTransition = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : false;\n      this._isUserControllingTruck = false;\n\n      var offset = _v3A.set(x, y, z).sub(this._targetEnd);\n\n      this._encloseToBoundary(this._targetEnd, offset, this.boundaryFriction);\n\n      this._needsUpdate = true;\n\n      if (!enableTransition) {\n        this._target.copy(this._targetEnd);\n      }\n\n      var resolveImmediately = !enableTransition || approxEquals(this._target.x, this._targetEnd.x, this.restThreshold) && approxEquals(this._target.y, this._targetEnd.y, this.restThreshold) && approxEquals(this._target.z, this._targetEnd.z, this.restThreshold);\n      return this._createOnRestPromise(resolveImmediately);\n    }\n    /**\n     * Look in the given point direction.\n     * @param x point x.\n     * @param y point y.\n     * @param z point z.\n     * @param enableTransition Whether to move smoothly or immediately.\n     * @returns Transition end promise\n     * @category Methods\n     */\n\n  }, {\n    key: \"lookInDirectionOf\",\n    value: function lookInDirectionOf(x, y, z) {\n      var enableTransition = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : false;\n\n      var point = _v3A.set(x, y, z);\n\n      var direction = point.sub(this._targetEnd).normalize();\n      var position = direction.multiplyScalar(-this._sphericalEnd.radius);\n      return this.setPosition(position.x, position.y, position.z, enableTransition);\n    }\n    /**\n     * Fit the viewport to the box or the bounding box of the object, using the nearest axis. paddings are in unit.\n     * set `cover: true` to fill enter screen.\n     * e.g.\n     * ```\n     * cameraControls.fitToBox( myMesh );\n     * ```\n     * @param box3OrObject Axis aligned bounding box to fit the view.\n     * @param enableTransition Whether to move smoothly or immediately.\n     * @param options | `<object>` { cover: boolean, paddingTop: number, paddingLeft: number, paddingBottom: number, paddingRight: number }\n     * @returns Transition end promise\n     * @category Methods\n     */\n\n  }, {\n    key: \"fitToBox\",\n    value: function fitToBox(box3OrObject, enableTransition) {\n      var _ref = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {},\n          _ref$cover = _ref.cover,\n          cover = _ref$cover === void 0 ? false : _ref$cover,\n          _ref$paddingLeft = _ref.paddingLeft,\n          paddingLeft = _ref$paddingLeft === void 0 ? 0 : _ref$paddingLeft,\n          _ref$paddingRight = _ref.paddingRight,\n          paddingRight = _ref$paddingRight === void 0 ? 0 : _ref$paddingRight,\n          _ref$paddingBottom = _ref.paddingBottom,\n          paddingBottom = _ref$paddingBottom === void 0 ? 0 : _ref$paddingBottom,\n          _ref$paddingTop = _ref.paddingTop,\n          paddingTop = _ref$paddingTop === void 0 ? 0 : _ref$paddingTop;\n\n      var promises = [];\n      var aabb = box3OrObject.isBox3 ? _box3A.copy(box3OrObject) : _box3A.setFromObject(box3OrObject);\n\n      if (aabb.isEmpty()) {\n        console.warn('camera-controls: fitTo() cannot be used with an empty box. Aborting');\n        Promise.resolve();\n      } // round to closest axis ( forward | backward | right | left | top | bottom )\n\n\n      var theta = roundToStep(this._sphericalEnd.theta, PI_HALF);\n      var phi = roundToStep(this._sphericalEnd.phi, PI_HALF);\n      promises.push(this.rotateTo(theta, phi, enableTransition));\n\n      var normal = _v3A.setFromSpherical(this._sphericalEnd).normalize();\n\n      var rotation = _quaternionA.setFromUnitVectors(normal, _AXIS_Z);\n\n      var viewFromPolar = approxEquals(Math.abs(normal.y), 1);\n\n      if (viewFromPolar) {\n        rotation.multiply(_quaternionB.setFromAxisAngle(_AXIS_Y, theta));\n      }\n\n      rotation.multiply(this._yAxisUpSpaceInverse); // make oriented bounding box\n\n      var bb = _box3B.makeEmpty(); // left bottom back corner\n\n\n      _v3B.copy(aabb.min).applyQuaternion(rotation);\n\n      bb.expandByPoint(_v3B); // right bottom back corner\n\n      _v3B.copy(aabb.min).setX(aabb.max.x).applyQuaternion(rotation);\n\n      bb.expandByPoint(_v3B); // left top back corner\n\n      _v3B.copy(aabb.min).setY(aabb.max.y).applyQuaternion(rotation);\n\n      bb.expandByPoint(_v3B); // right top back corner\n\n      _v3B.copy(aabb.max).setZ(aabb.min.z).applyQuaternion(rotation);\n\n      bb.expandByPoint(_v3B); // left bottom front corner\n\n      _v3B.copy(aabb.min).setZ(aabb.max.z).applyQuaternion(rotation);\n\n      bb.expandByPoint(_v3B); // right bottom front corner\n\n      _v3B.copy(aabb.max).setY(aabb.min.y).applyQuaternion(rotation);\n\n      bb.expandByPoint(_v3B); // left top front corner\n\n      _v3B.copy(aabb.max).setX(aabb.min.x).applyQuaternion(rotation);\n\n      bb.expandByPoint(_v3B); // right top front corner\n\n      _v3B.copy(aabb.max).applyQuaternion(rotation);\n\n      bb.expandByPoint(_v3B); // add padding\n\n      bb.min.x -= paddingLeft;\n      bb.min.y -= paddingBottom;\n      bb.max.x += paddingRight;\n      bb.max.y += paddingTop;\n      rotation.setFromUnitVectors(_AXIS_Z, normal);\n\n      if (viewFromPolar) {\n        rotation.premultiply(_quaternionB.invert());\n      }\n\n      rotation.premultiply(this._yAxisUpSpace);\n      var bbSize = bb.getSize(_v3A);\n      var center = bb.getCenter(_v3B).applyQuaternion(rotation);\n\n      if (isPerspectiveCamera(this._camera)) {\n        var distance = this.getDistanceToFitBox(bbSize.x, bbSize.y, bbSize.z, cover);\n        promises.push(this.moveTo(center.x, center.y, center.z, enableTransition));\n        promises.push(this.dollyTo(distance, enableTransition));\n        promises.push(this.setFocalOffset(0, 0, 0, enableTransition));\n      } else if (isOrthographicCamera(this._camera)) {\n        var camera = this._camera;\n        var width = camera.right - camera.left;\n        var height = camera.top - camera.bottom;\n        var zoom = cover ? Math.max(width / bbSize.x, height / bbSize.y) : Math.min(width / bbSize.x, height / bbSize.y);\n        promises.push(this.moveTo(center.x, center.y, center.z, enableTransition));\n        promises.push(this.zoomTo(zoom, enableTransition));\n        promises.push(this.setFocalOffset(0, 0, 0, enableTransition));\n      }\n\n      return Promise.all(promises);\n    }\n    /**\n     * Fit the viewport to the sphere or the bounding sphere of the object.\n     * @param sphereOrMesh\n     * @param enableTransition\n     * @category Methods\n     */\n\n  }, {\n    key: \"fitToSphere\",\n    value: function fitToSphere(sphereOrMesh, enableTransition) {\n      var promises = [];\n      var isSphere = sphereOrMesh instanceof THREE.Sphere;\n      var boundingSphere = isSphere ? _sphere.copy(sphereOrMesh) : CameraControls.createBoundingSphere(sphereOrMesh, _sphere);\n      promises.push(this.moveTo(boundingSphere.center.x, boundingSphere.center.y, boundingSphere.center.z, enableTransition));\n\n      if (isPerspectiveCamera(this._camera)) {\n        var distanceToFit = this.getDistanceToFitSphere(boundingSphere.radius);\n        promises.push(this.dollyTo(distanceToFit, enableTransition));\n      } else if (isOrthographicCamera(this._camera)) {\n        var width = this._camera.right - this._camera.left;\n        var height = this._camera.top - this._camera.bottom;\n        var diameter = 2 * boundingSphere.radius;\n        var zoom = Math.min(width / diameter, height / diameter);\n        promises.push(this.zoomTo(zoom, enableTransition));\n      }\n\n      promises.push(this.setFocalOffset(0, 0, 0, enableTransition));\n      return Promise.all(promises);\n    }\n    /**\n     * Look at the `target` from the `position`.\n     * @param positionX\n     * @param positionY\n     * @param positionZ\n     * @param targetX\n     * @param targetY\n     * @param targetZ\n     * @param enableTransition\n     * @category Methods\n     */\n\n  }, {\n    key: \"setLookAt\",\n    value: function setLookAt(positionX, positionY, positionZ, targetX, targetY, targetZ) {\n      var enableTransition = arguments.length > 6 && arguments[6] !== undefined ? arguments[6] : false;\n      this._isUserControllingRotate = false;\n      this._isUserControllingDolly = false;\n      this._isUserControllingTruck = false;\n\n      var target = _v3B.set(targetX, targetY, targetZ);\n\n      var position = _v3A.set(positionX, positionY, positionZ);\n\n      this._targetEnd.copy(target);\n\n      this._sphericalEnd.setFromVector3(position.sub(target).applyQuaternion(this._yAxisUpSpace));\n\n      this.normalizeRotations();\n      this._needsUpdate = true;\n\n      if (!enableTransition) {\n        this._target.copy(this._targetEnd);\n\n        this._spherical.copy(this._sphericalEnd);\n      }\n\n      var resolveImmediately = !enableTransition || approxEquals(this._target.x, this._targetEnd.x, this.restThreshold) && approxEquals(this._target.y, this._targetEnd.y, this.restThreshold) && approxEquals(this._target.z, this._targetEnd.z, this.restThreshold) && approxEquals(this._spherical.theta, this._sphericalEnd.theta, this.restThreshold) && approxEquals(this._spherical.phi, this._sphericalEnd.phi, this.restThreshold) && approxEquals(this._spherical.radius, this._sphericalEnd.radius, this.restThreshold);\n      return this._createOnRestPromise(resolveImmediately);\n    }\n    /**\n     * Similar to setLookAt, but it interpolates between two states.\n     * @param positionAX\n     * @param positionAY\n     * @param positionAZ\n     * @param targetAX\n     * @param targetAY\n     * @param targetAZ\n     * @param positionBX\n     * @param positionBY\n     * @param positionBZ\n     * @param targetBX\n     * @param targetBY\n     * @param targetBZ\n     * @param t\n     * @param enableTransition\n     * @category Methods\n     */\n\n  }, {\n    key: \"lerpLookAt\",\n    value: function lerpLookAt(positionAX, positionAY, positionAZ, targetAX, targetAY, targetAZ, positionBX, positionBY, positionBZ, targetBX, targetBY, targetBZ, t) {\n      var enableTransition = arguments.length > 13 && arguments[13] !== undefined ? arguments[13] : false;\n      this._isUserControllingRotate = false;\n      this._isUserControllingDolly = false;\n      this._isUserControllingTruck = false;\n\n      var targetA = _v3A.set(targetAX, targetAY, targetAZ);\n\n      var positionA = _v3B.set(positionAX, positionAY, positionAZ);\n\n      _sphericalA.setFromVector3(positionA.sub(targetA).applyQuaternion(this._yAxisUpSpace));\n\n      var targetB = _v3C.set(targetBX, targetBY, targetBZ);\n\n      var positionB = _v3B.set(positionBX, positionBY, positionBZ);\n\n      _sphericalB.setFromVector3(positionB.sub(targetB).applyQuaternion(this._yAxisUpSpace));\n\n      this._targetEnd.copy(targetA.lerp(targetB, t)); // tricky\n\n\n      var deltaTheta = _sphericalB.theta - _sphericalA.theta;\n      var deltaPhi = _sphericalB.phi - _sphericalA.phi;\n      var deltaRadius = _sphericalB.radius - _sphericalA.radius;\n\n      this._sphericalEnd.set(_sphericalA.radius + deltaRadius * t, _sphericalA.phi + deltaPhi * t, _sphericalA.theta + deltaTheta * t);\n\n      this.normalizeRotations();\n      this._needsUpdate = true;\n\n      if (!enableTransition) {\n        this._target.copy(this._targetEnd);\n\n        this._spherical.copy(this._sphericalEnd);\n      }\n\n      var resolveImmediately = !enableTransition || approxEquals(this._target.x, this._targetEnd.x, this.restThreshold) && approxEquals(this._target.y, this._targetEnd.y, this.restThreshold) && approxEquals(this._target.z, this._targetEnd.z, this.restThreshold) && approxEquals(this._spherical.theta, this._sphericalEnd.theta, this.restThreshold) && approxEquals(this._spherical.phi, this._sphericalEnd.phi, this.restThreshold) && approxEquals(this._spherical.radius, this._sphericalEnd.radius, this.restThreshold);\n      return this._createOnRestPromise(resolveImmediately);\n    }\n    /**\n     * Set angle and distance by given position.\n     * An alias of `setLookAt()`, without target change. Thus keep gazing at the current target\n     * @param positionX\n     * @param positionY\n     * @param positionZ\n     * @param enableTransition\n     * @category Methods\n     */\n\n  }, {\n    key: \"setPosition\",\n    value: function setPosition(positionX, positionY, positionZ) {\n      var enableTransition = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : false;\n      return this.setLookAt(positionX, positionY, positionZ, this._targetEnd.x, this._targetEnd.y, this._targetEnd.z, enableTransition);\n    }\n    /**\n     * Set the target position where gaze at.\n     * An alias of `setLookAt()`, without position change. Thus keep the same position.\n     * @param targetX\n     * @param targetY\n     * @param targetZ\n     * @param enableTransition\n     * @category Methods\n     */\n\n  }, {\n    key: \"setTarget\",\n    value: function setTarget(targetX, targetY, targetZ) {\n      var enableTransition = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : false;\n      var pos = this.getPosition(_v3A);\n      var promise = this.setLookAt(pos.x, pos.y, pos.z, targetX, targetY, targetZ, enableTransition); // see https://github.com/yomotsu/camera-controls/issues/335\n\n      this._sphericalEnd.phi = clamp(this.polarAngle, this.minPolarAngle, this.maxPolarAngle);\n      return promise;\n    }\n    /**\n     * Set focal offset using the screen parallel coordinates. z doesn't affect in Orthographic as with Dolly.\n     * @param x\n     * @param y\n     * @param z\n     * @param enableTransition\n     * @category Methods\n     */\n\n  }, {\n    key: \"setFocalOffset\",\n    value: function setFocalOffset(x, y, z) {\n      var enableTransition = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : false;\n      this._isUserControllingOffset = false;\n\n      this._focalOffsetEnd.set(x, y, z);\n\n      this._needsUpdate = true;\n      if (!enableTransition) this._focalOffset.copy(this._focalOffsetEnd);\n      var resolveImmediately = !enableTransition || approxEquals(this._focalOffset.x, this._focalOffsetEnd.x, this.restThreshold) && approxEquals(this._focalOffset.y, this._focalOffsetEnd.y, this.restThreshold) && approxEquals(this._focalOffset.z, this._focalOffsetEnd.z, this.restThreshold);\n      return this._createOnRestPromise(resolveImmediately);\n    }\n    /**\n     * Set orbit point without moving the camera.\n     * SHOULD NOT RUN DURING ANIMATIONS. `setOrbitPoint()` will immediately fix the positions.\n     * @param targetX\n     * @param targetY\n     * @param targetZ\n     * @category Methods\n     */\n\n  }, {\n    key: \"setOrbitPoint\",\n    value: function setOrbitPoint(targetX, targetY, targetZ) {\n      this._camera.updateMatrixWorld();\n\n      _xColumn.setFromMatrixColumn(this._camera.matrixWorldInverse, 0);\n\n      _yColumn.setFromMatrixColumn(this._camera.matrixWorldInverse, 1);\n\n      _zColumn.setFromMatrixColumn(this._camera.matrixWorldInverse, 2);\n\n      var position = _v3A.set(targetX, targetY, targetZ);\n\n      var distance = position.distanceTo(this._camera.position);\n      var cameraToPoint = position.sub(this._camera.position);\n\n      _xColumn.multiplyScalar(cameraToPoint.x);\n\n      _yColumn.multiplyScalar(cameraToPoint.y);\n\n      _zColumn.multiplyScalar(cameraToPoint.z);\n\n      _v3A.copy(_xColumn).add(_yColumn).add(_zColumn);\n\n      _v3A.z = _v3A.z + distance;\n      this.dollyTo(distance, false);\n      this.setFocalOffset(-_v3A.x, _v3A.y, -_v3A.z, false);\n      this.moveTo(targetX, targetY, targetZ, false);\n    }\n    /**\n     * Set the boundary box that encloses the target of the camera. box3 is in THREE.Box3\n     * @param box3\n     * @category Methods\n     */\n\n  }, {\n    key: \"setBoundary\",\n    value: function setBoundary(box3) {\n      if (!box3) {\n        this._boundary.min.set(-Infinity, -Infinity, -Infinity);\n\n        this._boundary.max.set(Infinity, Infinity, Infinity);\n\n        this._needsUpdate = true;\n        return;\n      }\n\n      this._boundary.copy(box3);\n\n      this._boundary.clampPoint(this._targetEnd, this._targetEnd);\n\n      this._needsUpdate = true;\n    }\n    /**\n     * Set (or unset) the current viewport.\n     * Set this when you want to use renderer viewport and .dollyToCursor feature at the same time.\n     * @param viewportOrX\n     * @param y\n     * @param width\n     * @param height\n     * @category Methods\n     */\n\n  }, {\n    key: \"setViewport\",\n    value: function setViewport(viewportOrX, y, width, height) {\n      if (viewportOrX === null) {\n        // null\n        this._viewport = null;\n        return;\n      }\n\n      this._viewport = this._viewport || new THREE.Vector4();\n\n      if (typeof viewportOrX === 'number') {\n        // number\n        this._viewport.set(viewportOrX, y, width, height);\n      } else {\n        // Vector4\n        this._viewport.copy(viewportOrX);\n      }\n    }\n    /**\n     * Calculate the distance to fit the box.\n     * @param width box width\n     * @param height box height\n     * @param depth box depth\n     * @returns distance\n     * @category Methods\n     */\n\n  }, {\n    key: \"getDistanceToFitBox\",\n    value: function getDistanceToFitBox(width, height, depth) {\n      var cover = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : false;\n      if (notSupportedInOrthographicCamera(this._camera, 'getDistanceToFitBox')) return this._spherical.radius;\n      var boundingRectAspect = width / height;\n      var fov = this._camera.getEffectiveFOV() * DEG2RAD;\n      var aspect = this._camera.aspect;\n      var heightToFit = (cover ? boundingRectAspect > aspect : boundingRectAspect < aspect) ? height : width / aspect;\n      return heightToFit * 0.5 / Math.tan(fov * 0.5) + depth * 0.5;\n    }\n    /**\n     * Calculate the distance to fit the sphere.\n     * @param radius sphere radius\n     * @returns distance\n     * @category Methods\n     */\n\n  }, {\n    key: \"getDistanceToFitSphere\",\n    value: function getDistanceToFitSphere(radius) {\n      if (notSupportedInOrthographicCamera(this._camera, 'getDistanceToFitSphere')) return this._spherical.radius; // https://stackoverflow.com/a/44849975\n\n      var vFOV = this._camera.getEffectiveFOV() * DEG2RAD;\n      var hFOV = Math.atan(Math.tan(vFOV * 0.5) * this._camera.aspect) * 2;\n      var fov = 1 < this._camera.aspect ? vFOV : hFOV;\n      return radius / Math.sin(fov * 0.5);\n    }\n    /**\n     * Returns its current gazing target, which is the center position of the orbit.\n     * @param out current gazing target\n     * @category Methods\n     */\n\n  }, {\n    key: \"getTarget\",\n    value: function getTarget(out) {\n      var _out = !!out && out.isVector3 ? out : new THREE.Vector3();\n\n      return _out.copy(this._targetEnd);\n    }\n    /**\n     * Returns its current position.\n     * @param out current position\n     * @category Methods\n     */\n\n  }, {\n    key: \"getPosition\",\n    value: function getPosition(out) {\n      var _out = !!out && out.isVector3 ? out : new THREE.Vector3();\n\n      return _out.setFromSpherical(this._sphericalEnd).applyQuaternion(this._yAxisUpSpaceInverse).add(this._targetEnd);\n    }\n    /**\n     * Returns its current focal offset, which is how much the camera appears to be translated in screen parallel coordinates.\n     * @param out current focal offset\n     * @category Methods\n     */\n\n  }, {\n    key: \"getFocalOffset\",\n    value: function getFocalOffset(out) {\n      var _out = !!out && out.isVector3 ? out : new THREE.Vector3();\n\n      return _out.copy(this._focalOffsetEnd);\n    }\n    /**\n     * Normalize camera azimuth angle rotation between 0 and 360 degrees.\n     * @category Methods\n     */\n\n  }, {\n    key: \"normalizeRotations\",\n    value: function normalizeRotations() {\n      this._sphericalEnd.theta = this._sphericalEnd.theta % PI_2;\n      if (this._sphericalEnd.theta < 0) this._sphericalEnd.theta += PI_2;\n      this._spherical.theta += PI_2 * Math.round((this._sphericalEnd.theta - this._spherical.theta) / PI_2);\n    }\n    /**\n     * Reset all rotation and position to defaults.\n     * @param enableTransition\n     * @category Methods\n     */\n\n  }, {\n    key: \"reset\",\n    value: function reset() {\n      var enableTransition = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n\n      if (!approxEquals(this._camera.up.x, this._cameraUp0.x) || !approxEquals(this._camera.up.y, this._cameraUp0.y) || !approxEquals(this._camera.up.z, this._cameraUp0.z)) {\n        this._camera.up.copy(this._cameraUp0);\n\n        var position = this.getPosition(_v3A);\n        this.updateCameraUp();\n        this.setPosition(position.x, position.y, position.z);\n      }\n\n      var promises = [this.setLookAt(this._position0.x, this._position0.y, this._position0.z, this._target0.x, this._target0.y, this._target0.z, enableTransition), this.setFocalOffset(this._focalOffset0.x, this._focalOffset0.y, this._focalOffset0.z, enableTransition), this.zoomTo(this._zoom0, enableTransition)];\n      return Promise.all(promises);\n    }\n    /**\n     * Set current camera position as the default position.\n     * @category Methods\n     */\n\n  }, {\n    key: \"saveState\",\n    value: function saveState() {\n      this._cameraUp0.copy(this._camera.up);\n\n      this.getTarget(this._target0);\n      this.getPosition(this._position0);\n      this._zoom0 = this._zoom;\n\n      this._focalOffset0.copy(this._focalOffset);\n    }\n    /**\n     * Sync camera-up direction.\n     * When camera-up vector is changed, `.updateCameraUp()` must be called.\n     * @category Methods\n     */\n\n  }, {\n    key: \"updateCameraUp\",\n    value: function updateCameraUp() {\n      this._yAxisUpSpace.setFromUnitVectors(this._camera.up, _AXIS_Y);\n\n      this._yAxisUpSpaceInverse.copy(this._yAxisUpSpace).invert();\n    }\n    /**\n     * Apply current camera-up direction to the camera.\n     * The orbit system will be re-initialized with the current position.\n     * @category Methods\n     */\n\n  }, {\n    key: \"applyCameraUp\",\n    value: function applyCameraUp() {\n      var cameraDirection = _v3A.subVectors(this._target, this._camera.position).normalize(); // So first find the vector off to the side, orthogonal to both this.object.up and\n      // the \"view\" vector.\n\n\n      var side = _v3B.crossVectors(cameraDirection, this._camera.up).normalize(); // Then find the vector orthogonal to both this \"side\" vector and the \"view\" vector.\n      // This vector will be the new \"up\" vector.\n\n\n      this._camera.up.crossVectors(side, cameraDirection).normalize();\n\n      this._camera.updateMatrixWorld();\n\n      var position = this.getPosition(_v3A);\n      this.updateCameraUp();\n      this.setPosition(position.x, position.y, position.z);\n    }\n    /**\n     * Update camera position and directions.\n     * This should be called in your tick loop every time, and returns true if re-rendering is needed.\n     * @param delta\n     * @returns updated\n     * @category Methods\n     */\n\n  }, {\n    key: \"update\",\n    value: function update(delta) {\n      var deltaTheta = this._sphericalEnd.theta - this._spherical.theta;\n      var deltaPhi = this._sphericalEnd.phi - this._spherical.phi;\n      var deltaRadius = this._sphericalEnd.radius - this._spherical.radius;\n\n      var deltaTarget = _deltaTarget.subVectors(this._targetEnd, this._target);\n\n      var deltaOffset = _deltaOffset.subVectors(this._focalOffsetEnd, this._focalOffset);\n\n      var deltaZoom = this._zoomEnd - this._zoom; // update theta\n\n      if (approxZero(deltaTheta)) {\n        this._thetaVelocity.value = 0;\n        this._spherical.theta = this._sphericalEnd.theta;\n      } else {\n        var smoothTime = this._isUserControllingRotate ? this.draggingSmoothTime : this.smoothTime;\n        this._spherical.theta = smoothDamp(this._spherical.theta, this._sphericalEnd.theta, this._thetaVelocity, smoothTime, Infinity, delta);\n        this._needsUpdate = true;\n      } // update phi\n\n\n      if (approxZero(deltaPhi)) {\n        this._phiVelocity.value = 0;\n        this._spherical.phi = this._sphericalEnd.phi;\n      } else {\n        var _smoothTime = this._isUserControllingRotate ? this.draggingSmoothTime : this.smoothTime;\n\n        this._spherical.phi = smoothDamp(this._spherical.phi, this._sphericalEnd.phi, this._phiVelocity, _smoothTime, Infinity, delta);\n        this._needsUpdate = true;\n      } // update distance\n\n\n      if (approxZero(deltaRadius)) {\n        this._radiusVelocity.value = 0;\n        this._spherical.radius = this._sphericalEnd.radius;\n      } else {\n        var _smoothTime2 = this._isUserControllingDolly ? this.draggingSmoothTime : this.smoothTime;\n\n        this._spherical.radius = smoothDamp(this._spherical.radius, this._sphericalEnd.radius, this._radiusVelocity, _smoothTime2, this.maxSpeed, delta);\n        this._needsUpdate = true;\n      } // update target position\n\n\n      if (approxZero(deltaTarget.x) && approxZero(deltaTarget.y) && approxZero(deltaTarget.z)) {\n        this._targetVelocity.set(0, 0, 0);\n\n        this._target.copy(this._targetEnd);\n      } else {\n        var _smoothTime3 = this._isUserControllingTruck ? this.draggingSmoothTime : this.smoothTime;\n\n        smoothDampVec3(this._target, this._targetEnd, this._targetVelocity, _smoothTime3, this.maxSpeed, delta, this._target);\n        this._needsUpdate = true;\n      } // update focalOffset\n\n\n      if (approxZero(deltaOffset.x) && approxZero(deltaOffset.y) && approxZero(deltaOffset.z)) {\n        this._focalOffsetVelocity.set(0, 0, 0);\n\n        this._focalOffset.copy(this._focalOffsetEnd);\n      } else {\n        var _smoothTime4 = this._isUserControllingOffset ? this.draggingSmoothTime : this.smoothTime;\n\n        smoothDampVec3(this._focalOffset, this._focalOffsetEnd, this._focalOffsetVelocity, _smoothTime4, this.maxSpeed, delta, this._focalOffset);\n        this._needsUpdate = true;\n      }\n\n      if (this._dollyControlAmount !== 0) {\n        if (isPerspectiveCamera(this._camera)) {\n          var camera = this._camera;\n\n          var cameraDirection = _v3A.setFromSpherical(this._spherical).applyQuaternion(this._yAxisUpSpaceInverse).normalize().negate();\n\n          var planeX = _v3B.copy(cameraDirection).cross(camera.up).normalize();\n\n          if (planeX.lengthSq() === 0) planeX.x = 1.0;\n\n          var planeY = _v3C.crossVectors(planeX, cameraDirection);\n\n          var worldToScreen = this._sphericalEnd.radius * Math.tan(camera.getEffectiveFOV() * DEG2RAD * 0.5);\n          var prevRadius = this._sphericalEnd.radius - this._dollyControlAmount;\n          var lerpRatio = (prevRadius - this._sphericalEnd.radius) / this._sphericalEnd.radius;\n\n          var cursor = _v3A.copy(this._targetEnd).add(planeX.multiplyScalar(this._dollyControlCoord.x * worldToScreen * camera.aspect)).add(planeY.multiplyScalar(this._dollyControlCoord.y * worldToScreen));\n\n          this._targetEnd.lerp(cursor, lerpRatio);\n        } else if (isOrthographicCamera(this._camera)) {\n          var _camera2 = this._camera;\n\n          var worldCursorPosition = _v3A.set(this._dollyControlCoord.x, this._dollyControlCoord.y, (_camera2.near + _camera2.far) / (_camera2.near - _camera2.far)).unproject(_camera2); //.sub( _v3B.set( this._focalOffset.x, this._focalOffset.y, 0 ) );\n\n\n          var quaternion = _v3B.set(0, 0, -1).applyQuaternion(_camera2.quaternion);\n\n          var _cursor = _v3C.copy(worldCursorPosition).add(quaternion.multiplyScalar(-worldCursorPosition.dot(_camera2.up)));\n\n          var prevZoom = this._zoom - this._dollyControlAmount;\n\n          var _lerpRatio = -(prevZoom - this._zoomEnd) / this._zoom; // find the \"distance\" (aka plane constant in three.js) of Plane\n          // from a given position (this._targetEnd) and normal vector (cameraDirection)\n          // https://www.maplesoft.com/support/help/maple/view.aspx?path=MathApps%2FEquationOfAPlaneNormal#bkmrk0\n\n\n          var _cameraDirection = _v3A.setFromSpherical(this._spherical).applyQuaternion(this._yAxisUpSpaceInverse).normalize().negate();\n\n          var prevPlaneConstant = this._targetEnd.dot(_cameraDirection);\n\n          this._targetEnd.lerp(_cursor, _lerpRatio);\n\n          var newPlaneConstant = this._targetEnd.dot(_cameraDirection); // Pull back the camera depth that has moved, to be the camera stationary as zoom\n\n\n          var pullBack = _cameraDirection.multiplyScalar(newPlaneConstant - prevPlaneConstant);\n\n          this._targetEnd.sub(pullBack);\n        }\n\n        this._target.copy(this._targetEnd); // target position may be moved beyond boundary.\n\n\n        this._boundary.clampPoint(this._targetEnd, this._targetEnd);\n\n        this._dollyControlAmount = 0;\n      } // update zoom\n\n\n      if (approxZero(deltaZoom)) {\n        this._zoomVelocity.value = 0;\n        this._zoom = this._zoomEnd;\n      } else {\n        var _smoothTime5 = this._isUserControllingZoom ? this.draggingSmoothTime : this.smoothTime;\n\n        this._zoom = smoothDamp(this._zoom, this._zoomEnd, this._zoomVelocity, _smoothTime5, Infinity, delta);\n      }\n\n      if (this._camera.zoom !== this._zoom) {\n        this._camera.zoom = this._zoom;\n\n        this._camera.updateProjectionMatrix();\n\n        this._updateNearPlaneCorners();\n\n        this._needsUpdate = true;\n      } // collision detection\n\n\n      var maxDistance = this._collisionTest();\n\n      this._spherical.radius = Math.min(this._spherical.radius, maxDistance); // decompose spherical to the camera position\n\n      this._spherical.makeSafe();\n\n      this._camera.position.setFromSpherical(this._spherical).applyQuaternion(this._yAxisUpSpaceInverse).add(this._target);\n\n      this._camera.lookAt(this._target); // set offset after the orbit movement\n\n\n      var affectOffset = !approxZero(this._focalOffset.x) || !approxZero(this._focalOffset.y) || !approxZero(this._focalOffset.z);\n\n      if (affectOffset) {\n        this._camera.updateMatrixWorld();\n\n        _xColumn.setFromMatrixColumn(this._camera.matrix, 0);\n\n        _yColumn.setFromMatrixColumn(this._camera.matrix, 1);\n\n        _zColumn.setFromMatrixColumn(this._camera.matrix, 2);\n\n        _xColumn.multiplyScalar(this._focalOffset.x);\n\n        _yColumn.multiplyScalar(-this._focalOffset.y);\n\n        _zColumn.multiplyScalar(this._focalOffset.z); // notice: z-offset will not affect in Orthographic.\n\n\n        _v3A.copy(_xColumn).add(_yColumn).add(_zColumn);\n\n        this._camera.position.add(_v3A);\n      }\n\n      if (this._boundaryEnclosesCamera) {\n        this._encloseToBoundary(this._camera.position.copy(this._target), _v3A.setFromSpherical(this._spherical).applyQuaternion(this._yAxisUpSpaceInverse), 1.0);\n      }\n\n      var updated = this._needsUpdate;\n\n      if (updated && !this._updatedLastTime) {\n        this._hasRested = false;\n        this.dispatchEvent({\n          type: 'wake'\n        });\n        this.dispatchEvent({\n          type: 'update'\n        });\n      } else if (updated) {\n        this.dispatchEvent({\n          type: 'update'\n        });\n\n        if (approxZero(deltaTheta, this.restThreshold) && approxZero(deltaPhi, this.restThreshold) && approxZero(deltaRadius, this.restThreshold) && approxZero(deltaTarget.x, this.restThreshold) && approxZero(deltaTarget.y, this.restThreshold) && approxZero(deltaTarget.z, this.restThreshold) && approxZero(deltaOffset.x, this.restThreshold) && approxZero(deltaOffset.y, this.restThreshold) && approxZero(deltaOffset.z, this.restThreshold) && approxZero(deltaZoom, this.restThreshold) && !this._hasRested) {\n          this._hasRested = true;\n          this.dispatchEvent({\n            type: 'rest'\n          });\n        }\n      } else if (!updated && this._updatedLastTime) {\n        this.dispatchEvent({\n          type: 'sleep'\n        });\n      }\n\n      this._updatedLastTime = updated;\n      this._needsUpdate = false;\n      return updated;\n    }\n    /**\n     * Get all state in JSON string\n     * @category Methods\n     */\n\n  }, {\n    key: \"toJSON\",\n    value: function toJSON() {\n      return JSON.stringify({\n        enabled: this._enabled,\n        minDistance: this.minDistance,\n        maxDistance: infinityToMaxNumber(this.maxDistance),\n        minZoom: this.minZoom,\n        maxZoom: infinityToMaxNumber(this.maxZoom),\n        minPolarAngle: this.minPolarAngle,\n        maxPolarAngle: infinityToMaxNumber(this.maxPolarAngle),\n        minAzimuthAngle: infinityToMaxNumber(this.minAzimuthAngle),\n        maxAzimuthAngle: infinityToMaxNumber(this.maxAzimuthAngle),\n        smoothTime: this.smoothTime,\n        draggingSmoothTime: this.draggingSmoothTime,\n        dollySpeed: this.dollySpeed,\n        truckSpeed: this.truckSpeed,\n        dollyToCursor: this.dollyToCursor,\n        verticalDragToForward: this.verticalDragToForward,\n        target: this._targetEnd.toArray(),\n        position: _v3A.setFromSpherical(this._sphericalEnd).add(this._targetEnd).toArray(),\n        zoom: this._zoomEnd,\n        focalOffset: this._focalOffsetEnd.toArray(),\n        target0: this._target0.toArray(),\n        position0: this._position0.toArray(),\n        zoom0: this._zoom0,\n        focalOffset0: this._focalOffset0.toArray()\n      });\n    }\n    /**\n     * Reproduce the control state with JSON. enableTransition is where anim or not in a boolean.\n     * @param json\n     * @param enableTransition\n     * @category Methods\n     */\n\n  }, {\n    key: \"fromJSON\",\n    value: function fromJSON(json) {\n      var enableTransition = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n      var obj = JSON.parse(json);\n      this.enabled = obj.enabled;\n      this.minDistance = obj.minDistance;\n      this.maxDistance = maxNumberToInfinity(obj.maxDistance);\n      this.minZoom = obj.minZoom;\n      this.maxZoom = maxNumberToInfinity(obj.maxZoom);\n      this.minPolarAngle = obj.minPolarAngle;\n      this.maxPolarAngle = maxNumberToInfinity(obj.maxPolarAngle);\n      this.minAzimuthAngle = maxNumberToInfinity(obj.minAzimuthAngle);\n      this.maxAzimuthAngle = maxNumberToInfinity(obj.maxAzimuthAngle);\n      this.smoothTime = obj.smoothTime;\n      this.draggingSmoothTime = obj.draggingSmoothTime;\n      this.dollySpeed = obj.dollySpeed;\n      this.truckSpeed = obj.truckSpeed;\n      this.dollyToCursor = obj.dollyToCursor;\n      this.verticalDragToForward = obj.verticalDragToForward;\n\n      this._target0.fromArray(obj.target0);\n\n      this._position0.fromArray(obj.position0);\n\n      this._zoom0 = obj.zoom0;\n\n      this._focalOffset0.fromArray(obj.focalOffset0);\n\n      this.moveTo(obj.target[0], obj.target[1], obj.target[2], enableTransition);\n\n      _sphericalA.setFromVector3(_v3A.fromArray(obj.position).sub(this._targetEnd).applyQuaternion(this._yAxisUpSpace));\n\n      this.rotateTo(_sphericalA.theta, _sphericalA.phi, enableTransition);\n      this.dollyTo(_sphericalA.radius, enableTransition);\n      this.zoomTo(obj.zoom, enableTransition);\n      this.setFocalOffset(obj.focalOffset[0], obj.focalOffset[1], obj.focalOffset[2], enableTransition);\n      this._needsUpdate = true;\n    }\n    /**\n     * Attach all internal event handlers to enable drag control.\n     * @category Methods\n     */\n\n  }, {\n    key: \"connect\",\n    value: function connect(domElement) {\n      if (this._domElement) {\n        console.warn('camera-controls is already connected.');\n        return;\n      }\n\n      domElement.setAttribute('data-camera-controls-version', VERSION);\n\n      this._addAllEventListeners(domElement);\n    }\n    /**\n     * Detach all internal event handlers to disable drag control.\n     */\n\n  }, {\n    key: \"disconnect\",\n    value: function disconnect() {\n      this.cancel();\n\n      this._removeAllEventListeners();\n\n      if (this._domElement) {\n        this._domElement.removeAttribute('data-camera-controls-version');\n\n        this._domElement = undefined;\n      }\n    }\n    /**\n     * Dispose the cameraControls instance itself, remove all eventListeners.\n     * @category Methods\n     */\n\n  }, {\n    key: \"dispose\",\n    value: function dispose() {\n      // remove all user event listeners\n      this.removeAllEventListeners(); // remove all internal event listeners\n\n      this.disconnect();\n    }\n  }, {\n    key: \"_findPointerById\",\n    value: function _findPointerById(pointerId) {\n      return this._activePointers.find(function (activePointer) {\n        return activePointer.pointerId === pointerId;\n      });\n    }\n  }, {\n    key: \"_findPointerByMouseButton\",\n    value: function _findPointerByMouseButton(mouseButton) {\n      return this._activePointers.find(function (activePointer) {\n        return activePointer.mouseButton === mouseButton;\n      });\n    }\n  }, {\n    key: \"_disposePointer\",\n    value: function _disposePointer(pointer) {\n      this._activePointers.splice(this._activePointers.indexOf(pointer), 1);\n    }\n  }, {\n    key: \"_encloseToBoundary\",\n    value: function _encloseToBoundary(position, offset, friction) {\n      var offsetLength2 = offset.lengthSq();\n\n      if (offsetLength2 === 0.0) {\n        // sanity check\n        return position;\n      } // See: https://twitter.com/FMS_Cat/status/1106508958640988161\n\n\n      var newTarget = _v3B.copy(offset).add(position); // target\n\n\n      var clampedTarget = this._boundary.clampPoint(newTarget, _v3C); // clamped target\n\n\n      var deltaClampedTarget = clampedTarget.sub(newTarget); // newTarget -> clampedTarget\n\n      var deltaClampedTargetLength2 = deltaClampedTarget.lengthSq(); // squared length of deltaClampedTarget\n\n      if (deltaClampedTargetLength2 === 0.0) {\n        // when the position doesn't have to be clamped\n        return position.add(offset);\n      } else if (deltaClampedTargetLength2 === offsetLength2) {\n        // when the position is completely stuck\n        return position;\n      } else if (friction === 0.0) {\n        return position.add(offset).add(deltaClampedTarget);\n      } else {\n        var offsetFactor = 1.0 + friction * deltaClampedTargetLength2 / offset.dot(deltaClampedTarget);\n        return position.add(_v3B.copy(offset).multiplyScalar(offsetFactor)).add(deltaClampedTarget.multiplyScalar(1.0 - friction));\n      }\n    }\n  }, {\n    key: \"_updateNearPlaneCorners\",\n    value: function _updateNearPlaneCorners() {\n      if (isPerspectiveCamera(this._camera)) {\n        var camera = this._camera;\n        var near = camera.near;\n        var fov = camera.getEffectiveFOV() * DEG2RAD;\n        var heightHalf = Math.tan(fov * 0.5) * near; // near plain half height\n\n        var widthHalf = heightHalf * camera.aspect; // near plain half width\n\n        this._nearPlaneCorners[0].set(-widthHalf, -heightHalf, 0);\n\n        this._nearPlaneCorners[1].set(widthHalf, -heightHalf, 0);\n\n        this._nearPlaneCorners[2].set(widthHalf, heightHalf, 0);\n\n        this._nearPlaneCorners[3].set(-widthHalf, heightHalf, 0);\n      } else if (isOrthographicCamera(this._camera)) {\n        var _camera3 = this._camera;\n        var zoomInv = 1 / _camera3.zoom;\n        var left = _camera3.left * zoomInv;\n        var right = _camera3.right * zoomInv;\n        var top = _camera3.top * zoomInv;\n        var bottom = _camera3.bottom * zoomInv;\n\n        this._nearPlaneCorners[0].set(left, top, 0);\n\n        this._nearPlaneCorners[1].set(right, top, 0);\n\n        this._nearPlaneCorners[2].set(right, bottom, 0);\n\n        this._nearPlaneCorners[3].set(left, bottom, 0);\n      }\n    } // lateUpdate\n\n  }, {\n    key: \"_collisionTest\",\n    value: function _collisionTest() {\n      var distance = Infinity;\n      var hasCollider = this.colliderMeshes.length >= 1;\n      if (!hasCollider) return distance;\n      if (notSupportedInOrthographicCamera(this._camera, '_collisionTest')) return distance; // divide by distance to normalize, lighter than `Vector3.prototype.normalize()`\n\n      var direction = _v3A.setFromSpherical(this._spherical).divideScalar(this._spherical.radius);\n\n      _rotationMatrix.lookAt(_ORIGIN, direction, this._camera.up);\n\n      for (var i = 0; i < 4; i++) {\n        var nearPlaneCorner = _v3B.copy(this._nearPlaneCorners[i]);\n\n        nearPlaneCorner.applyMatrix4(_rotationMatrix);\n\n        var origin = _v3C.addVectors(this._target, nearPlaneCorner);\n\n        _raycaster.set(origin, direction);\n\n        _raycaster.far = this._spherical.radius + 1;\n\n        var intersects = _raycaster.intersectObjects(this.colliderMeshes);\n\n        if (intersects.length !== 0 && intersects[0].distance < distance) {\n          distance = intersects[0].distance;\n        }\n      }\n\n      return distance;\n    }\n    /**\n     * Get its client rect and package into given `DOMRect` .\n     */\n\n  }, {\n    key: \"_getClientRect\",\n    value: function _getClientRect(target) {\n      if (!this._domElement) return;\n\n      var rect = this._domElement.getBoundingClientRect();\n\n      target.x = rect.left;\n      target.y = rect.top;\n\n      if (this._viewport) {\n        target.x += this._viewport.x;\n        target.y += rect.height - this._viewport.w - this._viewport.y;\n        target.width = this._viewport.z;\n        target.height = this._viewport.w;\n      } else {\n        target.width = rect.width;\n        target.height = rect.height;\n      }\n\n      return target;\n    }\n  }, {\n    key: \"_createOnRestPromise\",\n    value: function _createOnRestPromise(resolveImmediately) {\n      var _this2 = this;\n\n      if (resolveImmediately) return Promise.resolve();\n      this._hasRested = false;\n      this.dispatchEvent({\n        type: 'transitionstart'\n      });\n      return new Promise(function (resolve) {\n        var onResolve = function onResolve() {\n          _this2.removeEventListener('rest', onResolve);\n\n          resolve();\n        };\n\n        _this2.addEventListener('rest', onResolve);\n      });\n    } // eslint-disable-next-line @typescript-eslint/no-unused-vars\n\n  }, {\n    key: \"_addAllEventListeners\",\n    value: function _addAllEventListeners(_domElement) {}\n  }, {\n    key: \"_removeAllEventListeners\",\n    value: function _removeAllEventListeners() {}\n    /**\n     * backward compatible\n     * @deprecated use smoothTime (in seconds) instead\n     * @category Properties\n     */\n\n  }, {\n    key: \"dampingFactor\",\n    get: function get() {\n      console.warn('.dampingFactor has been deprecated. use smoothTime (in seconds) instead.');\n      return 0;\n    }\n    /**\n     * backward compatible\n     * @deprecated use smoothTime (in seconds) instead\n     * @category Properties\n     */\n    ,\n    set: function set(_) {\n      console.warn('.dampingFactor has been deprecated. use smoothTime (in seconds) instead.');\n    }\n    /**\n     * backward compatible\n     * @deprecated use draggingSmoothTime (in seconds) instead\n     * @category Properties\n     */\n\n  }, {\n    key: \"draggingDampingFactor\",\n    get: function get() {\n      console.warn('.draggingDampingFactor has been deprecated. use draggingSmoothTime (in seconds) instead.');\n      return 0;\n    }\n    /**\n     * backward compatible\n     * @deprecated use draggingSmoothTime (in seconds) instead\n     * @category Properties\n     */\n    ,\n    set: function set(_) {\n      console.warn('.draggingDampingFactor has been deprecated. use draggingSmoothTime (in seconds) instead.');\n    }\n  }], [{\n    key: \"install\",\n    value:\n    /**\n     * Injects THREE as the dependency. You can then proceed to use CameraControls.\n     *\n     * e.g\n     * ```javascript\n     * CameraControls.install( { THREE: THREE } );\n     * ```\n     *\n     * Note: If you do not wish to use enter three.js to reduce file size(tree-shaking for example), make a subset to install.\n     *\n     * ```js\n     * import {\n     * \tVector2,\n     * \tVector3,\n     * \tVector4,\n     * \tQuaternion,\n     * \tMatrix4,\n     * \tSpherical,\n     * \tBox3,\n     * \tSphere,\n     * \tRaycaster,\n     * \tMathUtils,\n     * } from 'three';\n     *\n     * const subsetOfTHREE = {\n     * \tVector2   : Vector2,\n     * \tVector3   : Vector3,\n     * \tVector4   : Vector4,\n     * \tQuaternion: Quaternion,\n     * \tMatrix4   : Matrix4,\n     * \tSpherical : Spherical,\n     * \tBox3      : Box3,\n     * \tSphere    : Sphere,\n     * \tRaycaster : Raycaster,\n     * };\n      * CameraControls.install( { THREE: subsetOfTHREE } );\n     * ```\n     * @category Statics\n     */\n    function install(libs) {\n      THREE = libs.THREE;\n      _ORIGIN = Object.freeze(new THREE.Vector3(0, 0, 0));\n      _AXIS_Y = Object.freeze(new THREE.Vector3(0, 1, 0));\n      _AXIS_Z = Object.freeze(new THREE.Vector3(0, 0, 1));\n      _v2 = new THREE.Vector2();\n      _v3A = new THREE.Vector3();\n      _v3B = new THREE.Vector3();\n      _v3C = new THREE.Vector3();\n      _xColumn = new THREE.Vector3();\n      _yColumn = new THREE.Vector3();\n      _zColumn = new THREE.Vector3();\n      _deltaTarget = new THREE.Vector3();\n      _deltaOffset = new THREE.Vector3();\n      _sphericalA = new THREE.Spherical();\n      _sphericalB = new THREE.Spherical();\n      _box3A = new THREE.Box3();\n      _box3B = new THREE.Box3();\n      _sphere = new THREE.Sphere();\n      _quaternionA = new THREE.Quaternion();\n      _quaternionB = new THREE.Quaternion();\n      _rotationMatrix = new THREE.Matrix4();\n      _raycaster = new THREE.Raycaster();\n    }\n    /**\n     * list all ACTIONs\n     * @category Statics\n     */\n\n  }, {\n    key: \"ACTION\",\n    get: function get() {\n      return ACTION;\n    }\n  }, {\n    key: \"createBoundingSphere\",\n    value: function createBoundingSphere(object3d) {\n      var out = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : new THREE.Sphere();\n      var boundingSphere = out;\n      var center = boundingSphere.center;\n\n      _box3A.makeEmpty(); // find the center\n\n\n      object3d.traverseVisible(function (object) {\n        if (!object.isMesh) return;\n\n        _box3A.expandByObject(object);\n      });\n\n      _box3A.getCenter(center); // find the radius\n\n\n      var maxRadiusSq = 0;\n      object3d.traverseVisible(function (object) {\n        if (!object.isMesh) return;\n        var mesh = object;\n        var geometry = mesh.geometry.clone();\n        geometry.applyMatrix4(mesh.matrixWorld);\n        var bufferGeometry = geometry;\n        var position = bufferGeometry.attributes.position;\n\n        for (var i = 0, l = position.count; i < l; i++) {\n          _v3A.fromBufferAttribute(position, i);\n\n          maxRadiusSq = Math.max(maxRadiusSq, center.distanceToSquared(_v3A));\n        }\n      });\n      boundingSphere.radius = Math.sqrt(maxRadiusSq);\n      return boundingSphere;\n    }\n  }]);\n\n  return CameraControls;\n}(EventDispatcher);\n\nexport { CameraControls as default };","map":{"version":3,"names":["MOUSE_BUTTON","LEFT","RIGHT","MIDDLE","ACTION","Object","freeze","NONE","ROTATE","TRUCK","OFFSET","DOLLY","ZOOM","TOUCH_ROTATE","TOUCH_TRUCK","TOUCH_OFFSET","TOUCH_DOLLY","TOUCH_ZOOM","TOUCH_DOLLY_TRUCK","TOUCH_DOLLY_OFFSET","TOUCH_DOLLY_ROTATE","TOUCH_ZOOM_TRUCK","TOUCH_ZOOM_OFFSET","TOUCH_ZOOM_ROTATE","isPerspectiveCamera","camera","isOrthographicCamera","PI_2","Math","PI","PI_HALF","EPSILON","DEG2RAD","clamp","value","min","max","approxZero","number","error","abs","approxEquals","a","b","roundToStep","step","round","infinityToMaxNumber","isFinite","Number","MAX_VALUE","maxNumberToInfinity","Infinity","smoothDamp","current","target","currentVelocityRef","smoothTime","maxSpeed","deltaTime","omega","x","exp","change","originalTo","maxChange","temp","output","smoothDampVec3","out","targetX","targetY","y","targetZ","z","changeX","changeY","changeZ","originalToX","originalToY","originalToZ","maxChangeSq","magnitudeSq","magnitude","sqrt","tempX","tempY","tempZ","origMinusCurrentX","origMinusCurrentY","origMinusCurrentZ","outMinusOrigX","outMinusOrigY","outMinusOrigZ","extractClientCoordFromEvent","pointers","set","forEach","pointer","clientX","clientY","length","notSupportedInOrthographicCamera","message","console","warn","EventDispatcher","_listeners","type","listener","listeners","undefined","indexOf","push","listenerArray","index","splice","Array","isArray","event","array","slice","i","l","call","VERSION","TOUCH_DOLLY_FACTOR","isBrowser","window","isMac","test","navigator","platform","isPointerEventsNotSupported","THREE","_ORIGIN","_AXIS_Y","_AXIS_Z","_v2","_v3A","_v3B","_v3C","_xColumn","_yColumn","_zColumn","_deltaTarget","_deltaOffset","_sphericalA","_sphericalB","_box3A","_box3B","_sphere","_quaternionA","_quaternionB","_rotationMatrix","_raycaster","CameraControls","domElement","minPolarAngle","maxPolarAngle","minAzimuthAngle","maxAzimuthAngle","minDistance","maxDistance","infinityDolly","minZoom","maxZoom","draggingSmoothTime","azimuthRotateSpeed","polarRotateSpeed","dollySpeed","dollyDragInverted","truckSpeed","dollyToCursor","dragToOffset","verticalDragToForward","boundaryFriction","restThreshold","colliderMeshes","cancel","_enabled","_state","_viewport","_dollyControlAmount","_hasRested","_boundaryEnclosesCamera","_needsUpdate","_updatedLastTime","_elementRect","DOMRect","_isDragging","_activePointers","_lockedPointer","_isUserControllingRotate","_isUserControllingDolly","_isUserControllingTruck","_isUserControllingOffset","_isUserControllingZoom","_thetaVelocity","_phiVelocity","_radiusVelocity","_targetVelocity","Vector3","_focalOffsetVelocity","_zoomVelocity","_truckInternal","deltaX","deltaY","truckX","pedestalY","_camera","offset","copy","position","sub","_target","fov","getEffectiveFOV","targetDistance","tan","height","right","left","zoom","width","top","bottom","setFocalOffset","_focalOffsetEnd","truck","forward","_rotateInternal","theta","phi","rotate","_dollyInternal","delta","dollyScale","pow","distance","_sphericalEnd","radius","prevRadius","signedPrevRadius","dollyTo","getWorldDirection","_targetEnd","add","normalize","multiplyScalar","_dollyControlCoord","_zoomInternal","zoomScale","prevZoom","_zoomEnd","zoomTo","_zoom","_yAxisUpSpace","Quaternion","setFromUnitVectors","up","_yAxisUpSpaceInverse","clone","invert","_focalOffset","_spherical","Spherical","setFromVector3","applyQuaternion","_nearPlaneCorners","_updateNearPlaneCorners","_boundary","Box3","_cameraUp0","_target0","_position0","_zoom0","_focalOffset0","Vector2","mouseButtons","middle","wheel","touches","one","two","three","dragStartPosition","lastDragPosition","dollyStart","onPointerDown","_domElement","mouseButton","pointerType","buttons","zombiePointer","_findPointerByMouseButton","_disposePointer","pointerId","ownerDocument","removeEventListener","onPointerMove","passive","onPointerUp","addEventListener","startDragging","onMouseDown","onMouseMove","onMouseUp","cancelable","preventDefault","_findPointerById","movementX","movementY","dragging","endDragging","lastScrollTimeStamp","onMouseWheel","now","performance","_getClientRect","deltaYFactor","deltaMode","dispatchEvent","onContextMenu","PointerEvent","MouseEvent","isMultiTouch","dx","dy","isPointerLockActive","document","pointerLockElement","lockedPointer","dollyX","dollyY","dollyDirection","dollyDelta","lockPointer","requestPointerLock","onPointerLockChange","onPointerLockError","unlockPointer","exitPointerLock","_addAllEventListeners","style","touchAction","userSelect","webkitUserSelect","_removeAllEventListeners","connect","update","updateCameraUp","updateProjectionMatrix","enabled","azimuthAngle","polarAngle","boundaryEnclosesCamera","enableTransition","rotateTo","makeSafe","resolveImmediately","_createOnRestPromise","lastRadius","newRadius","hasCollider","maxDistanceByCollisionTest","_collisionTest","isCollided","isDollyIn","Promise","resolve","zoomStep","updateMatrix","setFromMatrixColumn","matrix","to","moveTo","crossVectors","_encloseToBoundary","point","direction","setPosition","box3OrObject","cover","paddingLeft","paddingRight","paddingBottom","paddingTop","promises","aabb","isBox3","setFromObject","isEmpty","normal","setFromSpherical","rotation","viewFromPolar","multiply","setFromAxisAngle","bb","makeEmpty","expandByPoint","setX","setY","setZ","premultiply","bbSize","getSize","center","getCenter","getDistanceToFitBox","all","sphereOrMesh","isSphere","Sphere","boundingSphere","createBoundingSphere","distanceToFit","getDistanceToFitSphere","diameter","positionX","positionY","positionZ","normalizeRotations","positionAX","positionAY","positionAZ","targetAX","targetAY","targetAZ","positionBX","positionBY","positionBZ","targetBX","targetBY","targetBZ","t","targetA","positionA","targetB","positionB","lerp","deltaTheta","deltaPhi","deltaRadius","setLookAt","pos","getPosition","promise","updateMatrixWorld","matrixWorldInverse","distanceTo","cameraToPoint","box3","clampPoint","viewportOrX","Vector4","depth","boundingRectAspect","aspect","heightToFit","vFOV","hFOV","atan","sin","_out","isVector3","getTarget","cameraDirection","subVectors","side","deltaTarget","deltaOffset","deltaZoom","negate","planeX","cross","lengthSq","planeY","worldToScreen","lerpRatio","cursor","worldCursorPosition","near","far","unproject","quaternion","dot","prevPlaneConstant","newPlaneConstant","pullBack","lookAt","affectOffset","updated","JSON","stringify","toArray","focalOffset","target0","position0","zoom0","focalOffset0","json","obj","parse","fromArray","setAttribute","removeAttribute","removeAllEventListeners","disconnect","find","activePointer","friction","offsetLength2","newTarget","clampedTarget","deltaClampedTarget","deltaClampedTargetLength2","offsetFactor","heightHalf","widthHalf","zoomInv","divideScalar","nearPlaneCorner","applyMatrix4","origin","addVectors","intersects","intersectObjects","rect","getBoundingClientRect","w","onResolve","_","libs","Matrix4","Raycaster","object3d","traverseVisible","object","isMesh","expandByObject","maxRadiusSq","mesh","geometry","matrixWorld","bufferGeometry","attributes","count","fromBufferAttribute","distanceToSquared","default"],"sources":["/Users/crushedsummers/Documents/GitHub/raphaeleg.github.io/node_modules/camera-controls/dist/camera-controls.module.js"],"sourcesContent":["/*!\n * camera-controls\n * https://github.com/yomotsu/camera-controls\n * (c) 2017 @yomotsu\n * Released under the MIT License.\n */\n// see https://developer.mozilla.org/en-US/docs/Web/API/MouseEvent/buttons#value\nconst MOUSE_BUTTON = {\n    LEFT: 1,\n    RIGHT: 2,\n    MIDDLE: 4,\n};\nconst ACTION = Object.freeze({\n    NONE: 0,\n    ROTATE: 1,\n    TRUCK: 2,\n    OFFSET: 4,\n    DOLLY: 8,\n    ZOOM: 16,\n    TOUCH_ROTATE: 32,\n    TOUCH_TRUCK: 64,\n    TOUCH_OFFSET: 128,\n    TOUCH_DOLLY: 256,\n    TOUCH_ZOOM: 512,\n    TOUCH_DOLLY_TRUCK: 1024,\n    TOUCH_DOLLY_OFFSET: 2048,\n    TOUCH_DOLLY_ROTATE: 4096,\n    TOUCH_ZOOM_TRUCK: 8192,\n    TOUCH_ZOOM_OFFSET: 16384,\n    TOUCH_ZOOM_ROTATE: 32768,\n});\nfunction isPerspectiveCamera(camera) {\n    return camera.isPerspectiveCamera;\n}\nfunction isOrthographicCamera(camera) {\n    return camera.isOrthographicCamera;\n}\n\nconst PI_2 = Math.PI * 2;\nconst PI_HALF = Math.PI / 2;\n\nconst EPSILON = 1e-5;\nconst DEG2RAD = Math.PI / 180;\nfunction clamp(value, min, max) {\n    return Math.max(min, Math.min(max, value));\n}\nfunction approxZero(number, error = EPSILON) {\n    return Math.abs(number) < error;\n}\nfunction approxEquals(a, b, error = EPSILON) {\n    return approxZero(a - b, error);\n}\nfunction roundToStep(value, step) {\n    return Math.round(value / step) * step;\n}\nfunction infinityToMaxNumber(value) {\n    if (isFinite(value))\n        return value;\n    if (value < 0)\n        return -Number.MAX_VALUE;\n    return Number.MAX_VALUE;\n}\nfunction maxNumberToInfinity(value) {\n    if (Math.abs(value) < Number.MAX_VALUE)\n        return value;\n    return value * Infinity;\n}\n// https://docs.unity3d.com/ScriptReference/Mathf.SmoothDamp.html\n// https://github.com/Unity-Technologies/UnityCsReference/blob/a2bdfe9b3c4cd4476f44bf52f848063bfaf7b6b9/Runtime/Export/Math/Mathf.cs#L308\nfunction smoothDamp(current, target, currentVelocityRef, smoothTime, maxSpeed = Infinity, deltaTime) {\n    // Based on Game Programming Gems 4 Chapter 1.10\n    smoothTime = Math.max(0.0001, smoothTime);\n    const omega = 2 / smoothTime;\n    const x = omega * deltaTime;\n    const exp = 1 / (1 + x + 0.48 * x * x + 0.235 * x * x * x);\n    let change = current - target;\n    const originalTo = target;\n    // Clamp maximum speed\n    const maxChange = maxSpeed * smoothTime;\n    change = clamp(change, -maxChange, maxChange);\n    target = current - change;\n    const temp = (currentVelocityRef.value + omega * change) * deltaTime;\n    currentVelocityRef.value = (currentVelocityRef.value - omega * temp) * exp;\n    let output = target + (change + temp) * exp;\n    // Prevent overshooting\n    if (originalTo - current > 0.0 === output > originalTo) {\n        output = originalTo;\n        currentVelocityRef.value = (output - originalTo) / deltaTime;\n    }\n    return output;\n}\n// https://docs.unity3d.com/ScriptReference/Vector3.SmoothDamp.html\n// https://github.com/Unity-Technologies/UnityCsReference/blob/a2bdfe9b3c4cd4476f44bf52f848063bfaf7b6b9/Runtime/Export/Math/Vector3.cs#L97\nfunction smoothDampVec3(current, target, currentVelocityRef, smoothTime, maxSpeed = Infinity, deltaTime, out) {\n    // Based on Game Programming Gems 4 Chapter 1.10\n    smoothTime = Math.max(0.0001, smoothTime);\n    const omega = 2 / smoothTime;\n    const x = omega * deltaTime;\n    const exp = 1 / (1 + x + 0.48 * x * x + 0.235 * x * x * x);\n    let targetX = target.x;\n    let targetY = target.y;\n    let targetZ = target.z;\n    let changeX = current.x - targetX;\n    let changeY = current.y - targetY;\n    let changeZ = current.z - targetZ;\n    const originalToX = targetX;\n    const originalToY = targetY;\n    const originalToZ = targetZ;\n    // Clamp maximum speed\n    const maxChange = maxSpeed * smoothTime;\n    const maxChangeSq = maxChange * maxChange;\n    const magnitudeSq = changeX * changeX + changeY * changeY + changeZ * changeZ;\n    if (magnitudeSq > maxChangeSq) {\n        const magnitude = Math.sqrt(magnitudeSq);\n        changeX = changeX / magnitude * maxChange;\n        changeY = changeY / magnitude * maxChange;\n        changeZ = changeZ / magnitude * maxChange;\n    }\n    targetX = current.x - changeX;\n    targetY = current.y - changeY;\n    targetZ = current.z - changeZ;\n    const tempX = (currentVelocityRef.x + omega * changeX) * deltaTime;\n    const tempY = (currentVelocityRef.y + omega * changeY) * deltaTime;\n    const tempZ = (currentVelocityRef.z + omega * changeZ) * deltaTime;\n    currentVelocityRef.x = (currentVelocityRef.x - omega * tempX) * exp;\n    currentVelocityRef.y = (currentVelocityRef.y - omega * tempY) * exp;\n    currentVelocityRef.z = (currentVelocityRef.z - omega * tempZ) * exp;\n    out.x = targetX + (changeX + tempX) * exp;\n    out.y = targetY + (changeY + tempY) * exp;\n    out.z = targetZ + (changeZ + tempZ) * exp;\n    // Prevent overshooting\n    const origMinusCurrentX = originalToX - current.x;\n    const origMinusCurrentY = originalToY - current.y;\n    const origMinusCurrentZ = originalToZ - current.z;\n    const outMinusOrigX = out.x - originalToX;\n    const outMinusOrigY = out.y - originalToY;\n    const outMinusOrigZ = out.z - originalToZ;\n    if (origMinusCurrentX * outMinusOrigX + origMinusCurrentY * outMinusOrigY + origMinusCurrentZ * outMinusOrigZ > 0) {\n        out.x = originalToX;\n        out.y = originalToY;\n        out.z = originalToZ;\n        currentVelocityRef.x = (out.x - originalToX) / deltaTime;\n        currentVelocityRef.y = (out.y - originalToY) / deltaTime;\n        currentVelocityRef.z = (out.z - originalToZ) / deltaTime;\n    }\n    return out;\n}\n\nfunction extractClientCoordFromEvent(pointers, out) {\n    out.set(0, 0);\n    pointers.forEach((pointer) => {\n        out.x += pointer.clientX;\n        out.y += pointer.clientY;\n    });\n    out.x /= pointers.length;\n    out.y /= pointers.length;\n}\n\nfunction notSupportedInOrthographicCamera(camera, message) {\n    if (isOrthographicCamera(camera)) {\n        console.warn(`${message} is not supported in OrthographicCamera`);\n        return true;\n    }\n    return false;\n}\n\nclass EventDispatcher {\n    constructor() {\n        this._listeners = {};\n    }\n    /**\n     * Adds the specified event listener.\n     * @param type event name\n     * @param listener handler function\n     * @category Methods\n     */\n    addEventListener(type, listener) {\n        const listeners = this._listeners;\n        if (listeners[type] === undefined)\n            listeners[type] = [];\n        if (listeners[type].indexOf(listener) === -1)\n            listeners[type].push(listener);\n    }\n    /**\n     * Presence of the specified event listener.\n     * @param type event name\n     * @param listener handler function\n     * @category Methods\n     */\n    hasEventListener(type, listener) {\n        const listeners = this._listeners;\n        return listeners[type] !== undefined && listeners[type].indexOf(listener) !== -1;\n    }\n    /**\n     * Removes the specified event listener\n     * @param type event name\n     * @param listener handler function\n     * @category Methods\n     */\n    removeEventListener(type, listener) {\n        const listeners = this._listeners;\n        const listenerArray = listeners[type];\n        if (listenerArray !== undefined) {\n            const index = listenerArray.indexOf(listener);\n            if (index !== -1)\n                listenerArray.splice(index, 1);\n        }\n    }\n    /**\n     * Removes all event listeners\n     * @param type event name\n     * @category Methods\n     */\n    removeAllEventListeners(type) {\n        if (!type) {\n            this._listeners = {};\n            return;\n        }\n        if (Array.isArray(this._listeners[type]))\n            this._listeners[type].length = 0;\n    }\n    /**\n     * Fire an event type.\n     * @param event DispatcherEvent\n     * @category Methods\n     */\n    dispatchEvent(event) {\n        const listeners = this._listeners;\n        const listenerArray = listeners[event.type];\n        if (listenerArray !== undefined) {\n            event.target = this;\n            const array = listenerArray.slice(0);\n            for (let i = 0, l = array.length; i < l; i++) {\n                array[i].call(this, event);\n            }\n        }\n    }\n}\n\nconst VERSION = '2.3.5'; // will be replaced with `version` in package.json during the build process.\nconst TOUCH_DOLLY_FACTOR = 1 / 8;\nconst isBrowser = typeof window !== 'undefined';\nconst isMac = isBrowser && /Mac/.test(navigator.platform);\nconst isPointerEventsNotSupported = !(isBrowser && 'PointerEvent' in window); // macOS Safari 12 does not support PointerEvents API\nlet THREE;\nlet _ORIGIN;\nlet _AXIS_Y;\nlet _AXIS_Z;\nlet _v2;\nlet _v3A;\nlet _v3B;\nlet _v3C;\nlet _xColumn;\nlet _yColumn;\nlet _zColumn;\nlet _deltaTarget;\nlet _deltaOffset;\nlet _sphericalA;\nlet _sphericalB;\nlet _box3A;\nlet _box3B;\nlet _sphere;\nlet _quaternionA;\nlet _quaternionB;\nlet _rotationMatrix;\nlet _raycaster;\nclass CameraControls extends EventDispatcher {\n    /**\n     * Injects THREE as the dependency. You can then proceed to use CameraControls.\n     *\n     * e.g\n     * ```javascript\n     * CameraControls.install( { THREE: THREE } );\n     * ```\n     *\n     * Note: If you do not wish to use enter three.js to reduce file size(tree-shaking for example), make a subset to install.\n     *\n     * ```js\n     * import {\n     * \tVector2,\n     * \tVector3,\n     * \tVector4,\n     * \tQuaternion,\n     * \tMatrix4,\n     * \tSpherical,\n     * \tBox3,\n     * \tSphere,\n     * \tRaycaster,\n     * \tMathUtils,\n     * } from 'three';\n     *\n     * const subsetOfTHREE = {\n     * \tVector2   : Vector2,\n     * \tVector3   : Vector3,\n     * \tVector4   : Vector4,\n     * \tQuaternion: Quaternion,\n     * \tMatrix4   : Matrix4,\n     * \tSpherical : Spherical,\n     * \tBox3      : Box3,\n     * \tSphere    : Sphere,\n     * \tRaycaster : Raycaster,\n     * };\n\n     * CameraControls.install( { THREE: subsetOfTHREE } );\n     * ```\n     * @category Statics\n     */\n    static install(libs) {\n        THREE = libs.THREE;\n        _ORIGIN = Object.freeze(new THREE.Vector3(0, 0, 0));\n        _AXIS_Y = Object.freeze(new THREE.Vector3(0, 1, 0));\n        _AXIS_Z = Object.freeze(new THREE.Vector3(0, 0, 1));\n        _v2 = new THREE.Vector2();\n        _v3A = new THREE.Vector3();\n        _v3B = new THREE.Vector3();\n        _v3C = new THREE.Vector3();\n        _xColumn = new THREE.Vector3();\n        _yColumn = new THREE.Vector3();\n        _zColumn = new THREE.Vector3();\n        _deltaTarget = new THREE.Vector3();\n        _deltaOffset = new THREE.Vector3();\n        _sphericalA = new THREE.Spherical();\n        _sphericalB = new THREE.Spherical();\n        _box3A = new THREE.Box3();\n        _box3B = new THREE.Box3();\n        _sphere = new THREE.Sphere();\n        _quaternionA = new THREE.Quaternion();\n        _quaternionB = new THREE.Quaternion();\n        _rotationMatrix = new THREE.Matrix4();\n        _raycaster = new THREE.Raycaster();\n    }\n    /**\n     * list all ACTIONs\n     * @category Statics\n     */\n    static get ACTION() {\n        return ACTION;\n    }\n    /**\n     * Creates a `CameraControls` instance.\n     *\n     * Note:\n     * You **must install** three.js before using camera-controls. see [#install](#install)\n     * Not doing so will lead to runtime errors (`undefined` references to THREE).\n     *\n     * e.g.\n     * ```\n     * CameraControls.install( { THREE } );\n     * const cameraControls = new CameraControls( camera, domElement );\n     * ```\n     *\n     * @param camera A `THREE.PerspectiveCamera` or `THREE.OrthographicCamera` to be controlled.\n     * @param domElement A `HTMLElement` for the draggable area, usually `renderer.domElement`.\n     * @category Constructor\n     */\n    constructor(camera, domElement) {\n        super();\n        /**\n         * Minimum vertical angle in radians.\n         * The angle has to be between `0` and `.maxPolarAngle` inclusive.\n         * The default value is `0`.\n         *\n         * e.g.\n         * ```\n         * cameraControls.maxPolarAngle = 0;\n         * ```\n         * @category Properties\n         */\n        this.minPolarAngle = 0; // radians\n        /**\n         * Maximum vertical angle in radians.\n         * The angle has to be between `.maxPolarAngle` and `Math.PI` inclusive.\n         * The default value is `Math.PI`.\n         *\n         * e.g.\n         * ```\n         * cameraControls.maxPolarAngle = Math.PI;\n         * ```\n         * @category Properties\n         */\n        this.maxPolarAngle = Math.PI; // radians\n        /**\n         * Minimum horizontal angle in radians.\n         * The angle has to be less than `.maxAzimuthAngle`.\n         * The default value is `- Infinity`.\n         *\n         * e.g.\n         * ```\n         * cameraControls.minAzimuthAngle = - Infinity;\n         * ```\n         * @category Properties\n         */\n        this.minAzimuthAngle = -Infinity; // radians\n        /**\n         * Maximum horizontal angle in radians.\n         * The angle has to be greater than `.minAzimuthAngle`.\n         * The default value is `Infinity`.\n         *\n         * e.g.\n         * ```\n         * cameraControls.maxAzimuthAngle = Infinity;\n         * ```\n         * @category Properties\n         */\n        this.maxAzimuthAngle = Infinity; // radians\n        // How far you can dolly in and out ( PerspectiveCamera only )\n        /**\n         * Minimum distance for dolly. The value must be higher than `0`.\n         * PerspectiveCamera only.\n         * @category Properties\n         */\n        this.minDistance = 0;\n        /**\n         * Maximum distance for dolly. The value must be higher than `minDistance`.\n         * PerspectiveCamera only.\n         * @category Properties\n         */\n        this.maxDistance = Infinity;\n        /**\n         * `true` to enable Infinity Dolly.\n         * When the Dolly distance is less than the `minDistance`, radius of the sphere will be set `minDistance` automatically.\n         * @category Properties\n         */\n        this.infinityDolly = false;\n        /**\n         * Minimum camera zoom.\n         * @category Properties\n         */\n        this.minZoom = 0.01;\n        /**\n         * Maximum camera zoom.\n         * @category Properties\n         */\n        this.maxZoom = Infinity;\n        /**\n         * Approximate time in seconds to reach the target. A smaller value will reach the target faster.\n         * @category Properties\n         */\n        this.smoothTime = 0.25;\n        /**\n         * the smoothTime while dragging\n         * @category Properties\n         */\n        this.draggingSmoothTime = 0.125;\n        /**\n         * Max transition speed in unit-per-seconds\n         * @category Properties\n         */\n        this.maxSpeed = Infinity;\n        /**\n         * Speed of azimuth (horizontal) rotation.\n         * @category Properties\n         */\n        this.azimuthRotateSpeed = 1.0;\n        /**\n         * Speed of polar (vertical) rotation.\n         * @category Properties\n         */\n        this.polarRotateSpeed = 1.0;\n        /**\n         * Speed of mouse-wheel dollying.\n         * @category Properties\n         */\n        this.dollySpeed = 1.0;\n        /**\n         * `true` to invert direction when dollying or zooming via drag\n         * @category Properties\n         */\n        this.dollyDragInverted = false;\n        /**\n         * Speed of drag for truck and pedestal.\n         * @category Properties\n         */\n        this.truckSpeed = 2.0;\n        /**\n         * `true` to enable Dolly-in to the mouse cursor coords.\n         * @category Properties\n         */\n        this.dollyToCursor = false;\n        /**\n         * @category Properties\n         */\n        this.dragToOffset = false;\n        /**\n         * The same as `.screenSpacePanning` in three.js's OrbitControls.\n         * @category Properties\n         */\n        this.verticalDragToForward = false;\n        /**\n         * Friction ratio of the boundary.\n         * @category Properties\n         */\n        this.boundaryFriction = 0.0;\n        /**\n         * Controls how soon the `rest` event fires as the camera slows.\n         * @category Properties\n         */\n        this.restThreshold = 0.01;\n        /**\n         * An array of Meshes to collide with camera.\n         * Be aware colliderMeshes may decrease performance. The collision test uses 4 raycasters from the camera since the near plane has 4 corners.\n         * @category Properties\n         */\n        this.colliderMeshes = [];\n        /**\n         * Force cancel user dragging.\n         * @category Methods\n         */\n        // cancel will be overwritten in the constructor.\n        this.cancel = () => { };\n        this._enabled = true;\n        this._state = ACTION.NONE;\n        this._viewport = null;\n        this._dollyControlAmount = 0;\n        this._hasRested = true;\n        this._boundaryEnclosesCamera = false;\n        this._needsUpdate = true;\n        this._updatedLastTime = false;\n        this._elementRect = new DOMRect();\n        this._isDragging = false;\n        this._activePointers = [];\n        this._lockedPointer = null;\n        // Use draggingSmoothTime over smoothTime while true.\n        // set automatically true on user-dragging start.\n        // set automatically false on programmable methods call.\n        this._isUserControllingRotate = false;\n        this._isUserControllingDolly = false;\n        this._isUserControllingTruck = false;\n        this._isUserControllingOffset = false;\n        this._isUserControllingZoom = false;\n        // velocities for smoothDamp\n        this._thetaVelocity = { value: 0 };\n        this._phiVelocity = { value: 0 };\n        this._radiusVelocity = { value: 0 };\n        this._targetVelocity = new THREE.Vector3();\n        this._focalOffsetVelocity = new THREE.Vector3();\n        this._zoomVelocity = { value: 0 };\n        this._truckInternal = (deltaX, deltaY, dragToOffset) => {\n            let truckX;\n            let pedestalY;\n            if (isPerspectiveCamera(this._camera)) {\n                const offset = _v3A.copy(this._camera.position).sub(this._target);\n                // half of the fov is center to top of screen\n                const fov = this._camera.getEffectiveFOV() * DEG2RAD;\n                const targetDistance = offset.length() * Math.tan(fov * 0.5);\n                truckX = (this.truckSpeed * deltaX * targetDistance / this._elementRect.height);\n                pedestalY = (this.truckSpeed * deltaY * targetDistance / this._elementRect.height);\n            }\n            else if (isOrthographicCamera(this._camera)) {\n                const camera = this._camera;\n                truckX = deltaX * (camera.right - camera.left) / camera.zoom / this._elementRect.width;\n                pedestalY = deltaY * (camera.top - camera.bottom) / camera.zoom / this._elementRect.height;\n            }\n            else {\n                return;\n            }\n            if (this.verticalDragToForward) {\n                dragToOffset ?\n                    this.setFocalOffset(this._focalOffsetEnd.x + truckX, this._focalOffsetEnd.y, this._focalOffsetEnd.z, true) :\n                    this.truck(truckX, 0, true);\n                this.forward(-pedestalY, true);\n            }\n            else {\n                dragToOffset ?\n                    this.setFocalOffset(this._focalOffsetEnd.x + truckX, this._focalOffsetEnd.y + pedestalY, this._focalOffsetEnd.z, true) :\n                    this.truck(truckX, pedestalY, true);\n            }\n        };\n        this._rotateInternal = (deltaX, deltaY) => {\n            const theta = PI_2 * this.azimuthRotateSpeed * deltaX / this._elementRect.height; // divide by *height* to refer the resolution\n            const phi = PI_2 * this.polarRotateSpeed * deltaY / this._elementRect.height;\n            this.rotate(theta, phi, true);\n        };\n        this._dollyInternal = (delta, x, y) => {\n            const dollyScale = Math.pow(0.95, -delta * this.dollySpeed);\n            const distance = this._sphericalEnd.radius * dollyScale;\n            const prevRadius = this._sphericalEnd.radius;\n            const signedPrevRadius = prevRadius * (delta >= 0 ? -1 : 1);\n            this.dollyTo(distance);\n            if (this.infinityDolly && (distance < this.minDistance || this.maxDistance === this.minDistance)) {\n                this._camera.getWorldDirection(_v3A);\n                this._targetEnd.add(_v3A.normalize().multiplyScalar(signedPrevRadius));\n                this._target.add(_v3A.normalize().multiplyScalar(signedPrevRadius));\n            }\n            if (this.dollyToCursor) {\n                this._dollyControlAmount += this._sphericalEnd.radius - prevRadius;\n                if (this.infinityDolly && (distance < this.minDistance || this.maxDistance === this.minDistance)) {\n                    this._dollyControlAmount -= signedPrevRadius;\n                }\n                this._dollyControlCoord.set(x, y);\n            }\n        };\n        this._zoomInternal = (delta, x, y) => {\n            const zoomScale = Math.pow(0.95, delta * this.dollySpeed);\n            const prevZoom = this._zoomEnd;\n            // for both PerspectiveCamera and OrthographicCamera\n            this.zoomTo(this._zoom * zoomScale);\n            if (this.dollyToCursor) {\n                this._dollyControlAmount += this._zoomEnd - prevZoom;\n                this._dollyControlCoord.set(x, y);\n            }\n        };\n        // Check if the user has installed THREE\n        if (typeof THREE === 'undefined') {\n            console.error('camera-controls: `THREE` is undefined. You must first run `CameraControls.install( { THREE: THREE } )`. Check the docs for further information.');\n        }\n        this._camera = camera;\n        this._yAxisUpSpace = new THREE.Quaternion().setFromUnitVectors(this._camera.up, _AXIS_Y);\n        this._yAxisUpSpaceInverse = this._yAxisUpSpace.clone().invert();\n        this._state = ACTION.NONE;\n        // the location\n        this._target = new THREE.Vector3();\n        this._targetEnd = this._target.clone();\n        this._focalOffset = new THREE.Vector3();\n        this._focalOffsetEnd = this._focalOffset.clone();\n        // rotation\n        this._spherical = new THREE.Spherical().setFromVector3(_v3A.copy(this._camera.position).applyQuaternion(this._yAxisUpSpace));\n        this._sphericalEnd = this._spherical.clone();\n        this._zoom = this._camera.zoom;\n        this._zoomEnd = this._zoom;\n        // collisionTest uses nearPlane.s\n        this._nearPlaneCorners = [\n            new THREE.Vector3(),\n            new THREE.Vector3(),\n            new THREE.Vector3(),\n            new THREE.Vector3(),\n        ];\n        this._updateNearPlaneCorners();\n        // Target cannot move outside of this box\n        this._boundary = new THREE.Box3(new THREE.Vector3(-Infinity, -Infinity, -Infinity), new THREE.Vector3(Infinity, Infinity, Infinity));\n        // reset\n        this._cameraUp0 = this._camera.up.clone();\n        this._target0 = this._target.clone();\n        this._position0 = this._camera.position.clone();\n        this._zoom0 = this._zoom;\n        this._focalOffset0 = this._focalOffset.clone();\n        this._dollyControlAmount = 0;\n        this._dollyControlCoord = new THREE.Vector2();\n        // configs\n        this.mouseButtons = {\n            left: ACTION.ROTATE,\n            middle: ACTION.DOLLY,\n            right: ACTION.TRUCK,\n            wheel: isPerspectiveCamera(this._camera) ? ACTION.DOLLY :\n                isOrthographicCamera(this._camera) ? ACTION.ZOOM :\n                    ACTION.NONE,\n        };\n        this.touches = {\n            one: ACTION.TOUCH_ROTATE,\n            two: isPerspectiveCamera(this._camera) ? ACTION.TOUCH_DOLLY_TRUCK :\n                isOrthographicCamera(this._camera) ? ACTION.TOUCH_ZOOM_TRUCK :\n                    ACTION.NONE,\n            three: ACTION.TOUCH_TRUCK,\n        };\n        const dragStartPosition = new THREE.Vector2();\n        const lastDragPosition = new THREE.Vector2();\n        const dollyStart = new THREE.Vector2();\n        const onPointerDown = (event) => {\n            if (!this._enabled || !this._domElement)\n                return;\n            // Don't call `event.preventDefault()` on the pointerdown event\n            // to keep receiving pointermove evens outside dragging iframe\n            // https://taye.me/blog/tips/2015/11/16/mouse-drag-outside-iframe/\n            const mouseButton = event.pointerType !== 'mouse' ? null :\n                (event.buttons & MOUSE_BUTTON.LEFT) === MOUSE_BUTTON.LEFT ? MOUSE_BUTTON.LEFT :\n                    (event.buttons & MOUSE_BUTTON.MIDDLE) === MOUSE_BUTTON.MIDDLE ? MOUSE_BUTTON.MIDDLE :\n                        (event.buttons & MOUSE_BUTTON.RIGHT) === MOUSE_BUTTON.RIGHT ? MOUSE_BUTTON.RIGHT :\n                            null;\n            if (mouseButton !== null) {\n                const zombiePointer = this._findPointerByMouseButton(mouseButton);\n                zombiePointer && this._disposePointer(zombiePointer);\n            }\n            if ((event.buttons & MOUSE_BUTTON.LEFT) === MOUSE_BUTTON.LEFT && this._lockedPointer)\n                return;\n            const pointer = {\n                pointerId: event.pointerId,\n                clientX: event.clientX,\n                clientY: event.clientY,\n                deltaX: 0,\n                deltaY: 0,\n                mouseButton,\n            };\n            this._activePointers.push(pointer);\n            // eslint-disable-next-line no-undef\n            this._domElement.ownerDocument.removeEventListener('pointermove', onPointerMove, { passive: false });\n            this._domElement.ownerDocument.removeEventListener('pointerup', onPointerUp);\n            this._domElement.ownerDocument.addEventListener('pointermove', onPointerMove, { passive: false });\n            this._domElement.ownerDocument.addEventListener('pointerup', onPointerUp);\n            this._isDragging = true;\n            startDragging(event);\n        };\n        const onMouseDown = (event) => {\n            if (!this._enabled || !this._domElement || this._lockedPointer)\n                return;\n            const mouseButton = (event.buttons & MOUSE_BUTTON.LEFT) === MOUSE_BUTTON.LEFT ? MOUSE_BUTTON.LEFT :\n                (event.buttons & MOUSE_BUTTON.MIDDLE) === MOUSE_BUTTON.MIDDLE ? MOUSE_BUTTON.MIDDLE :\n                    (event.buttons & MOUSE_BUTTON.RIGHT) === MOUSE_BUTTON.RIGHT ? MOUSE_BUTTON.RIGHT :\n                        null;\n            if (mouseButton !== null) {\n                const zombiePointer = this._findPointerByMouseButton(mouseButton);\n                zombiePointer && this._disposePointer(zombiePointer);\n            }\n            const pointer = {\n                pointerId: 1,\n                clientX: event.clientX,\n                clientY: event.clientY,\n                deltaX: 0,\n                deltaY: 0,\n                mouseButton: (event.buttons & MOUSE_BUTTON.LEFT) === MOUSE_BUTTON.LEFT ? MOUSE_BUTTON.LEFT :\n                    (event.buttons & MOUSE_BUTTON.MIDDLE) === MOUSE_BUTTON.LEFT ? MOUSE_BUTTON.MIDDLE :\n                        (event.buttons & MOUSE_BUTTON.RIGHT) === MOUSE_BUTTON.LEFT ? MOUSE_BUTTON.RIGHT :\n                            null,\n            };\n            this._activePointers.push(pointer);\n            // see https://github.com/microsoft/TypeScript/issues/32912#issuecomment-522142969\n            // eslint-disable-next-line no-undef\n            this._domElement.ownerDocument.removeEventListener('mousemove', onMouseMove);\n            this._domElement.ownerDocument.removeEventListener('mouseup', onMouseUp);\n            this._domElement.ownerDocument.addEventListener('mousemove', onMouseMove);\n            this._domElement.ownerDocument.addEventListener('mouseup', onMouseUp);\n            this._isDragging = true;\n            startDragging(event);\n        };\n        const onPointerMove = (event) => {\n            if (event.cancelable)\n                event.preventDefault();\n            const pointerId = event.pointerId;\n            const pointer = this._lockedPointer || this._findPointerById(pointerId);\n            if (!pointer)\n                return;\n            pointer.clientX = event.clientX;\n            pointer.clientY = event.clientY;\n            pointer.deltaX = event.movementX;\n            pointer.deltaY = event.movementY;\n            this._state = 0;\n            if (event.pointerType === 'touch') {\n                switch (this._activePointers.length) {\n                    case 1:\n                        this._state = this.touches.one;\n                        break;\n                    case 2:\n                        this._state = this.touches.two;\n                        break;\n                    case 3:\n                        this._state = this.touches.three;\n                        break;\n                }\n            }\n            else {\n                if ((!this._isDragging && this._lockedPointer) ||\n                    this._isDragging && (event.buttons & MOUSE_BUTTON.LEFT) === MOUSE_BUTTON.LEFT) {\n                    this._state = this._state | this.mouseButtons.left;\n                }\n                if (this._isDragging && (event.buttons & MOUSE_BUTTON.MIDDLE) === MOUSE_BUTTON.MIDDLE) {\n                    this._state = this._state | this.mouseButtons.middle;\n                }\n                if (this._isDragging && (event.buttons & MOUSE_BUTTON.RIGHT) === MOUSE_BUTTON.RIGHT) {\n                    this._state = this._state | this.mouseButtons.right;\n                }\n            }\n            dragging();\n        };\n        const onMouseMove = (event) => {\n            const pointer = this._lockedPointer || this._findPointerById(1);\n            if (!pointer)\n                return;\n            pointer.clientX = event.clientX;\n            pointer.clientY = event.clientY;\n            pointer.deltaX = event.movementX;\n            pointer.deltaY = event.movementY;\n            this._state = 0;\n            if (this._lockedPointer ||\n                (event.buttons & MOUSE_BUTTON.LEFT) === MOUSE_BUTTON.LEFT) {\n                this._state = this._state | this.mouseButtons.left;\n            }\n            if ((event.buttons & MOUSE_BUTTON.MIDDLE) === MOUSE_BUTTON.MIDDLE) {\n                this._state = this._state | this.mouseButtons.middle;\n            }\n            if ((event.buttons & MOUSE_BUTTON.RIGHT) === MOUSE_BUTTON.RIGHT) {\n                this._state = this._state | this.mouseButtons.right;\n            }\n            dragging();\n        };\n        const onPointerUp = (event) => {\n            const pointer = this._findPointerById(event.pointerId);\n            if (pointer && pointer === this._lockedPointer)\n                return;\n            pointer && this._disposePointer(pointer);\n            if (event.pointerType === 'touch') {\n                switch (this._activePointers.length) {\n                    case 0:\n                        this._state = ACTION.NONE;\n                        break;\n                    case 1:\n                        this._state = this.touches.one;\n                        break;\n                    case 2:\n                        this._state = this.touches.two;\n                        break;\n                    case 3:\n                        this._state = this.touches.three;\n                        break;\n                }\n            }\n            else {\n                this._state = ACTION.NONE;\n            }\n            endDragging();\n        };\n        const onMouseUp = () => {\n            const pointer = this._findPointerById(1);\n            if (pointer && pointer === this._lockedPointer)\n                return;\n            pointer && this._disposePointer(pointer);\n            this._state = ACTION.NONE;\n            endDragging();\n        };\n        let lastScrollTimeStamp = -1;\n        const onMouseWheel = (event) => {\n            if (!this._enabled || this.mouseButtons.wheel === ACTION.NONE)\n                return;\n            event.preventDefault();\n            if (this.dollyToCursor ||\n                this.mouseButtons.wheel === ACTION.ROTATE ||\n                this.mouseButtons.wheel === ACTION.TRUCK) {\n                const now = performance.now();\n                // only need to fire this at scroll start.\n                if (lastScrollTimeStamp - now < 1000)\n                    this._getClientRect(this._elementRect);\n                lastScrollTimeStamp = now;\n            }\n            // Ref: https://github.com/cedricpinson/osgjs/blob/00e5a7e9d9206c06fdde0436e1d62ab7cb5ce853/sources/osgViewer/input/source/InputSourceMouse.js#L89-L103\n            const deltaYFactor = isMac ? -1 : -3;\n            const delta = (event.deltaMode === 1) ? event.deltaY / deltaYFactor : event.deltaY / (deltaYFactor * 10);\n            const x = this.dollyToCursor ? (event.clientX - this._elementRect.x) / this._elementRect.width * 2 - 1 : 0;\n            const y = this.dollyToCursor ? (event.clientY - this._elementRect.y) / this._elementRect.height * -2 + 1 : 0;\n            switch (this.mouseButtons.wheel) {\n                case ACTION.ROTATE: {\n                    this._rotateInternal(event.deltaX, event.deltaY);\n                    this._isUserControllingRotate = true;\n                    break;\n                }\n                case ACTION.TRUCK: {\n                    this._truckInternal(event.deltaX, event.deltaY, false);\n                    this._isUserControllingTruck = true;\n                    break;\n                }\n                case ACTION.OFFSET: {\n                    this._truckInternal(event.deltaX, event.deltaY, true);\n                    this._isUserControllingOffset = true;\n                    break;\n                }\n                case ACTION.DOLLY: {\n                    this._dollyInternal(-delta, x, y);\n                    this._isUserControllingDolly = true;\n                    break;\n                }\n                case ACTION.ZOOM: {\n                    this._zoomInternal(-delta, x, y);\n                    this._isUserControllingZoom = true;\n                    break;\n                }\n            }\n            this.dispatchEvent({ type: 'control' });\n        };\n        const onContextMenu = (event) => {\n            if (!this._domElement || !this._enabled)\n                return;\n            // contextmenu event is fired right after pointerdown/mousedown.\n            // remove attached handlers and active pointer, if interrupted by contextmenu.\n            if (this.mouseButtons.right === CameraControls.ACTION.NONE) {\n                const pointerId = event instanceof PointerEvent ? event.pointerId :\n                    event instanceof MouseEvent ? 0 :\n                        0;\n                const pointer = this._findPointerById(pointerId);\n                pointer && this._disposePointer(pointer);\n                // eslint-disable-next-line no-undef\n                this._domElement.ownerDocument.removeEventListener('pointermove', onPointerMove, { passive: false });\n                this._domElement.ownerDocument.removeEventListener('pointerup', onPointerUp);\n                this._domElement.ownerDocument.removeEventListener('mousemove', onMouseMove);\n                this._domElement.ownerDocument.removeEventListener('mouseup', onMouseUp);\n                return;\n            }\n            event.preventDefault();\n        };\n        const startDragging = (event) => {\n            if (!this._enabled)\n                return;\n            extractClientCoordFromEvent(this._activePointers, _v2);\n            this._getClientRect(this._elementRect);\n            dragStartPosition.copy(_v2);\n            lastDragPosition.copy(_v2);\n            const isMultiTouch = this._activePointers.length >= 2;\n            if (isMultiTouch) {\n                // 2 finger pinch\n                const dx = _v2.x - this._activePointers[1].clientX;\n                const dy = _v2.y - this._activePointers[1].clientY;\n                const distance = Math.sqrt(dx * dx + dy * dy);\n                dollyStart.set(0, distance);\n                // center coords of 2 finger truck\n                const x = (this._activePointers[0].clientX + this._activePointers[1].clientX) * 0.5;\n                const y = (this._activePointers[0].clientY + this._activePointers[1].clientY) * 0.5;\n                lastDragPosition.set(x, y);\n            }\n            this._state = 0;\n            if (!event) {\n                if (this._lockedPointer)\n                    this._state = this._state | this.mouseButtons.left;\n            }\n            else if ('pointerType' in event && event.pointerType === 'touch') {\n                switch (this._activePointers.length) {\n                    case 1:\n                        this._state = this.touches.one;\n                        break;\n                    case 2:\n                        this._state = this.touches.two;\n                        break;\n                    case 3:\n                        this._state = this.touches.three;\n                        break;\n                }\n            }\n            else {\n                if (!this._lockedPointer && (event.buttons & MOUSE_BUTTON.LEFT) === MOUSE_BUTTON.LEFT) {\n                    this._state = this._state | this.mouseButtons.left;\n                }\n                if ((event.buttons & MOUSE_BUTTON.MIDDLE) === MOUSE_BUTTON.MIDDLE) {\n                    this._state = this._state | this.mouseButtons.middle;\n                }\n                if ((event.buttons & MOUSE_BUTTON.RIGHT) === MOUSE_BUTTON.RIGHT) {\n                    this._state = this._state | this.mouseButtons.right;\n                }\n            }\n            // stop current movement on drag start\n            if ((this._state & ACTION.ROTATE) === ACTION.ROTATE ||\n                (this._state & ACTION.TOUCH_ROTATE) === ACTION.TOUCH_ROTATE ||\n                (this._state & ACTION.TOUCH_DOLLY_ROTATE) === ACTION.TOUCH_DOLLY_ROTATE ||\n                (this._state & ACTION.TOUCH_ZOOM_ROTATE) === ACTION.TOUCH_ZOOM_ROTATE) {\n                this._sphericalEnd.theta = this._spherical.theta;\n                this._sphericalEnd.phi = this._spherical.phi;\n                this._thetaVelocity.value = 0;\n                this._phiVelocity.value = 0;\n            }\n            if ((this._state & ACTION.TRUCK) === ACTION.TRUCK ||\n                (this._state & ACTION.TOUCH_TRUCK) === ACTION.TOUCH_TRUCK ||\n                (this._state & ACTION.TOUCH_DOLLY_TRUCK) === ACTION.TOUCH_DOLLY_TRUCK ||\n                (this._state & ACTION.TOUCH_ZOOM_TRUCK) === ACTION.TOUCH_ZOOM_TRUCK) {\n                this._targetEnd.copy(this._target);\n                this._targetVelocity.set(0, 0, 0);\n            }\n            if ((this._state & ACTION.DOLLY) === ACTION.DOLLY ||\n                (this._state & ACTION.TOUCH_DOLLY) === ACTION.TOUCH_DOLLY ||\n                (this._state & ACTION.TOUCH_DOLLY_TRUCK) === ACTION.TOUCH_DOLLY_TRUCK ||\n                (this._state & ACTION.TOUCH_DOLLY_OFFSET) === ACTION.TOUCH_DOLLY_OFFSET ||\n                (this._state & ACTION.TOUCH_DOLLY_ROTATE) === ACTION.TOUCH_DOLLY_ROTATE) {\n                this._sphericalEnd.radius = this._spherical.radius;\n                this._radiusVelocity.value = 0;\n            }\n            if ((this._state & ACTION.ZOOM) === ACTION.ZOOM ||\n                (this._state & ACTION.TOUCH_ZOOM) === ACTION.TOUCH_ZOOM ||\n                (this._state & ACTION.TOUCH_ZOOM_TRUCK) === ACTION.TOUCH_ZOOM_TRUCK ||\n                (this._state & ACTION.TOUCH_ZOOM_OFFSET) === ACTION.TOUCH_ZOOM_OFFSET ||\n                (this._state & ACTION.TOUCH_ZOOM_ROTATE) === ACTION.TOUCH_ZOOM_ROTATE) {\n                this._zoomEnd = this._zoom;\n                this._zoomVelocity.value = 0;\n            }\n            if ((this._state & ACTION.OFFSET) === ACTION.OFFSET ||\n                (this._state & ACTION.TOUCH_OFFSET) === ACTION.TOUCH_OFFSET ||\n                (this._state & ACTION.TOUCH_DOLLY_OFFSET) === ACTION.TOUCH_DOLLY_OFFSET ||\n                (this._state & ACTION.TOUCH_ZOOM_OFFSET) === ACTION.TOUCH_ZOOM_OFFSET) {\n                this._focalOffsetEnd.copy(this._focalOffset);\n                this._focalOffsetVelocity.set(0, 0, 0);\n            }\n            this.dispatchEvent({ type: 'controlstart' });\n        };\n        const dragging = () => {\n            if (!this._enabled)\n                return;\n            extractClientCoordFromEvent(this._activePointers, _v2);\n            // When pointer lock is enabled clientX, clientY, screenX, and screenY remain 0.\n            // If pointer lock is enabled, use the Delta directory, and assume active-pointer is not multiple.\n            const isPointerLockActive = this._domElement && document.pointerLockElement === this._domElement;\n            const lockedPointer = isPointerLockActive ? this._lockedPointer || this._activePointers[0] : null;\n            const deltaX = lockedPointer ? -lockedPointer.deltaX : lastDragPosition.x - _v2.x;\n            const deltaY = lockedPointer ? -lockedPointer.deltaY : lastDragPosition.y - _v2.y;\n            lastDragPosition.copy(_v2);\n            if ((this._state & ACTION.ROTATE) === ACTION.ROTATE ||\n                (this._state & ACTION.TOUCH_ROTATE) === ACTION.TOUCH_ROTATE ||\n                (this._state & ACTION.TOUCH_DOLLY_ROTATE) === ACTION.TOUCH_DOLLY_ROTATE ||\n                (this._state & ACTION.TOUCH_ZOOM_ROTATE) === ACTION.TOUCH_ZOOM_ROTATE) {\n                this._rotateInternal(deltaX, deltaY);\n                this._isUserControllingRotate = true;\n            }\n            if ((this._state & ACTION.DOLLY) === ACTION.DOLLY ||\n                (this._state & ACTION.ZOOM) === ACTION.ZOOM) {\n                const dollyX = this.dollyToCursor ? (dragStartPosition.x - this._elementRect.x) / this._elementRect.width * 2 - 1 : 0;\n                const dollyY = this.dollyToCursor ? (dragStartPosition.y - this._elementRect.y) / this._elementRect.height * -2 + 1 : 0;\n                const dollyDirection = this.dollyDragInverted ? -1 : 1;\n                if ((this._state & ACTION.DOLLY) === ACTION.DOLLY) {\n                    this._dollyInternal(dollyDirection * deltaY * TOUCH_DOLLY_FACTOR, dollyX, dollyY);\n                    this._isUserControllingDolly = true;\n                }\n                else {\n                    this._zoomInternal(dollyDirection * deltaY * TOUCH_DOLLY_FACTOR, dollyX, dollyY);\n                    this._isUserControllingZoom = true;\n                }\n            }\n            if ((this._state & ACTION.TOUCH_DOLLY) === ACTION.TOUCH_DOLLY ||\n                (this._state & ACTION.TOUCH_ZOOM) === ACTION.TOUCH_ZOOM ||\n                (this._state & ACTION.TOUCH_DOLLY_TRUCK) === ACTION.TOUCH_DOLLY_TRUCK ||\n                (this._state & ACTION.TOUCH_ZOOM_TRUCK) === ACTION.TOUCH_ZOOM_TRUCK ||\n                (this._state & ACTION.TOUCH_DOLLY_OFFSET) === ACTION.TOUCH_DOLLY_OFFSET ||\n                (this._state & ACTION.TOUCH_ZOOM_OFFSET) === ACTION.TOUCH_ZOOM_OFFSET ||\n                (this._state & ACTION.TOUCH_DOLLY_ROTATE) === ACTION.TOUCH_DOLLY_ROTATE ||\n                (this._state & ACTION.TOUCH_ZOOM_ROTATE) === ACTION.TOUCH_ZOOM_ROTATE) {\n                const dx = _v2.x - this._activePointers[1].clientX;\n                const dy = _v2.y - this._activePointers[1].clientY;\n                const distance = Math.sqrt(dx * dx + dy * dy);\n                const dollyDelta = dollyStart.y - distance;\n                dollyStart.set(0, distance);\n                const dollyX = this.dollyToCursor ? (lastDragPosition.x - this._elementRect.x) / this._elementRect.width * 2 - 1 : 0;\n                const dollyY = this.dollyToCursor ? (lastDragPosition.y - this._elementRect.y) / this._elementRect.height * -2 + 1 : 0;\n                if ((this._state & ACTION.TOUCH_DOLLY) === ACTION.TOUCH_DOLLY ||\n                    (this._state & ACTION.TOUCH_DOLLY_ROTATE) === ACTION.TOUCH_DOLLY_ROTATE ||\n                    (this._state & ACTION.TOUCH_DOLLY_TRUCK) === ACTION.TOUCH_DOLLY_TRUCK ||\n                    (this._state & ACTION.TOUCH_DOLLY_OFFSET) === ACTION.TOUCH_DOLLY_OFFSET) {\n                    this._dollyInternal(dollyDelta * TOUCH_DOLLY_FACTOR, dollyX, dollyY);\n                    this._isUserControllingDolly = true;\n                }\n                else {\n                    this._zoomInternal(dollyDelta * TOUCH_DOLLY_FACTOR, dollyX, dollyY);\n                    this._isUserControllingZoom = true;\n                }\n            }\n            if ((this._state & ACTION.TRUCK) === ACTION.TRUCK ||\n                (this._state & ACTION.TOUCH_TRUCK) === ACTION.TOUCH_TRUCK ||\n                (this._state & ACTION.TOUCH_DOLLY_TRUCK) === ACTION.TOUCH_DOLLY_TRUCK ||\n                (this._state & ACTION.TOUCH_ZOOM_TRUCK) === ACTION.TOUCH_ZOOM_TRUCK) {\n                this._truckInternal(deltaX, deltaY, false);\n                this._isUserControllingTruck = true;\n            }\n            if ((this._state & ACTION.OFFSET) === ACTION.OFFSET ||\n                (this._state & ACTION.TOUCH_OFFSET) === ACTION.TOUCH_OFFSET ||\n                (this._state & ACTION.TOUCH_DOLLY_OFFSET) === ACTION.TOUCH_DOLLY_OFFSET ||\n                (this._state & ACTION.TOUCH_ZOOM_OFFSET) === ACTION.TOUCH_ZOOM_OFFSET) {\n                this._truckInternal(deltaX, deltaY, true);\n                this._isUserControllingOffset = true;\n            }\n            this.dispatchEvent({ type: 'control' });\n        };\n        const endDragging = () => {\n            extractClientCoordFromEvent(this._activePointers, _v2);\n            lastDragPosition.copy(_v2);\n            if (this._activePointers.length === 0 ||\n                (this._activePointers.length === 1 && this._activePointers[0] === this._lockedPointer)) {\n                this._isDragging = false;\n            }\n            if (this._activePointers.length === 0 && this._domElement) {\n                // eslint-disable-next-line no-undef\n                this._domElement.ownerDocument.removeEventListener('pointermove', onPointerMove, { passive: false });\n                this._domElement.ownerDocument.removeEventListener('mousemove', onMouseMove);\n                this._domElement.ownerDocument.removeEventListener('pointerup', onPointerUp);\n                this._domElement.ownerDocument.removeEventListener('mouseup', onMouseUp);\n                this.dispatchEvent({ type: 'controlend' });\n            }\n        };\n        this.lockPointer = () => {\n            if (!this._enabled || !this._domElement)\n                return;\n            this.cancel();\n            // Element.requestPointerLock is allowed to happen without any pointer active - create a faux one for compatibility with controls\n            this._lockedPointer = {\n                pointerId: -1,\n                clientX: 0,\n                clientY: 0,\n                deltaX: 0,\n                deltaY: 0,\n                mouseButton: null,\n            };\n            this._activePointers.push(this._lockedPointer);\n            // eslint-disable-next-line no-undef\n            this._domElement.ownerDocument.removeEventListener('pointermove', onPointerMove, { passive: false });\n            this._domElement.ownerDocument.removeEventListener('pointerup', onPointerUp);\n            this._domElement.requestPointerLock();\n            this._domElement.ownerDocument.addEventListener('pointerlockchange', onPointerLockChange);\n            this._domElement.ownerDocument.addEventListener('pointerlockerror', onPointerLockError);\n            this._domElement.ownerDocument.addEventListener('pointermove', onPointerMove, { passive: false });\n            this._domElement.ownerDocument.addEventListener('pointerup', onPointerUp);\n            startDragging();\n        };\n        this.unlockPointer = () => {\n            if (this._lockedPointer !== null) {\n                this._disposePointer(this._lockedPointer);\n                this._lockedPointer = null;\n            }\n            document.exitPointerLock();\n            this.cancel();\n            if (!this._domElement)\n                return;\n            this._domElement.ownerDocument.removeEventListener('pointerlockchange', onPointerLockChange);\n            this._domElement.ownerDocument.removeEventListener('pointerlockerror', onPointerLockError);\n        };\n        const onPointerLockChange = () => {\n            const isPointerLockActive = this._domElement && this._domElement.ownerDocument.pointerLockElement === this._domElement;\n            if (!isPointerLockActive)\n                this.unlockPointer();\n        };\n        const onPointerLockError = () => {\n            this.unlockPointer();\n        };\n        this._addAllEventListeners = (domElement) => {\n            this._domElement = domElement;\n            this._domElement.style.touchAction = 'none';\n            this._domElement.style.userSelect = 'none';\n            this._domElement.style.webkitUserSelect = 'none';\n            this._domElement.addEventListener('pointerdown', onPointerDown);\n            isPointerEventsNotSupported && this._domElement.addEventListener('mousedown', onMouseDown);\n            this._domElement.addEventListener('pointercancel', onPointerUp);\n            this._domElement.addEventListener('wheel', onMouseWheel, { passive: false });\n            this._domElement.addEventListener('contextmenu', onContextMenu);\n        };\n        this._removeAllEventListeners = () => {\n            if (!this._domElement)\n                return;\n            this._domElement.style.touchAction = '';\n            this._domElement.style.userSelect = '';\n            this._domElement.style.webkitUserSelect = '';\n            this._domElement.removeEventListener('pointerdown', onPointerDown);\n            this._domElement.removeEventListener('mousedown', onMouseDown);\n            this._domElement.removeEventListener('pointercancel', onPointerUp);\n            // https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/removeEventListener#matching_event_listeners_for_removal\n            // > it's probably wise to use the same values used for the call to `addEventListener()` when calling `removeEventListener()`\n            // see https://github.com/microsoft/TypeScript/issues/32912#issuecomment-522142969\n            // eslint-disable-next-line no-undef\n            this._domElement.removeEventListener('wheel', onMouseWheel, { passive: false });\n            this._domElement.removeEventListener('contextmenu', onContextMenu);\n            // eslint-disable-next-line no-undef\n            this._domElement.ownerDocument.removeEventListener('pointermove', onPointerMove, { passive: false });\n            this._domElement.ownerDocument.removeEventListener('mousemove', onMouseMove);\n            this._domElement.ownerDocument.removeEventListener('pointerup', onPointerUp);\n            this._domElement.ownerDocument.removeEventListener('mouseup', onMouseUp);\n            this._domElement.ownerDocument.removeEventListener('pointerlockchange', onPointerLockChange);\n            this._domElement.ownerDocument.removeEventListener('pointerlockerror', onPointerLockError);\n        };\n        this.cancel = () => {\n            if (this._state === ACTION.NONE)\n                return;\n            this._state = ACTION.NONE;\n            this._activePointers.length = 0;\n            endDragging();\n        };\n        if (domElement)\n            this.connect(domElement);\n        this.update(0);\n    }\n    /**\n     * The camera to be controlled\n     * @category Properties\n     */\n    get camera() {\n        return this._camera;\n    }\n    set camera(camera) {\n        this._camera = camera;\n        this.updateCameraUp();\n        this._camera.updateProjectionMatrix();\n        this._updateNearPlaneCorners();\n        this._needsUpdate = true;\n    }\n    /**\n     * Whether or not the controls are enabled.\n     * `false` to disable user dragging/touch-move, but all methods works.\n     * @category Properties\n     */\n    get enabled() {\n        return this._enabled;\n    }\n    set enabled(enabled) {\n        this._enabled = enabled;\n        if (!this._domElement)\n            return;\n        if (enabled) {\n            this._domElement.style.touchAction = 'none';\n            this._domElement.style.userSelect = 'none';\n            this._domElement.style.webkitUserSelect = 'none';\n        }\n        else {\n            this.cancel();\n            this._domElement.style.touchAction = '';\n            this._domElement.style.userSelect = '';\n            this._domElement.style.webkitUserSelect = '';\n        }\n    }\n    /**\n     * Returns `true` if the controls are active updating.\n     * readonly value.\n     * @category Properties\n     */\n    get active() {\n        return !this._hasRested;\n    }\n    /**\n     * Getter for the current `ACTION`.\n     * readonly value.\n     * @category Properties\n     */\n    get currentAction() {\n        return this._state;\n    }\n    /**\n     * get/set Current distance.\n     * @category Properties\n     */\n    get distance() {\n        return this._spherical.radius;\n    }\n    set distance(distance) {\n        if (this._spherical.radius === distance &&\n            this._sphericalEnd.radius === distance)\n            return;\n        this._spherical.radius = distance;\n        this._sphericalEnd.radius = distance;\n        this._needsUpdate = true;\n    }\n    // horizontal angle\n    /**\n     * get/set the azimuth angle (horizontal) in radians.\n     * Every 360 degrees turn is added to `.azimuthAngle` value, which is accumulative.\n     * @category Properties\n     */\n    get azimuthAngle() {\n        return this._spherical.theta;\n    }\n    set azimuthAngle(azimuthAngle) {\n        if (this._spherical.theta === azimuthAngle &&\n            this._sphericalEnd.theta === azimuthAngle)\n            return;\n        this._spherical.theta = azimuthAngle;\n        this._sphericalEnd.theta = azimuthAngle;\n        this._needsUpdate = true;\n    }\n    // vertical angle\n    /**\n     * get/set the polar angle (vertical) in radians.\n     * @category Properties\n     */\n    get polarAngle() {\n        return this._spherical.phi;\n    }\n    set polarAngle(polarAngle) {\n        if (this._spherical.phi === polarAngle &&\n            this._sphericalEnd.phi === polarAngle)\n            return;\n        this._spherical.phi = polarAngle;\n        this._sphericalEnd.phi = polarAngle;\n        this._needsUpdate = true;\n    }\n    /**\n     * Whether camera position should be enclosed in the boundary or not.\n     * @category Properties\n     */\n    get boundaryEnclosesCamera() {\n        return this._boundaryEnclosesCamera;\n    }\n    set boundaryEnclosesCamera(boundaryEnclosesCamera) {\n        this._boundaryEnclosesCamera = boundaryEnclosesCamera;\n        this._needsUpdate = true;\n    }\n    /**\n     * Adds the specified event listener.\n     * Applicable event types (which is `K`) are:\n     * | Event name          | Timing |\n     * | ------------------- | ------ |\n     * | `'controlstart'`    | When the user starts to control the camera via mouse / touches. ¹ |\n     * | `'control'`         | When the user controls the camera (dragging). |\n     * | `'controlend'`      | When the user ends to control the camera. ¹ |\n     * | `'transitionstart'` | When any kind of transition starts, either user control or using a method with `enableTransition = true` |\n     * | `'update'`          | When the camera position is updated. |\n     * | `'wake'`            | When the camera starts moving. |\n     * | `'rest'`            | When the camera movement is below `.restThreshold` ². |\n     * | `'sleep'`           | When the camera end moving. |\n     *\n     * 1. `mouseButtons.wheel` (Mouse wheel control) does not emit `'controlstart'` and `'controlend'`. `mouseButtons.wheel` uses scroll-event internally, and scroll-event happens intermittently. That means \"start\" and \"end\" cannot be detected.\n     * 2. Due to damping, `sleep` will usually fire a few seconds after the camera _appears_ to have stopped moving. If you want to do something (e.g. enable UI, perform another transition) at the point when the camera has stopped, you probably want the `rest` event. This can be fine tuned using the `.restThreshold` parameter. See the [Rest and Sleep Example](https://yomotsu.github.io/camera-controls/examples/rest-and-sleep.html).\n     *\n     * e.g.\n     * ```\n     * cameraControl.addEventListener( 'controlstart', myCallbackFunction );\n     * ```\n     * @param type event name\n     * @param listener handler function\n     * @category Methods\n     */\n    addEventListener(type, listener) {\n        super.addEventListener(type, listener);\n    }\n    /**\n     * Removes the specified event listener\n     * e.g.\n     * ```\n     * cameraControl.addEventListener( 'controlstart', myCallbackFunction );\n     * ```\n     * @param type event name\n     * @param listener handler function\n     * @category Methods\n     */\n    removeEventListener(type, listener) {\n        super.removeEventListener(type, listener);\n    }\n    /**\n     * Rotate azimuthal angle(horizontal) and polar angle(vertical).\n     * Every value is added to the current value.\n     * @param azimuthAngle Azimuth rotate angle. In radian.\n     * @param polarAngle Polar rotate angle. In radian.\n     * @param enableTransition Whether to move smoothly or immediately\n     * @category Methods\n     */\n    rotate(azimuthAngle, polarAngle, enableTransition = false) {\n        return this.rotateTo(this._sphericalEnd.theta + azimuthAngle, this._sphericalEnd.phi + polarAngle, enableTransition);\n    }\n    /**\n     * Rotate azimuthal angle(horizontal) to the given angle and keep the same polar angle(vertical) target.\n     *\n     * e.g.\n     * ```\n     * cameraControls.rotateAzimuthTo( 30 * THREE.MathUtils.DEG2RAD, true );\n     * ```\n     * @param azimuthAngle Azimuth rotate angle. In radian.\n     * @param enableTransition Whether to move smoothly or immediately\n     * @category Methods\n     */\n    rotateAzimuthTo(azimuthAngle, enableTransition = false) {\n        return this.rotateTo(azimuthAngle, this._sphericalEnd.phi, enableTransition);\n    }\n    /**\n     * Rotate polar angle(vertical) to the given angle and keep the same azimuthal angle(horizontal) target.\n     *\n     * e.g.\n     * ```\n     * cameraControls.rotatePolarTo( 30 * THREE.MathUtils.DEG2RAD, true );\n     * ```\n     * @param polarAngle Polar rotate angle. In radian.\n     * @param enableTransition Whether to move smoothly or immediately\n     * @category Methods\n     */\n    rotatePolarTo(polarAngle, enableTransition = false) {\n        return this.rotateTo(this._sphericalEnd.theta, polarAngle, enableTransition);\n    }\n    /**\n     * Rotate azimuthal angle(horizontal) and polar angle(vertical) to the given angle.\n     * Camera view will rotate over the orbit pivot absolutely:\n     *\n     * azimuthAngle\n     * ```\n     *       0º\n     *         \\\n     * 90º -----+----- -90º\n     *           \\\n     *           180º\n     * ```\n     * | direction | angle                  |\n     * | --------- | ---------------------- |\n     * | front     | 0º                     |\n     * | left      | 90º (`Math.PI / 2`)    |\n     * | right     | -90º (`- Math.PI / 2`) |\n     * | back      | 180º (`Math.PI`)       |\n     *\n     * polarAngle\n     * ```\n     *     180º\n     *      |\n     *      90º\n     *      |\n     *      0º\n     * ```\n     * | direction            | angle                  |\n     * | -------------------- | ---------------------- |\n     * | top/sky              | 180º (`Math.PI`)       |\n     * | horizontal from view | 90º (`Math.PI / 2`)    |\n     * | bottom/floor         | 0º                     |\n     *\n     * @param azimuthAngle Azimuth rotate angle to. In radian.\n     * @param polarAngle Polar rotate angle to. In radian.\n     * @param enableTransition  Whether to move smoothly or immediately\n     * @category Methods\n     */\n    rotateTo(azimuthAngle, polarAngle, enableTransition = false) {\n        this._isUserControllingRotate = false;\n        const theta = clamp(azimuthAngle, this.minAzimuthAngle, this.maxAzimuthAngle);\n        const phi = clamp(polarAngle, this.minPolarAngle, this.maxPolarAngle);\n        this._sphericalEnd.theta = theta;\n        this._sphericalEnd.phi = phi;\n        this._sphericalEnd.makeSafe();\n        this._needsUpdate = true;\n        if (!enableTransition) {\n            this._spherical.theta = this._sphericalEnd.theta;\n            this._spherical.phi = this._sphericalEnd.phi;\n        }\n        const resolveImmediately = !enableTransition ||\n            approxEquals(this._spherical.theta, this._sphericalEnd.theta, this.restThreshold) &&\n                approxEquals(this._spherical.phi, this._sphericalEnd.phi, this.restThreshold);\n        return this._createOnRestPromise(resolveImmediately);\n    }\n    /**\n     * Dolly in/out camera position.\n     * @param distance Distance of dollyIn. Negative number for dollyOut.\n     * @param enableTransition Whether to move smoothly or immediately.\n     * @category Methods\n     */\n    dolly(distance, enableTransition = false) {\n        return this.dollyTo(this._sphericalEnd.radius - distance, enableTransition);\n    }\n    /**\n     * Dolly in/out camera position to given distance.\n     * @param distance Distance of dolly.\n     * @param enableTransition Whether to move smoothly or immediately.\n     * @category Methods\n     */\n    dollyTo(distance, enableTransition = false) {\n        this._isUserControllingDolly = false;\n        const lastRadius = this._sphericalEnd.radius;\n        const newRadius = clamp(distance, this.minDistance, this.maxDistance);\n        const hasCollider = this.colliderMeshes.length >= 1;\n        if (hasCollider) {\n            const maxDistanceByCollisionTest = this._collisionTest();\n            const isCollided = approxEquals(maxDistanceByCollisionTest, this._spherical.radius);\n            const isDollyIn = lastRadius > newRadius;\n            if (!isDollyIn && isCollided)\n                return Promise.resolve();\n            this._sphericalEnd.radius = Math.min(newRadius, maxDistanceByCollisionTest);\n        }\n        else {\n            this._sphericalEnd.radius = newRadius;\n        }\n        this._needsUpdate = true;\n        if (!enableTransition) {\n            this._spherical.radius = this._sphericalEnd.radius;\n        }\n        const resolveImmediately = !enableTransition || approxEquals(this._spherical.radius, this._sphericalEnd.radius, this.restThreshold);\n        return this._createOnRestPromise(resolveImmediately);\n    }\n    /**\n     * Zoom in/out camera. The value is added to camera zoom.\n     * Limits set with `.minZoom` and `.maxZoom`\n     * @param zoomStep zoom scale\n     * @param enableTransition Whether to move smoothly or immediately\n     * @category Methods\n     */\n    zoom(zoomStep, enableTransition = false) {\n        return this.zoomTo(this._zoomEnd + zoomStep, enableTransition);\n    }\n    /**\n     * Zoom in/out camera to given scale. The value overwrites camera zoom.\n     * Limits set with .minZoom and .maxZoom\n     * @param zoom\n     * @param enableTransition\n     * @category Methods\n     */\n    zoomTo(zoom, enableTransition = false) {\n        this._isUserControllingZoom = false;\n        this._zoomEnd = clamp(zoom, this.minZoom, this.maxZoom);\n        this._needsUpdate = true;\n        if (!enableTransition) {\n            this._zoom = this._zoomEnd;\n        }\n        const resolveImmediately = !enableTransition || approxEquals(this._zoom, this._zoomEnd, this.restThreshold);\n        return this._createOnRestPromise(resolveImmediately);\n    }\n    /**\n     * @deprecated `pan()` has been renamed to `truck()`\n     * @category Methods\n     */\n    pan(x, y, enableTransition = false) {\n        console.warn('`pan` has been renamed to `truck`');\n        return this.truck(x, y, enableTransition);\n    }\n    /**\n     * Truck and pedestal camera using current azimuthal angle\n     * @param x Horizontal translate amount\n     * @param y Vertical translate amount\n     * @param enableTransition Whether to move smoothly or immediately\n     * @category Methods\n     */\n    truck(x, y, enableTransition = false) {\n        this._camera.updateMatrix();\n        _xColumn.setFromMatrixColumn(this._camera.matrix, 0);\n        _yColumn.setFromMatrixColumn(this._camera.matrix, 1);\n        _xColumn.multiplyScalar(x);\n        _yColumn.multiplyScalar(-y);\n        const offset = _v3A.copy(_xColumn).add(_yColumn);\n        const to = _v3B.copy(this._targetEnd).add(offset);\n        return this.moveTo(to.x, to.y, to.z, enableTransition);\n    }\n    /**\n     * Move forward / backward.\n     * @param distance Amount to move forward / backward. Negative value to move backward\n     * @param enableTransition Whether to move smoothly or immediately\n     * @category Methods\n     */\n    forward(distance, enableTransition = false) {\n        _v3A.setFromMatrixColumn(this._camera.matrix, 0);\n        _v3A.crossVectors(this._camera.up, _v3A);\n        _v3A.multiplyScalar(distance);\n        const to = _v3B.copy(this._targetEnd).add(_v3A);\n        return this.moveTo(to.x, to.y, to.z, enableTransition);\n    }\n    /**\n     * Move up / down.\n     * @param height Amount to move up / down. Negative value to move down\n     * @param enableTransition Whether to move smoothly or immediately\n     * @category Methods\n     */\n    elevate(height, enableTransition = false) {\n        _v3A.copy(this._camera.up).multiplyScalar(height);\n        return this.moveTo(this._targetEnd.x + _v3A.x, this._targetEnd.y + _v3A.y, this._targetEnd.z + _v3A.z, enableTransition);\n    }\n    /**\n     * Move target position to given point.\n     * @param x x coord to move center position\n     * @param y y coord to move center position\n     * @param z z coord to move center position\n     * @param enableTransition Whether to move smoothly or immediately\n     * @category Methods\n     */\n    moveTo(x, y, z, enableTransition = false) {\n        this._isUserControllingTruck = false;\n        const offset = _v3A.set(x, y, z).sub(this._targetEnd);\n        this._encloseToBoundary(this._targetEnd, offset, this.boundaryFriction);\n        this._needsUpdate = true;\n        if (!enableTransition) {\n            this._target.copy(this._targetEnd);\n        }\n        const resolveImmediately = !enableTransition ||\n            approxEquals(this._target.x, this._targetEnd.x, this.restThreshold) &&\n                approxEquals(this._target.y, this._targetEnd.y, this.restThreshold) &&\n                approxEquals(this._target.z, this._targetEnd.z, this.restThreshold);\n        return this._createOnRestPromise(resolveImmediately);\n    }\n    /**\n     * Look in the given point direction.\n     * @param x point x.\n     * @param y point y.\n     * @param z point z.\n     * @param enableTransition Whether to move smoothly or immediately.\n     * @returns Transition end promise\n     * @category Methods\n     */\n    lookInDirectionOf(x, y, z, enableTransition = false) {\n        const point = _v3A.set(x, y, z);\n        const direction = point.sub(this._targetEnd).normalize();\n        const position = direction.multiplyScalar(-this._sphericalEnd.radius);\n        return this.setPosition(position.x, position.y, position.z, enableTransition);\n    }\n    /**\n     * Fit the viewport to the box or the bounding box of the object, using the nearest axis. paddings are in unit.\n     * set `cover: true` to fill enter screen.\n     * e.g.\n     * ```\n     * cameraControls.fitToBox( myMesh );\n     * ```\n     * @param box3OrObject Axis aligned bounding box to fit the view.\n     * @param enableTransition Whether to move smoothly or immediately.\n     * @param options | `<object>` { cover: boolean, paddingTop: number, paddingLeft: number, paddingBottom: number, paddingRight: number }\n     * @returns Transition end promise\n     * @category Methods\n     */\n    fitToBox(box3OrObject, enableTransition, { cover = false, paddingLeft = 0, paddingRight = 0, paddingBottom = 0, paddingTop = 0 } = {}) {\n        const promises = [];\n        const aabb = box3OrObject.isBox3\n            ? _box3A.copy(box3OrObject)\n            : _box3A.setFromObject(box3OrObject);\n        if (aabb.isEmpty()) {\n            console.warn('camera-controls: fitTo() cannot be used with an empty box. Aborting');\n            Promise.resolve();\n        }\n        // round to closest axis ( forward | backward | right | left | top | bottom )\n        const theta = roundToStep(this._sphericalEnd.theta, PI_HALF);\n        const phi = roundToStep(this._sphericalEnd.phi, PI_HALF);\n        promises.push(this.rotateTo(theta, phi, enableTransition));\n        const normal = _v3A.setFromSpherical(this._sphericalEnd).normalize();\n        const rotation = _quaternionA.setFromUnitVectors(normal, _AXIS_Z);\n        const viewFromPolar = approxEquals(Math.abs(normal.y), 1);\n        if (viewFromPolar) {\n            rotation.multiply(_quaternionB.setFromAxisAngle(_AXIS_Y, theta));\n        }\n        rotation.multiply(this._yAxisUpSpaceInverse);\n        // make oriented bounding box\n        const bb = _box3B.makeEmpty();\n        // left bottom back corner\n        _v3B.copy(aabb.min).applyQuaternion(rotation);\n        bb.expandByPoint(_v3B);\n        // right bottom back corner\n        _v3B.copy(aabb.min).setX(aabb.max.x).applyQuaternion(rotation);\n        bb.expandByPoint(_v3B);\n        // left top back corner\n        _v3B.copy(aabb.min).setY(aabb.max.y).applyQuaternion(rotation);\n        bb.expandByPoint(_v3B);\n        // right top back corner\n        _v3B.copy(aabb.max).setZ(aabb.min.z).applyQuaternion(rotation);\n        bb.expandByPoint(_v3B);\n        // left bottom front corner\n        _v3B.copy(aabb.min).setZ(aabb.max.z).applyQuaternion(rotation);\n        bb.expandByPoint(_v3B);\n        // right bottom front corner\n        _v3B.copy(aabb.max).setY(aabb.min.y).applyQuaternion(rotation);\n        bb.expandByPoint(_v3B);\n        // left top front corner\n        _v3B.copy(aabb.max).setX(aabb.min.x).applyQuaternion(rotation);\n        bb.expandByPoint(_v3B);\n        // right top front corner\n        _v3B.copy(aabb.max).applyQuaternion(rotation);\n        bb.expandByPoint(_v3B);\n        // add padding\n        bb.min.x -= paddingLeft;\n        bb.min.y -= paddingBottom;\n        bb.max.x += paddingRight;\n        bb.max.y += paddingTop;\n        rotation.setFromUnitVectors(_AXIS_Z, normal);\n        if (viewFromPolar) {\n            rotation.premultiply(_quaternionB.invert());\n        }\n        rotation.premultiply(this._yAxisUpSpace);\n        const bbSize = bb.getSize(_v3A);\n        const center = bb.getCenter(_v3B).applyQuaternion(rotation);\n        if (isPerspectiveCamera(this._camera)) {\n            const distance = this.getDistanceToFitBox(bbSize.x, bbSize.y, bbSize.z, cover);\n            promises.push(this.moveTo(center.x, center.y, center.z, enableTransition));\n            promises.push(this.dollyTo(distance, enableTransition));\n            promises.push(this.setFocalOffset(0, 0, 0, enableTransition));\n        }\n        else if (isOrthographicCamera(this._camera)) {\n            const camera = this._camera;\n            const width = camera.right - camera.left;\n            const height = camera.top - camera.bottom;\n            const zoom = cover ? Math.max(width / bbSize.x, height / bbSize.y) : Math.min(width / bbSize.x, height / bbSize.y);\n            promises.push(this.moveTo(center.x, center.y, center.z, enableTransition));\n            promises.push(this.zoomTo(zoom, enableTransition));\n            promises.push(this.setFocalOffset(0, 0, 0, enableTransition));\n        }\n        return Promise.all(promises);\n    }\n    /**\n     * Fit the viewport to the sphere or the bounding sphere of the object.\n     * @param sphereOrMesh\n     * @param enableTransition\n     * @category Methods\n     */\n    fitToSphere(sphereOrMesh, enableTransition) {\n        const promises = [];\n        const isSphere = sphereOrMesh instanceof THREE.Sphere;\n        const boundingSphere = isSphere ?\n            _sphere.copy(sphereOrMesh) :\n            CameraControls.createBoundingSphere(sphereOrMesh, _sphere);\n        promises.push(this.moveTo(boundingSphere.center.x, boundingSphere.center.y, boundingSphere.center.z, enableTransition));\n        if (isPerspectiveCamera(this._camera)) {\n            const distanceToFit = this.getDistanceToFitSphere(boundingSphere.radius);\n            promises.push(this.dollyTo(distanceToFit, enableTransition));\n        }\n        else if (isOrthographicCamera(this._camera)) {\n            const width = this._camera.right - this._camera.left;\n            const height = this._camera.top - this._camera.bottom;\n            const diameter = 2 * boundingSphere.radius;\n            const zoom = Math.min(width / diameter, height / diameter);\n            promises.push(this.zoomTo(zoom, enableTransition));\n        }\n        promises.push(this.setFocalOffset(0, 0, 0, enableTransition));\n        return Promise.all(promises);\n    }\n    /**\n     * Look at the `target` from the `position`.\n     * @param positionX\n     * @param positionY\n     * @param positionZ\n     * @param targetX\n     * @param targetY\n     * @param targetZ\n     * @param enableTransition\n     * @category Methods\n     */\n    setLookAt(positionX, positionY, positionZ, targetX, targetY, targetZ, enableTransition = false) {\n        this._isUserControllingRotate = false;\n        this._isUserControllingDolly = false;\n        this._isUserControllingTruck = false;\n        const target = _v3B.set(targetX, targetY, targetZ);\n        const position = _v3A.set(positionX, positionY, positionZ);\n        this._targetEnd.copy(target);\n        this._sphericalEnd.setFromVector3(position.sub(target).applyQuaternion(this._yAxisUpSpace));\n        this.normalizeRotations();\n        this._needsUpdate = true;\n        if (!enableTransition) {\n            this._target.copy(this._targetEnd);\n            this._spherical.copy(this._sphericalEnd);\n        }\n        const resolveImmediately = !enableTransition ||\n            approxEquals(this._target.x, this._targetEnd.x, this.restThreshold) &&\n                approxEquals(this._target.y, this._targetEnd.y, this.restThreshold) &&\n                approxEquals(this._target.z, this._targetEnd.z, this.restThreshold) &&\n                approxEquals(this._spherical.theta, this._sphericalEnd.theta, this.restThreshold) &&\n                approxEquals(this._spherical.phi, this._sphericalEnd.phi, this.restThreshold) &&\n                approxEquals(this._spherical.radius, this._sphericalEnd.radius, this.restThreshold);\n        return this._createOnRestPromise(resolveImmediately);\n    }\n    /**\n     * Similar to setLookAt, but it interpolates between two states.\n     * @param positionAX\n     * @param positionAY\n     * @param positionAZ\n     * @param targetAX\n     * @param targetAY\n     * @param targetAZ\n     * @param positionBX\n     * @param positionBY\n     * @param positionBZ\n     * @param targetBX\n     * @param targetBY\n     * @param targetBZ\n     * @param t\n     * @param enableTransition\n     * @category Methods\n     */\n    lerpLookAt(positionAX, positionAY, positionAZ, targetAX, targetAY, targetAZ, positionBX, positionBY, positionBZ, targetBX, targetBY, targetBZ, t, enableTransition = false) {\n        this._isUserControllingRotate = false;\n        this._isUserControllingDolly = false;\n        this._isUserControllingTruck = false;\n        const targetA = _v3A.set(targetAX, targetAY, targetAZ);\n        const positionA = _v3B.set(positionAX, positionAY, positionAZ);\n        _sphericalA.setFromVector3(positionA.sub(targetA).applyQuaternion(this._yAxisUpSpace));\n        const targetB = _v3C.set(targetBX, targetBY, targetBZ);\n        const positionB = _v3B.set(positionBX, positionBY, positionBZ);\n        _sphericalB.setFromVector3(positionB.sub(targetB).applyQuaternion(this._yAxisUpSpace));\n        this._targetEnd.copy(targetA.lerp(targetB, t)); // tricky\n        const deltaTheta = _sphericalB.theta - _sphericalA.theta;\n        const deltaPhi = _sphericalB.phi - _sphericalA.phi;\n        const deltaRadius = _sphericalB.radius - _sphericalA.radius;\n        this._sphericalEnd.set(_sphericalA.radius + deltaRadius * t, _sphericalA.phi + deltaPhi * t, _sphericalA.theta + deltaTheta * t);\n        this.normalizeRotations();\n        this._needsUpdate = true;\n        if (!enableTransition) {\n            this._target.copy(this._targetEnd);\n            this._spherical.copy(this._sphericalEnd);\n        }\n        const resolveImmediately = !enableTransition ||\n            approxEquals(this._target.x, this._targetEnd.x, this.restThreshold) &&\n                approxEquals(this._target.y, this._targetEnd.y, this.restThreshold) &&\n                approxEquals(this._target.z, this._targetEnd.z, this.restThreshold) &&\n                approxEquals(this._spherical.theta, this._sphericalEnd.theta, this.restThreshold) &&\n                approxEquals(this._spherical.phi, this._sphericalEnd.phi, this.restThreshold) &&\n                approxEquals(this._spherical.radius, this._sphericalEnd.radius, this.restThreshold);\n        return this._createOnRestPromise(resolveImmediately);\n    }\n    /**\n     * Set angle and distance by given position.\n     * An alias of `setLookAt()`, without target change. Thus keep gazing at the current target\n     * @param positionX\n     * @param positionY\n     * @param positionZ\n     * @param enableTransition\n     * @category Methods\n     */\n    setPosition(positionX, positionY, positionZ, enableTransition = false) {\n        return this.setLookAt(positionX, positionY, positionZ, this._targetEnd.x, this._targetEnd.y, this._targetEnd.z, enableTransition);\n    }\n    /**\n     * Set the target position where gaze at.\n     * An alias of `setLookAt()`, without position change. Thus keep the same position.\n     * @param targetX\n     * @param targetY\n     * @param targetZ\n     * @param enableTransition\n     * @category Methods\n     */\n    setTarget(targetX, targetY, targetZ, enableTransition = false) {\n        const pos = this.getPosition(_v3A);\n        const promise = this.setLookAt(pos.x, pos.y, pos.z, targetX, targetY, targetZ, enableTransition);\n        // see https://github.com/yomotsu/camera-controls/issues/335\n        this._sphericalEnd.phi = clamp(this.polarAngle, this.minPolarAngle, this.maxPolarAngle);\n        return promise;\n    }\n    /**\n     * Set focal offset using the screen parallel coordinates. z doesn't affect in Orthographic as with Dolly.\n     * @param x\n     * @param y\n     * @param z\n     * @param enableTransition\n     * @category Methods\n     */\n    setFocalOffset(x, y, z, enableTransition = false) {\n        this._isUserControllingOffset = false;\n        this._focalOffsetEnd.set(x, y, z);\n        this._needsUpdate = true;\n        if (!enableTransition)\n            this._focalOffset.copy(this._focalOffsetEnd);\n        const resolveImmediately = !enableTransition ||\n            approxEquals(this._focalOffset.x, this._focalOffsetEnd.x, this.restThreshold) &&\n                approxEquals(this._focalOffset.y, this._focalOffsetEnd.y, this.restThreshold) &&\n                approxEquals(this._focalOffset.z, this._focalOffsetEnd.z, this.restThreshold);\n        return this._createOnRestPromise(resolveImmediately);\n    }\n    /**\n     * Set orbit point without moving the camera.\n     * SHOULD NOT RUN DURING ANIMATIONS. `setOrbitPoint()` will immediately fix the positions.\n     * @param targetX\n     * @param targetY\n     * @param targetZ\n     * @category Methods\n     */\n    setOrbitPoint(targetX, targetY, targetZ) {\n        this._camera.updateMatrixWorld();\n        _xColumn.setFromMatrixColumn(this._camera.matrixWorldInverse, 0);\n        _yColumn.setFromMatrixColumn(this._camera.matrixWorldInverse, 1);\n        _zColumn.setFromMatrixColumn(this._camera.matrixWorldInverse, 2);\n        const position = _v3A.set(targetX, targetY, targetZ);\n        const distance = position.distanceTo(this._camera.position);\n        const cameraToPoint = position.sub(this._camera.position);\n        _xColumn.multiplyScalar(cameraToPoint.x);\n        _yColumn.multiplyScalar(cameraToPoint.y);\n        _zColumn.multiplyScalar(cameraToPoint.z);\n        _v3A.copy(_xColumn).add(_yColumn).add(_zColumn);\n        _v3A.z = _v3A.z + distance;\n        this.dollyTo(distance, false);\n        this.setFocalOffset(-_v3A.x, _v3A.y, -_v3A.z, false);\n        this.moveTo(targetX, targetY, targetZ, false);\n    }\n    /**\n     * Set the boundary box that encloses the target of the camera. box3 is in THREE.Box3\n     * @param box3\n     * @category Methods\n     */\n    setBoundary(box3) {\n        if (!box3) {\n            this._boundary.min.set(-Infinity, -Infinity, -Infinity);\n            this._boundary.max.set(Infinity, Infinity, Infinity);\n            this._needsUpdate = true;\n            return;\n        }\n        this._boundary.copy(box3);\n        this._boundary.clampPoint(this._targetEnd, this._targetEnd);\n        this._needsUpdate = true;\n    }\n    /**\n     * Set (or unset) the current viewport.\n     * Set this when you want to use renderer viewport and .dollyToCursor feature at the same time.\n     * @param viewportOrX\n     * @param y\n     * @param width\n     * @param height\n     * @category Methods\n     */\n    setViewport(viewportOrX, y, width, height) {\n        if (viewportOrX === null) { // null\n            this._viewport = null;\n            return;\n        }\n        this._viewport = this._viewport || new THREE.Vector4();\n        if (typeof viewportOrX === 'number') { // number\n            this._viewport.set(viewportOrX, y, width, height);\n        }\n        else { // Vector4\n            this._viewport.copy(viewportOrX);\n        }\n    }\n    /**\n     * Calculate the distance to fit the box.\n     * @param width box width\n     * @param height box height\n     * @param depth box depth\n     * @returns distance\n     * @category Methods\n     */\n    getDistanceToFitBox(width, height, depth, cover = false) {\n        if (notSupportedInOrthographicCamera(this._camera, 'getDistanceToFitBox'))\n            return this._spherical.radius;\n        const boundingRectAspect = width / height;\n        const fov = this._camera.getEffectiveFOV() * DEG2RAD;\n        const aspect = this._camera.aspect;\n        const heightToFit = (cover ? boundingRectAspect > aspect : boundingRectAspect < aspect) ? height : width / aspect;\n        return heightToFit * 0.5 / Math.tan(fov * 0.5) + depth * 0.5;\n    }\n    /**\n     * Calculate the distance to fit the sphere.\n     * @param radius sphere radius\n     * @returns distance\n     * @category Methods\n     */\n    getDistanceToFitSphere(radius) {\n        if (notSupportedInOrthographicCamera(this._camera, 'getDistanceToFitSphere'))\n            return this._spherical.radius;\n        // https://stackoverflow.com/a/44849975\n        const vFOV = this._camera.getEffectiveFOV() * DEG2RAD;\n        const hFOV = Math.atan(Math.tan(vFOV * 0.5) * this._camera.aspect) * 2;\n        const fov = 1 < this._camera.aspect ? vFOV : hFOV;\n        return radius / (Math.sin(fov * 0.5));\n    }\n    /**\n     * Returns its current gazing target, which is the center position of the orbit.\n     * @param out current gazing target\n     * @category Methods\n     */\n    getTarget(out) {\n        const _out = !!out && out.isVector3 ? out : new THREE.Vector3();\n        return _out.copy(this._targetEnd);\n    }\n    /**\n     * Returns its current position.\n     * @param out current position\n     * @category Methods\n     */\n    getPosition(out) {\n        const _out = !!out && out.isVector3 ? out : new THREE.Vector3();\n        return _out.setFromSpherical(this._sphericalEnd).applyQuaternion(this._yAxisUpSpaceInverse).add(this._targetEnd);\n    }\n    /**\n     * Returns its current focal offset, which is how much the camera appears to be translated in screen parallel coordinates.\n     * @param out current focal offset\n     * @category Methods\n     */\n    getFocalOffset(out) {\n        const _out = !!out && out.isVector3 ? out : new THREE.Vector3();\n        return _out.copy(this._focalOffsetEnd);\n    }\n    /**\n     * Normalize camera azimuth angle rotation between 0 and 360 degrees.\n     * @category Methods\n     */\n    normalizeRotations() {\n        this._sphericalEnd.theta = this._sphericalEnd.theta % PI_2;\n        if (this._sphericalEnd.theta < 0)\n            this._sphericalEnd.theta += PI_2;\n        this._spherical.theta += PI_2 * Math.round((this._sphericalEnd.theta - this._spherical.theta) / PI_2);\n    }\n    /**\n     * Reset all rotation and position to defaults.\n     * @param enableTransition\n     * @category Methods\n     */\n    reset(enableTransition = false) {\n        if (!approxEquals(this._camera.up.x, this._cameraUp0.x) ||\n            !approxEquals(this._camera.up.y, this._cameraUp0.y) ||\n            !approxEquals(this._camera.up.z, this._cameraUp0.z)) {\n            this._camera.up.copy(this._cameraUp0);\n            const position = this.getPosition(_v3A);\n            this.updateCameraUp();\n            this.setPosition(position.x, position.y, position.z);\n        }\n        const promises = [\n            this.setLookAt(this._position0.x, this._position0.y, this._position0.z, this._target0.x, this._target0.y, this._target0.z, enableTransition),\n            this.setFocalOffset(this._focalOffset0.x, this._focalOffset0.y, this._focalOffset0.z, enableTransition),\n            this.zoomTo(this._zoom0, enableTransition),\n        ];\n        return Promise.all(promises);\n    }\n    /**\n     * Set current camera position as the default position.\n     * @category Methods\n     */\n    saveState() {\n        this._cameraUp0.copy(this._camera.up);\n        this.getTarget(this._target0);\n        this.getPosition(this._position0);\n        this._zoom0 = this._zoom;\n        this._focalOffset0.copy(this._focalOffset);\n    }\n    /**\n     * Sync camera-up direction.\n     * When camera-up vector is changed, `.updateCameraUp()` must be called.\n     * @category Methods\n     */\n    updateCameraUp() {\n        this._yAxisUpSpace.setFromUnitVectors(this._camera.up, _AXIS_Y);\n        this._yAxisUpSpaceInverse.copy(this._yAxisUpSpace).invert();\n    }\n    /**\n     * Apply current camera-up direction to the camera.\n     * The orbit system will be re-initialized with the current position.\n     * @category Methods\n     */\n    applyCameraUp() {\n        const cameraDirection = _v3A.subVectors(this._target, this._camera.position).normalize();\n        // So first find the vector off to the side, orthogonal to both this.object.up and\n        // the \"view\" vector.\n        const side = _v3B.crossVectors(cameraDirection, this._camera.up).normalize();\n        // Then find the vector orthogonal to both this \"side\" vector and the \"view\" vector.\n        // This vector will be the new \"up\" vector.\n        this._camera.up.crossVectors(side, cameraDirection).normalize();\n        this._camera.updateMatrixWorld();\n        const position = this.getPosition(_v3A);\n        this.updateCameraUp();\n        this.setPosition(position.x, position.y, position.z);\n    }\n    /**\n     * Update camera position and directions.\n     * This should be called in your tick loop every time, and returns true if re-rendering is needed.\n     * @param delta\n     * @returns updated\n     * @category Methods\n     */\n    update(delta) {\n        const deltaTheta = this._sphericalEnd.theta - this._spherical.theta;\n        const deltaPhi = this._sphericalEnd.phi - this._spherical.phi;\n        const deltaRadius = this._sphericalEnd.radius - this._spherical.radius;\n        const deltaTarget = _deltaTarget.subVectors(this._targetEnd, this._target);\n        const deltaOffset = _deltaOffset.subVectors(this._focalOffsetEnd, this._focalOffset);\n        const deltaZoom = this._zoomEnd - this._zoom;\n        // update theta\n        if (approxZero(deltaTheta)) {\n            this._thetaVelocity.value = 0;\n            this._spherical.theta = this._sphericalEnd.theta;\n        }\n        else {\n            const smoothTime = this._isUserControllingRotate ? this.draggingSmoothTime : this.smoothTime;\n            this._spherical.theta = smoothDamp(this._spherical.theta, this._sphericalEnd.theta, this._thetaVelocity, smoothTime, Infinity, delta);\n            this._needsUpdate = true;\n        }\n        // update phi\n        if (approxZero(deltaPhi)) {\n            this._phiVelocity.value = 0;\n            this._spherical.phi = this._sphericalEnd.phi;\n        }\n        else {\n            const smoothTime = this._isUserControllingRotate ? this.draggingSmoothTime : this.smoothTime;\n            this._spherical.phi = smoothDamp(this._spherical.phi, this._sphericalEnd.phi, this._phiVelocity, smoothTime, Infinity, delta);\n            this._needsUpdate = true;\n        }\n        // update distance\n        if (approxZero(deltaRadius)) {\n            this._radiusVelocity.value = 0;\n            this._spherical.radius = this._sphericalEnd.radius;\n        }\n        else {\n            const smoothTime = this._isUserControllingDolly ? this.draggingSmoothTime : this.smoothTime;\n            this._spherical.radius = smoothDamp(this._spherical.radius, this._sphericalEnd.radius, this._radiusVelocity, smoothTime, this.maxSpeed, delta);\n            this._needsUpdate = true;\n        }\n        // update target position\n        if (approxZero(deltaTarget.x) && approxZero(deltaTarget.y) && approxZero(deltaTarget.z)) {\n            this._targetVelocity.set(0, 0, 0);\n            this._target.copy(this._targetEnd);\n        }\n        else {\n            const smoothTime = this._isUserControllingTruck ? this.draggingSmoothTime : this.smoothTime;\n            smoothDampVec3(this._target, this._targetEnd, this._targetVelocity, smoothTime, this.maxSpeed, delta, this._target);\n            this._needsUpdate = true;\n        }\n        // update focalOffset\n        if (approxZero(deltaOffset.x) && approxZero(deltaOffset.y) && approxZero(deltaOffset.z)) {\n            this._focalOffsetVelocity.set(0, 0, 0);\n            this._focalOffset.copy(this._focalOffsetEnd);\n        }\n        else {\n            const smoothTime = this._isUserControllingOffset ? this.draggingSmoothTime : this.smoothTime;\n            smoothDampVec3(this._focalOffset, this._focalOffsetEnd, this._focalOffsetVelocity, smoothTime, this.maxSpeed, delta, this._focalOffset);\n            this._needsUpdate = true;\n        }\n        if (this._dollyControlAmount !== 0) {\n            if (isPerspectiveCamera(this._camera)) {\n                const camera = this._camera;\n                const cameraDirection = _v3A.setFromSpherical(this._spherical).applyQuaternion(this._yAxisUpSpaceInverse).normalize().negate();\n                const planeX = _v3B.copy(cameraDirection).cross(camera.up).normalize();\n                if (planeX.lengthSq() === 0)\n                    planeX.x = 1.0;\n                const planeY = _v3C.crossVectors(planeX, cameraDirection);\n                const worldToScreen = this._sphericalEnd.radius * Math.tan(camera.getEffectiveFOV() * DEG2RAD * 0.5);\n                const prevRadius = this._sphericalEnd.radius - this._dollyControlAmount;\n                const lerpRatio = (prevRadius - this._sphericalEnd.radius) / this._sphericalEnd.radius;\n                const cursor = _v3A.copy(this._targetEnd)\n                    .add(planeX.multiplyScalar(this._dollyControlCoord.x * worldToScreen * camera.aspect))\n                    .add(planeY.multiplyScalar(this._dollyControlCoord.y * worldToScreen));\n                this._targetEnd.lerp(cursor, lerpRatio);\n            }\n            else if (isOrthographicCamera(this._camera)) {\n                const camera = this._camera;\n                const worldCursorPosition = _v3A.set(this._dollyControlCoord.x, this._dollyControlCoord.y, (camera.near + camera.far) / (camera.near - camera.far)).unproject(camera); //.sub( _v3B.set( this._focalOffset.x, this._focalOffset.y, 0 ) );\n                const quaternion = _v3B.set(0, 0, -1).applyQuaternion(camera.quaternion);\n                const cursor = _v3C.copy(worldCursorPosition).add(quaternion.multiplyScalar(-worldCursorPosition.dot(camera.up)));\n                const prevZoom = this._zoom - this._dollyControlAmount;\n                const lerpRatio = -(prevZoom - this._zoomEnd) / this._zoom;\n                // find the \"distance\" (aka plane constant in three.js) of Plane\n                // from a given position (this._targetEnd) and normal vector (cameraDirection)\n                // https://www.maplesoft.com/support/help/maple/view.aspx?path=MathApps%2FEquationOfAPlaneNormal#bkmrk0\n                const cameraDirection = _v3A.setFromSpherical(this._spherical).applyQuaternion(this._yAxisUpSpaceInverse).normalize().negate();\n                const prevPlaneConstant = this._targetEnd.dot(cameraDirection);\n                this._targetEnd.lerp(cursor, lerpRatio);\n                const newPlaneConstant = this._targetEnd.dot(cameraDirection);\n                // Pull back the camera depth that has moved, to be the camera stationary as zoom\n                const pullBack = cameraDirection.multiplyScalar(newPlaneConstant - prevPlaneConstant);\n                this._targetEnd.sub(pullBack);\n            }\n            this._target.copy(this._targetEnd);\n            // target position may be moved beyond boundary.\n            this._boundary.clampPoint(this._targetEnd, this._targetEnd);\n            this._dollyControlAmount = 0;\n        }\n        // update zoom\n        if (approxZero(deltaZoom)) {\n            this._zoomVelocity.value = 0;\n            this._zoom = this._zoomEnd;\n        }\n        else {\n            const smoothTime = this._isUserControllingZoom ? this.draggingSmoothTime : this.smoothTime;\n            this._zoom = smoothDamp(this._zoom, this._zoomEnd, this._zoomVelocity, smoothTime, Infinity, delta);\n        }\n        if (this._camera.zoom !== this._zoom) {\n            this._camera.zoom = this._zoom;\n            this._camera.updateProjectionMatrix();\n            this._updateNearPlaneCorners();\n            this._needsUpdate = true;\n        }\n        // collision detection\n        const maxDistance = this._collisionTest();\n        this._spherical.radius = Math.min(this._spherical.radius, maxDistance);\n        // decompose spherical to the camera position\n        this._spherical.makeSafe();\n        this._camera.position.setFromSpherical(this._spherical).applyQuaternion(this._yAxisUpSpaceInverse).add(this._target);\n        this._camera.lookAt(this._target);\n        // set offset after the orbit movement\n        const affectOffset = !approxZero(this._focalOffset.x) ||\n            !approxZero(this._focalOffset.y) ||\n            !approxZero(this._focalOffset.z);\n        if (affectOffset) {\n            this._camera.updateMatrixWorld();\n            _xColumn.setFromMatrixColumn(this._camera.matrix, 0);\n            _yColumn.setFromMatrixColumn(this._camera.matrix, 1);\n            _zColumn.setFromMatrixColumn(this._camera.matrix, 2);\n            _xColumn.multiplyScalar(this._focalOffset.x);\n            _yColumn.multiplyScalar(-this._focalOffset.y);\n            _zColumn.multiplyScalar(this._focalOffset.z); // notice: z-offset will not affect in Orthographic.\n            _v3A.copy(_xColumn).add(_yColumn).add(_zColumn);\n            this._camera.position.add(_v3A);\n        }\n        if (this._boundaryEnclosesCamera) {\n            this._encloseToBoundary(this._camera.position.copy(this._target), _v3A.setFromSpherical(this._spherical).applyQuaternion(this._yAxisUpSpaceInverse), 1.0);\n        }\n        const updated = this._needsUpdate;\n        if (updated && !this._updatedLastTime) {\n            this._hasRested = false;\n            this.dispatchEvent({ type: 'wake' });\n            this.dispatchEvent({ type: 'update' });\n        }\n        else if (updated) {\n            this.dispatchEvent({ type: 'update' });\n            if (approxZero(deltaTheta, this.restThreshold) &&\n                approxZero(deltaPhi, this.restThreshold) &&\n                approxZero(deltaRadius, this.restThreshold) &&\n                approxZero(deltaTarget.x, this.restThreshold) &&\n                approxZero(deltaTarget.y, this.restThreshold) &&\n                approxZero(deltaTarget.z, this.restThreshold) &&\n                approxZero(deltaOffset.x, this.restThreshold) &&\n                approxZero(deltaOffset.y, this.restThreshold) &&\n                approxZero(deltaOffset.z, this.restThreshold) &&\n                approxZero(deltaZoom, this.restThreshold) &&\n                !this._hasRested) {\n                this._hasRested = true;\n                this.dispatchEvent({ type: 'rest' });\n            }\n        }\n        else if (!updated && this._updatedLastTime) {\n            this.dispatchEvent({ type: 'sleep' });\n        }\n        this._updatedLastTime = updated;\n        this._needsUpdate = false;\n        return updated;\n    }\n    /**\n     * Get all state in JSON string\n     * @category Methods\n     */\n    toJSON() {\n        return JSON.stringify({\n            enabled: this._enabled,\n            minDistance: this.minDistance,\n            maxDistance: infinityToMaxNumber(this.maxDistance),\n            minZoom: this.minZoom,\n            maxZoom: infinityToMaxNumber(this.maxZoom),\n            minPolarAngle: this.minPolarAngle,\n            maxPolarAngle: infinityToMaxNumber(this.maxPolarAngle),\n            minAzimuthAngle: infinityToMaxNumber(this.minAzimuthAngle),\n            maxAzimuthAngle: infinityToMaxNumber(this.maxAzimuthAngle),\n            smoothTime: this.smoothTime,\n            draggingSmoothTime: this.draggingSmoothTime,\n            dollySpeed: this.dollySpeed,\n            truckSpeed: this.truckSpeed,\n            dollyToCursor: this.dollyToCursor,\n            verticalDragToForward: this.verticalDragToForward,\n            target: this._targetEnd.toArray(),\n            position: _v3A.setFromSpherical(this._sphericalEnd).add(this._targetEnd).toArray(),\n            zoom: this._zoomEnd,\n            focalOffset: this._focalOffsetEnd.toArray(),\n            target0: this._target0.toArray(),\n            position0: this._position0.toArray(),\n            zoom0: this._zoom0,\n            focalOffset0: this._focalOffset0.toArray(),\n        });\n    }\n    /**\n     * Reproduce the control state with JSON. enableTransition is where anim or not in a boolean.\n     * @param json\n     * @param enableTransition\n     * @category Methods\n     */\n    fromJSON(json, enableTransition = false) {\n        const obj = JSON.parse(json);\n        this.enabled = obj.enabled;\n        this.minDistance = obj.minDistance;\n        this.maxDistance = maxNumberToInfinity(obj.maxDistance);\n        this.minZoom = obj.minZoom;\n        this.maxZoom = maxNumberToInfinity(obj.maxZoom);\n        this.minPolarAngle = obj.minPolarAngle;\n        this.maxPolarAngle = maxNumberToInfinity(obj.maxPolarAngle);\n        this.minAzimuthAngle = maxNumberToInfinity(obj.minAzimuthAngle);\n        this.maxAzimuthAngle = maxNumberToInfinity(obj.maxAzimuthAngle);\n        this.smoothTime = obj.smoothTime;\n        this.draggingSmoothTime = obj.draggingSmoothTime;\n        this.dollySpeed = obj.dollySpeed;\n        this.truckSpeed = obj.truckSpeed;\n        this.dollyToCursor = obj.dollyToCursor;\n        this.verticalDragToForward = obj.verticalDragToForward;\n        this._target0.fromArray(obj.target0);\n        this._position0.fromArray(obj.position0);\n        this._zoom0 = obj.zoom0;\n        this._focalOffset0.fromArray(obj.focalOffset0);\n        this.moveTo(obj.target[0], obj.target[1], obj.target[2], enableTransition);\n        _sphericalA.setFromVector3(_v3A.fromArray(obj.position).sub(this._targetEnd).applyQuaternion(this._yAxisUpSpace));\n        this.rotateTo(_sphericalA.theta, _sphericalA.phi, enableTransition);\n        this.dollyTo(_sphericalA.radius, enableTransition);\n        this.zoomTo(obj.zoom, enableTransition);\n        this.setFocalOffset(obj.focalOffset[0], obj.focalOffset[1], obj.focalOffset[2], enableTransition);\n        this._needsUpdate = true;\n    }\n    /**\n     * Attach all internal event handlers to enable drag control.\n     * @category Methods\n     */\n    connect(domElement) {\n        if (this._domElement) {\n            console.warn('camera-controls is already connected.');\n            return;\n        }\n        domElement.setAttribute('data-camera-controls-version', VERSION);\n        this._addAllEventListeners(domElement);\n    }\n    /**\n     * Detach all internal event handlers to disable drag control.\n     */\n    disconnect() {\n        this.cancel();\n        this._removeAllEventListeners();\n        if (this._domElement) {\n            this._domElement.removeAttribute('data-camera-controls-version');\n            this._domElement = undefined;\n        }\n    }\n    /**\n     * Dispose the cameraControls instance itself, remove all eventListeners.\n     * @category Methods\n     */\n    dispose() {\n        // remove all user event listeners\n        this.removeAllEventListeners();\n        // remove all internal event listeners\n        this.disconnect();\n    }\n    _findPointerById(pointerId) {\n        return this._activePointers.find((activePointer) => activePointer.pointerId === pointerId);\n    }\n    _findPointerByMouseButton(mouseButton) {\n        return this._activePointers.find((activePointer) => activePointer.mouseButton === mouseButton);\n    }\n    _disposePointer(pointer) {\n        this._activePointers.splice(this._activePointers.indexOf(pointer), 1);\n    }\n    _encloseToBoundary(position, offset, friction) {\n        const offsetLength2 = offset.lengthSq();\n        if (offsetLength2 === 0.0) { // sanity check\n            return position;\n        }\n        // See: https://twitter.com/FMS_Cat/status/1106508958640988161\n        const newTarget = _v3B.copy(offset).add(position); // target\n        const clampedTarget = this._boundary.clampPoint(newTarget, _v3C); // clamped target\n        const deltaClampedTarget = clampedTarget.sub(newTarget); // newTarget -> clampedTarget\n        const deltaClampedTargetLength2 = deltaClampedTarget.lengthSq(); // squared length of deltaClampedTarget\n        if (deltaClampedTargetLength2 === 0.0) { // when the position doesn't have to be clamped\n            return position.add(offset);\n        }\n        else if (deltaClampedTargetLength2 === offsetLength2) { // when the position is completely stuck\n            return position;\n        }\n        else if (friction === 0.0) {\n            return position.add(offset).add(deltaClampedTarget);\n        }\n        else {\n            const offsetFactor = 1.0 + friction * deltaClampedTargetLength2 / offset.dot(deltaClampedTarget);\n            return position\n                .add(_v3B.copy(offset).multiplyScalar(offsetFactor))\n                .add(deltaClampedTarget.multiplyScalar(1.0 - friction));\n        }\n    }\n    _updateNearPlaneCorners() {\n        if (isPerspectiveCamera(this._camera)) {\n            const camera = this._camera;\n            const near = camera.near;\n            const fov = camera.getEffectiveFOV() * DEG2RAD;\n            const heightHalf = Math.tan(fov * 0.5) * near; // near plain half height\n            const widthHalf = heightHalf * camera.aspect; // near plain half width\n            this._nearPlaneCorners[0].set(-widthHalf, -heightHalf, 0);\n            this._nearPlaneCorners[1].set(widthHalf, -heightHalf, 0);\n            this._nearPlaneCorners[2].set(widthHalf, heightHalf, 0);\n            this._nearPlaneCorners[3].set(-widthHalf, heightHalf, 0);\n        }\n        else if (isOrthographicCamera(this._camera)) {\n            const camera = this._camera;\n            const zoomInv = 1 / camera.zoom;\n            const left = camera.left * zoomInv;\n            const right = camera.right * zoomInv;\n            const top = camera.top * zoomInv;\n            const bottom = camera.bottom * zoomInv;\n            this._nearPlaneCorners[0].set(left, top, 0);\n            this._nearPlaneCorners[1].set(right, top, 0);\n            this._nearPlaneCorners[2].set(right, bottom, 0);\n            this._nearPlaneCorners[3].set(left, bottom, 0);\n        }\n    }\n    // lateUpdate\n    _collisionTest() {\n        let distance = Infinity;\n        const hasCollider = this.colliderMeshes.length >= 1;\n        if (!hasCollider)\n            return distance;\n        if (notSupportedInOrthographicCamera(this._camera, '_collisionTest'))\n            return distance;\n        // divide by distance to normalize, lighter than `Vector3.prototype.normalize()`\n        const direction = _v3A.setFromSpherical(this._spherical).divideScalar(this._spherical.radius);\n        _rotationMatrix.lookAt(_ORIGIN, direction, this._camera.up);\n        for (let i = 0; i < 4; i++) {\n            const nearPlaneCorner = _v3B.copy(this._nearPlaneCorners[i]);\n            nearPlaneCorner.applyMatrix4(_rotationMatrix);\n            const origin = _v3C.addVectors(this._target, nearPlaneCorner);\n            _raycaster.set(origin, direction);\n            _raycaster.far = this._spherical.radius + 1;\n            const intersects = _raycaster.intersectObjects(this.colliderMeshes);\n            if (intersects.length !== 0 && intersects[0].distance < distance) {\n                distance = intersects[0].distance;\n            }\n        }\n        return distance;\n    }\n    /**\n     * Get its client rect and package into given `DOMRect` .\n     */\n    _getClientRect(target) {\n        if (!this._domElement)\n            return;\n        const rect = this._domElement.getBoundingClientRect();\n        target.x = rect.left;\n        target.y = rect.top;\n        if (this._viewport) {\n            target.x += this._viewport.x;\n            target.y += rect.height - this._viewport.w - this._viewport.y;\n            target.width = this._viewport.z;\n            target.height = this._viewport.w;\n        }\n        else {\n            target.width = rect.width;\n            target.height = rect.height;\n        }\n        return target;\n    }\n    _createOnRestPromise(resolveImmediately) {\n        if (resolveImmediately)\n            return Promise.resolve();\n        this._hasRested = false;\n        this.dispatchEvent({ type: 'transitionstart' });\n        return new Promise((resolve) => {\n            const onResolve = () => {\n                this.removeEventListener('rest', onResolve);\n                resolve();\n            };\n            this.addEventListener('rest', onResolve);\n        });\n    }\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    _addAllEventListeners(_domElement) { }\n    _removeAllEventListeners() { }\n    /**\n     * backward compatible\n     * @deprecated use smoothTime (in seconds) instead\n     * @category Properties\n     */\n    get dampingFactor() {\n        console.warn('.dampingFactor has been deprecated. use smoothTime (in seconds) instead.');\n        return 0;\n    }\n    /**\n     * backward compatible\n     * @deprecated use smoothTime (in seconds) instead\n     * @category Properties\n     */\n    set dampingFactor(_) {\n        console.warn('.dampingFactor has been deprecated. use smoothTime (in seconds) instead.');\n    }\n    /**\n     * backward compatible\n     * @deprecated use draggingSmoothTime (in seconds) instead\n     * @category Properties\n     */\n    get draggingDampingFactor() {\n        console.warn('.draggingDampingFactor has been deprecated. use draggingSmoothTime (in seconds) instead.');\n        return 0;\n    }\n    /**\n     * backward compatible\n     * @deprecated use draggingSmoothTime (in seconds) instead\n     * @category Properties\n     */\n    set draggingDampingFactor(_) {\n        console.warn('.draggingDampingFactor has been deprecated. use draggingSmoothTime (in seconds) instead.');\n    }\n    static createBoundingSphere(object3d, out = new THREE.Sphere()) {\n        const boundingSphere = out;\n        const center = boundingSphere.center;\n        _box3A.makeEmpty();\n        // find the center\n        object3d.traverseVisible((object) => {\n            if (!object.isMesh)\n                return;\n            _box3A.expandByObject(object);\n        });\n        _box3A.getCenter(center);\n        // find the radius\n        let maxRadiusSq = 0;\n        object3d.traverseVisible((object) => {\n            if (!object.isMesh)\n                return;\n            const mesh = object;\n            const geometry = mesh.geometry.clone();\n            geometry.applyMatrix4(mesh.matrixWorld);\n            const bufferGeometry = geometry;\n            const position = bufferGeometry.attributes.position;\n            for (let i = 0, l = position.count; i < l; i++) {\n                _v3A.fromBufferAttribute(position, i);\n                maxRadiusSq = Math.max(maxRadiusSq, center.distanceToSquared(_v3A));\n            }\n        });\n        boundingSphere.radius = Math.sqrt(maxRadiusSq);\n        return boundingSphere;\n    }\n}\n\nexport { CameraControls as default };\n"],"mappings":";;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAMA,YAAY,GAAG;EACjBC,IAAI,EAAE,CADW;EAEjBC,KAAK,EAAE,CAFU;EAGjBC,MAAM,EAAE;AAHS,CAArB;AAKA,IAAMC,MAAM,GAAGC,MAAM,CAACC,MAAP,CAAc;EACzBC,IAAI,EAAE,CADmB;EAEzBC,MAAM,EAAE,CAFiB;EAGzBC,KAAK,EAAE,CAHkB;EAIzBC,MAAM,EAAE,CAJiB;EAKzBC,KAAK,EAAE,CALkB;EAMzBC,IAAI,EAAE,EANmB;EAOzBC,YAAY,EAAE,EAPW;EAQzBC,WAAW,EAAE,EARY;EASzBC,YAAY,EAAE,GATW;EAUzBC,WAAW,EAAE,GAVY;EAWzBC,UAAU,EAAE,GAXa;EAYzBC,iBAAiB,EAAE,IAZM;EAazBC,kBAAkB,EAAE,IAbK;EAczBC,kBAAkB,EAAE,IAdK;EAezBC,gBAAgB,EAAE,IAfO;EAgBzBC,iBAAiB,EAAE,KAhBM;EAiBzBC,iBAAiB,EAAE;AAjBM,CAAd,CAAf;;AAmBA,SAASC,mBAAT,CAA6BC,MAA7B,EAAqC;EACjC,OAAOA,MAAM,CAACD,mBAAd;AACH;;AACD,SAASE,oBAAT,CAA8BD,MAA9B,EAAsC;EAClC,OAAOA,MAAM,CAACC,oBAAd;AACH;;AAED,IAAMC,IAAI,GAAGC,IAAI,CAACC,EAAL,GAAU,CAAvB;AACA,IAAMC,OAAO,GAAGF,IAAI,CAACC,EAAL,GAAU,CAA1B;AAEA,IAAME,OAAO,GAAG,IAAhB;AACA,IAAMC,OAAO,GAAGJ,IAAI,CAACC,EAAL,GAAU,GAA1B;;AACA,SAASI,KAAT,CAAeC,KAAf,EAAsBC,GAAtB,EAA2BC,GAA3B,EAAgC;EAC5B,OAAOR,IAAI,CAACQ,GAAL,CAASD,GAAT,EAAcP,IAAI,CAACO,GAAL,CAASC,GAAT,EAAcF,KAAd,CAAd,CAAP;AACH;;AACD,SAASG,UAAT,CAAoBC,MAApB,EAA6C;EAAA,IAAjBC,KAAiB,uEAATR,OAAS;EACzC,OAAOH,IAAI,CAACY,GAAL,CAASF,MAAT,IAAmBC,KAA1B;AACH;;AACD,SAASE,YAAT,CAAsBC,CAAtB,EAAyBC,CAAzB,EAA6C;EAAA,IAAjBJ,KAAiB,uEAATR,OAAS;EACzC,OAAOM,UAAU,CAACK,CAAC,GAAGC,CAAL,EAAQJ,KAAR,CAAjB;AACH;;AACD,SAASK,WAAT,CAAqBV,KAArB,EAA4BW,IAA5B,EAAkC;EAC9B,OAAOjB,IAAI,CAACkB,KAAL,CAAWZ,KAAK,GAAGW,IAAnB,IAA2BA,IAAlC;AACH;;AACD,SAASE,mBAAT,CAA6Bb,KAA7B,EAAoC;EAChC,IAAIc,QAAQ,CAACd,KAAD,CAAZ,EACI,OAAOA,KAAP;EACJ,IAAIA,KAAK,GAAG,CAAZ,EACI,OAAO,CAACe,MAAM,CAACC,SAAf;EACJ,OAAOD,MAAM,CAACC,SAAd;AACH;;AACD,SAASC,mBAAT,CAA6BjB,KAA7B,EAAoC;EAChC,IAAIN,IAAI,CAACY,GAAL,CAASN,KAAT,IAAkBe,MAAM,CAACC,SAA7B,EACI,OAAOhB,KAAP;EACJ,OAAOA,KAAK,GAAGkB,QAAf;AACH,C,CACD;AACA;;;AACA,SAASC,UAAT,CAAoBC,OAApB,EAA6BC,MAA7B,EAAqCC,kBAArC,EAAyDC,UAAzD,EAAqG;EAAA,IAAhCC,QAAgC,uEAArBN,QAAqB;EAAA,IAAXO,SAAW;EACjG;EACAF,UAAU,GAAG7B,IAAI,CAACQ,GAAL,CAAS,MAAT,EAAiBqB,UAAjB,CAAb;EACA,IAAMG,KAAK,GAAG,IAAIH,UAAlB;EACA,IAAMI,CAAC,GAAGD,KAAK,GAAGD,SAAlB;EACA,IAAMG,GAAG,GAAG,KAAK,IAAID,CAAJ,GAAQ,OAAOA,CAAP,GAAWA,CAAnB,GAAuB,QAAQA,CAAR,GAAYA,CAAZ,GAAgBA,CAA5C,CAAZ;EACA,IAAIE,MAAM,GAAGT,OAAO,GAAGC,MAAvB;EACA,IAAMS,UAAU,GAAGT,MAAnB,CAPiG,CAQjG;;EACA,IAAMU,SAAS,GAAGP,QAAQ,GAAGD,UAA7B;EACAM,MAAM,GAAG9B,KAAK,CAAC8B,MAAD,EAAS,CAACE,SAAV,EAAqBA,SAArB,CAAd;EACAV,MAAM,GAAGD,OAAO,GAAGS,MAAnB;EACA,IAAMG,IAAI,GAAG,CAACV,kBAAkB,CAACtB,KAAnB,GAA2B0B,KAAK,GAAGG,MAApC,IAA8CJ,SAA3D;EACAH,kBAAkB,CAACtB,KAAnB,GAA2B,CAACsB,kBAAkB,CAACtB,KAAnB,GAA2B0B,KAAK,GAAGM,IAApC,IAA4CJ,GAAvE;EACA,IAAIK,MAAM,GAAGZ,MAAM,GAAG,CAACQ,MAAM,GAAGG,IAAV,IAAkBJ,GAAxC,CAdiG,CAejG;;EACA,IAAIE,UAAU,GAAGV,OAAb,GAAuB,GAAvB,KAA+Ba,MAAM,GAAGH,UAA5C,EAAwD;IACpDG,MAAM,GAAGH,UAAT;IACAR,kBAAkB,CAACtB,KAAnB,GAA2B,CAACiC,MAAM,GAAGH,UAAV,IAAwBL,SAAnD;EACH;;EACD,OAAOQ,MAAP;AACH,C,CACD;AACA;;;AACA,SAASC,cAAT,CAAwBd,OAAxB,EAAiCC,MAAjC,EAAyCC,kBAAzC,EAA6DC,UAA7D,EAA8G;EAAA,IAArCC,QAAqC,uEAA1BN,QAA0B;EAAA,IAAhBO,SAAgB;EAAA,IAALU,GAAK;EAC1G;EACAZ,UAAU,GAAG7B,IAAI,CAACQ,GAAL,CAAS,MAAT,EAAiBqB,UAAjB,CAAb;EACA,IAAMG,KAAK,GAAG,IAAIH,UAAlB;EACA,IAAMI,CAAC,GAAGD,KAAK,GAAGD,SAAlB;EACA,IAAMG,GAAG,GAAG,KAAK,IAAID,CAAJ,GAAQ,OAAOA,CAAP,GAAWA,CAAnB,GAAuB,QAAQA,CAAR,GAAYA,CAAZ,GAAgBA,CAA5C,CAAZ;EACA,IAAIS,OAAO,GAAGf,MAAM,CAACM,CAArB;EACA,IAAIU,OAAO,GAAGhB,MAAM,CAACiB,CAArB;EACA,IAAIC,OAAO,GAAGlB,MAAM,CAACmB,CAArB;EACA,IAAIC,OAAO,GAAGrB,OAAO,CAACO,CAAR,GAAYS,OAA1B;EACA,IAAIM,OAAO,GAAGtB,OAAO,CAACkB,CAAR,GAAYD,OAA1B;EACA,IAAIM,OAAO,GAAGvB,OAAO,CAACoB,CAAR,GAAYD,OAA1B;EACA,IAAMK,WAAW,GAAGR,OAApB;EACA,IAAMS,WAAW,GAAGR,OAApB;EACA,IAAMS,WAAW,GAAGP,OAApB,CAd0G,CAe1G;;EACA,IAAMR,SAAS,GAAGP,QAAQ,GAAGD,UAA7B;EACA,IAAMwB,WAAW,GAAGhB,SAAS,GAAGA,SAAhC;EACA,IAAMiB,WAAW,GAAGP,OAAO,GAAGA,OAAV,GAAoBC,OAAO,GAAGA,OAA9B,GAAwCC,OAAO,GAAGA,OAAtE;;EACA,IAAIK,WAAW,GAAGD,WAAlB,EAA+B;IAC3B,IAAME,SAAS,GAAGvD,IAAI,CAACwD,IAAL,CAAUF,WAAV,CAAlB;IACAP,OAAO,GAAGA,OAAO,GAAGQ,SAAV,GAAsBlB,SAAhC;IACAW,OAAO,GAAGA,OAAO,GAAGO,SAAV,GAAsBlB,SAAhC;IACAY,OAAO,GAAGA,OAAO,GAAGM,SAAV,GAAsBlB,SAAhC;EACH;;EACDK,OAAO,GAAGhB,OAAO,CAACO,CAAR,GAAYc,OAAtB;EACAJ,OAAO,GAAGjB,OAAO,CAACkB,CAAR,GAAYI,OAAtB;EACAH,OAAO,GAAGnB,OAAO,CAACoB,CAAR,GAAYG,OAAtB;EACA,IAAMQ,KAAK,GAAG,CAAC7B,kBAAkB,CAACK,CAAnB,GAAuBD,KAAK,GAAGe,OAAhC,IAA2ChB,SAAzD;EACA,IAAM2B,KAAK,GAAG,CAAC9B,kBAAkB,CAACgB,CAAnB,GAAuBZ,KAAK,GAAGgB,OAAhC,IAA2CjB,SAAzD;EACA,IAAM4B,KAAK,GAAG,CAAC/B,kBAAkB,CAACkB,CAAnB,GAAuBd,KAAK,GAAGiB,OAAhC,IAA2ClB,SAAzD;EACAH,kBAAkB,CAACK,CAAnB,GAAuB,CAACL,kBAAkB,CAACK,CAAnB,GAAuBD,KAAK,GAAGyB,KAAhC,IAAyCvB,GAAhE;EACAN,kBAAkB,CAACgB,CAAnB,GAAuB,CAAChB,kBAAkB,CAACgB,CAAnB,GAAuBZ,KAAK,GAAG0B,KAAhC,IAAyCxB,GAAhE;EACAN,kBAAkB,CAACkB,CAAnB,GAAuB,CAAClB,kBAAkB,CAACkB,CAAnB,GAAuBd,KAAK,GAAG2B,KAAhC,IAAyCzB,GAAhE;EACAO,GAAG,CAACR,CAAJ,GAAQS,OAAO,GAAG,CAACK,OAAO,GAAGU,KAAX,IAAoBvB,GAAtC;EACAO,GAAG,CAACG,CAAJ,GAAQD,OAAO,GAAG,CAACK,OAAO,GAAGU,KAAX,IAAoBxB,GAAtC;EACAO,GAAG,CAACK,CAAJ,GAAQD,OAAO,GAAG,CAACI,OAAO,GAAGU,KAAX,IAAoBzB,GAAtC,CApC0G,CAqC1G;;EACA,IAAM0B,iBAAiB,GAAGV,WAAW,GAAGxB,OAAO,CAACO,CAAhD;EACA,IAAM4B,iBAAiB,GAAGV,WAAW,GAAGzB,OAAO,CAACkB,CAAhD;EACA,IAAMkB,iBAAiB,GAAGV,WAAW,GAAG1B,OAAO,CAACoB,CAAhD;EACA,IAAMiB,aAAa,GAAGtB,GAAG,CAACR,CAAJ,GAAQiB,WAA9B;EACA,IAAMc,aAAa,GAAGvB,GAAG,CAACG,CAAJ,GAAQO,WAA9B;EACA,IAAMc,aAAa,GAAGxB,GAAG,CAACK,CAAJ,GAAQM,WAA9B;;EACA,IAAIQ,iBAAiB,GAAGG,aAApB,GAAoCF,iBAAiB,GAAGG,aAAxD,GAAwEF,iBAAiB,GAAGG,aAA5F,GAA4G,CAAhH,EAAmH;IAC/GxB,GAAG,CAACR,CAAJ,GAAQiB,WAAR;IACAT,GAAG,CAACG,CAAJ,GAAQO,WAAR;IACAV,GAAG,CAACK,CAAJ,GAAQM,WAAR;IACAxB,kBAAkB,CAACK,CAAnB,GAAuB,CAACQ,GAAG,CAACR,CAAJ,GAAQiB,WAAT,IAAwBnB,SAA/C;IACAH,kBAAkB,CAACgB,CAAnB,GAAuB,CAACH,GAAG,CAACG,CAAJ,GAAQO,WAAT,IAAwBpB,SAA/C;IACAH,kBAAkB,CAACkB,CAAnB,GAAuB,CAACL,GAAG,CAACK,CAAJ,GAAQM,WAAT,IAAwBrB,SAA/C;EACH;;EACD,OAAOU,GAAP;AACH;;AAED,SAASyB,2BAAT,CAAqCC,QAArC,EAA+C1B,GAA/C,EAAoD;EAChDA,GAAG,CAAC2B,GAAJ,CAAQ,CAAR,EAAW,CAAX;EACAD,QAAQ,CAACE,OAAT,CAAiB,UAACC,OAAD,EAAa;IAC1B7B,GAAG,CAACR,CAAJ,IAASqC,OAAO,CAACC,OAAjB;IACA9B,GAAG,CAACG,CAAJ,IAAS0B,OAAO,CAACE,OAAjB;EACH,CAHD;EAIA/B,GAAG,CAACR,CAAJ,IAASkC,QAAQ,CAACM,MAAlB;EACAhC,GAAG,CAACG,CAAJ,IAASuB,QAAQ,CAACM,MAAlB;AACH;;AAED,SAASC,gCAAT,CAA0C7E,MAA1C,EAAkD8E,OAAlD,EAA2D;EACvD,IAAI7E,oBAAoB,CAACD,MAAD,CAAxB,EAAkC;IAC9B+E,OAAO,CAACC,IAAR,WAAgBF,OAAhB;IACA,OAAO,IAAP;EACH;;EACD,OAAO,KAAP;AACH;;IAEKG,e;EACF,2BAAc;IAAA;;IACV,KAAKC,UAAL,GAAkB,EAAlB;EACH;EACD;AACJ;AACA;AACA;AACA;AACA;;;;;WACI,0BAAiBC,IAAjB,EAAuBC,QAAvB,EAAiC;MAC7B,IAAMC,SAAS,GAAG,KAAKH,UAAvB;MACA,IAAIG,SAAS,CAACF,IAAD,CAAT,KAAoBG,SAAxB,EACID,SAAS,CAACF,IAAD,CAAT,GAAkB,EAAlB;MACJ,IAAIE,SAAS,CAACF,IAAD,CAAT,CAAgBI,OAAhB,CAAwBH,QAAxB,MAAsC,CAAC,CAA3C,EACIC,SAAS,CAACF,IAAD,CAAT,CAAgBK,IAAhB,CAAqBJ,QAArB;IACP;IACD;AACJ;AACA;AACA;AACA;AACA;;;;WACI,0BAAiBD,IAAjB,EAAuBC,QAAvB,EAAiC;MAC7B,IAAMC,SAAS,GAAG,KAAKH,UAAvB;MACA,OAAOG,SAAS,CAACF,IAAD,CAAT,KAAoBG,SAApB,IAAiCD,SAAS,CAACF,IAAD,CAAT,CAAgBI,OAAhB,CAAwBH,QAAxB,MAAsC,CAAC,CAA/E;IACH;IACD;AACJ;AACA;AACA;AACA;AACA;;;;WACI,6BAAoBD,IAApB,EAA0BC,QAA1B,EAAoC;MAChC,IAAMC,SAAS,GAAG,KAAKH,UAAvB;MACA,IAAMO,aAAa,GAAGJ,SAAS,CAACF,IAAD,CAA/B;;MACA,IAAIM,aAAa,KAAKH,SAAtB,EAAiC;QAC7B,IAAMI,KAAK,GAAGD,aAAa,CAACF,OAAd,CAAsBH,QAAtB,CAAd;QACA,IAAIM,KAAK,KAAK,CAAC,CAAf,EACID,aAAa,CAACE,MAAd,CAAqBD,KAArB,EAA4B,CAA5B;MACP;IACJ;IACD;AACJ;AACA;AACA;AACA;;;;WACI,iCAAwBP,IAAxB,EAA8B;MAC1B,IAAI,CAACA,IAAL,EAAW;QACP,KAAKD,UAAL,GAAkB,EAAlB;QACA;MACH;;MACD,IAAIU,KAAK,CAACC,OAAN,CAAc,KAAKX,UAAL,CAAgBC,IAAhB,CAAd,CAAJ,EACI,KAAKD,UAAL,CAAgBC,IAAhB,EAAsBP,MAAtB,GAA+B,CAA/B;IACP;IACD;AACJ;AACA;AACA;AACA;;;;WACI,uBAAckB,KAAd,EAAqB;MACjB,IAAMT,SAAS,GAAG,KAAKH,UAAvB;MACA,IAAMO,aAAa,GAAGJ,SAAS,CAACS,KAAK,CAACX,IAAP,CAA/B;;MACA,IAAIM,aAAa,KAAKH,SAAtB,EAAiC;QAC7BQ,KAAK,CAAChE,MAAN,GAAe,IAAf;QACA,IAAMiE,KAAK,GAAGN,aAAa,CAACO,KAAd,CAAoB,CAApB,CAAd;;QACA,KAAK,IAAIC,CAAC,GAAG,CAAR,EAAWC,CAAC,GAAGH,KAAK,CAACnB,MAA1B,EAAkCqB,CAAC,GAAGC,CAAtC,EAAyCD,CAAC,EAA1C,EAA8C;UAC1CF,KAAK,CAACE,CAAD,CAAL,CAASE,IAAT,CAAc,IAAd,EAAoBL,KAApB;QACH;MACJ;IACJ;;;;;;AAGL,IAAMM,OAAO,GAAG,OAAhB,C,CAAyB;;AACzB,IAAMC,kBAAkB,GAAG,IAAI,CAA/B;AACA,IAAMC,SAAS,GAAG,OAAOC,MAAP,KAAkB,WAApC;AACA,IAAMC,KAAK,GAAGF,SAAS,IAAI,MAAMG,IAAN,CAAWC,SAAS,CAACC,QAArB,CAA3B;AACA,IAAMC,2BAA2B,GAAG,EAAEN,SAAS,IAAI,kBAAkBC,MAAjC,CAApC,C,CAA8E;;AAC9E,IAAIM,KAAJ;;AACA,IAAIC,OAAJ;;AACA,IAAIC,OAAJ;;AACA,IAAIC,OAAJ;;AACA,IAAIC,GAAJ;;AACA,IAAIC,IAAJ;;AACA,IAAIC,IAAJ;;AACA,IAAIC,IAAJ;;AACA,IAAIC,QAAJ;;AACA,IAAIC,QAAJ;;AACA,IAAIC,QAAJ;;AACA,IAAIC,YAAJ;;AACA,IAAIC,YAAJ;;AACA,IAAIC,WAAJ;;AACA,IAAIC,WAAJ;;AACA,IAAIC,MAAJ;;AACA,IAAIC,MAAJ;;AACA,IAAIC,OAAJ;;AACA,IAAIC,YAAJ;;AACA,IAAIC,YAAJ;;AACA,IAAIC,eAAJ;;AACA,IAAIC,UAAJ;;IACMC,c;;;;;EAwEF;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACI,wBAAYnI,MAAZ,EAAoBoI,UAApB,EAAgC;IAAA;;IAAA;;IAC5B;IACA;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;IACQ,MAAKC,aAAL,GAAqB,CAArB,CAb4B,CAaJ;;IACxB;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;IACQ,MAAKC,aAAL,GAAqBnI,IAAI,CAACC,EAA1B,CAzB4B,CAyBE;;IAC9B;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;IACQ,MAAKmI,eAAL,GAAuB,CAAC5G,QAAxB,CArC4B,CAqCM;;IAClC;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;IACQ,MAAK6G,eAAL,GAAuB7G,QAAvB,CAjD4B,CAiDK;IACjC;;IACA;AACR;AACA;AACA;AACA;;IACQ,MAAK8G,WAAL,GAAmB,CAAnB;IACA;AACR;AACA;AACA;AACA;;IACQ,MAAKC,WAAL,GAAmB/G,QAAnB;IACA;AACR;AACA;AACA;AACA;;IACQ,MAAKgH,aAAL,GAAqB,KAArB;IACA;AACR;AACA;AACA;;IACQ,MAAKC,OAAL,GAAe,IAAf;IACA;AACR;AACA;AACA;;IACQ,MAAKC,OAAL,GAAelH,QAAf;IACA;AACR;AACA;AACA;;IACQ,MAAKK,UAAL,GAAkB,IAAlB;IACA;AACR;AACA;AACA;;IACQ,MAAK8G,kBAAL,GAA0B,KAA1B;IACA;AACR;AACA;AACA;;IACQ,MAAK7G,QAAL,GAAgBN,QAAhB;IACA;AACR;AACA;AACA;;IACQ,MAAKoH,kBAAL,GAA0B,GAA1B;IACA;AACR;AACA;AACA;;IACQ,MAAKC,gBAAL,GAAwB,GAAxB;IACA;AACR;AACA;AACA;;IACQ,MAAKC,UAAL,GAAkB,GAAlB;IACA;AACR;AACA;AACA;;IACQ,MAAKC,iBAAL,GAAyB,KAAzB;IACA;AACR;AACA;AACA;;IACQ,MAAKC,UAAL,GAAkB,GAAlB;IACA;AACR;AACA;AACA;;IACQ,MAAKC,aAAL,GAAqB,KAArB;IACA;AACR;AACA;;IACQ,MAAKC,YAAL,GAAoB,KAApB;IACA;AACR;AACA;AACA;;IACQ,MAAKC,qBAAL,GAA6B,KAA7B;IACA;AACR;AACA;AACA;;IACQ,MAAKC,gBAAL,GAAwB,GAAxB;IACA;AACR;AACA;AACA;;IACQ,MAAKC,aAAL,GAAqB,IAArB;IACA;AACR;AACA;AACA;AACA;;IACQ,MAAKC,cAAL,GAAsB,EAAtB;IACA;AACR;AACA;AACA;IACQ;;IACA,MAAKC,MAAL,GAAc,YAAM,CAAG,CAAvB;;IACA,MAAKC,QAAL,GAAgB,IAAhB;IACA,MAAKC,MAAL,GAAcjL,MAAM,CAACG,IAArB;IACA,MAAK+K,SAAL,GAAiB,IAAjB;IACA,MAAKC,mBAAL,GAA2B,CAA3B;IACA,MAAKC,UAAL,GAAkB,IAAlB;IACA,MAAKC,uBAAL,GAA+B,KAA/B;IACA,MAAKC,YAAL,GAAoB,IAApB;IACA,MAAKC,gBAAL,GAAwB,KAAxB;IACA,MAAKC,YAAL,GAAoB,IAAIC,OAAJ,EAApB;IACA,MAAKC,WAAL,GAAmB,KAAnB;IACA,MAAKC,eAAL,GAAuB,EAAvB;IACA,MAAKC,cAAL,GAAsB,IAAtB,CAtK4B,CAuK5B;IACA;IACA;;IACA,MAAKC,wBAAL,GAAgC,KAAhC;IACA,MAAKC,uBAAL,GAA+B,KAA/B;IACA,MAAKC,uBAAL,GAA+B,KAA/B;IACA,MAAKC,wBAAL,GAAgC,KAAhC;IACA,MAAKC,sBAAL,GAA8B,KAA9B,CA9K4B,CA+K5B;;IACA,MAAKC,cAAL,GAAsB;MAAEpK,KAAK,EAAE;IAAT,CAAtB;IACA,MAAKqK,YAAL,GAAoB;MAAErK,KAAK,EAAE;IAAT,CAApB;IACA,MAAKsK,eAAL,GAAuB;MAAEtK,KAAK,EAAE;IAAT,CAAvB;IACA,MAAKuK,eAAL,GAAuB,IAAInE,KAAK,CAACoE,OAAV,EAAvB;IACA,MAAKC,oBAAL,GAA4B,IAAIrE,KAAK,CAACoE,OAAV,EAA5B;IACA,MAAKE,aAAL,GAAqB;MAAE1K,KAAK,EAAE;IAAT,CAArB;;IACA,MAAK2K,cAAL,GAAsB,UAACC,MAAD,EAASC,MAAT,EAAiBjC,YAAjB,EAAkC;MACpD,IAAIkC,MAAJ;MACA,IAAIC,SAAJ;;MACA,IAAIzL,mBAAmB,CAAC,MAAK0L,OAAN,CAAvB,EAAuC;QACnC,IAAMC,MAAM,GAAGxE,IAAI,CAACyE,IAAL,CAAU,MAAKF,OAAL,CAAaG,QAAvB,EAAiCC,GAAjC,CAAqC,MAAKC,OAA1C,CAAf,CADmC,CAEnC;;;QACA,IAAMC,GAAG,GAAG,MAAKN,OAAL,CAAaO,eAAb,KAAiCzL,OAA7C;QACA,IAAM0L,cAAc,GAAGP,MAAM,CAAC9G,MAAP,KAAkBzE,IAAI,CAAC+L,GAAL,CAASH,GAAG,GAAG,GAAf,CAAzC;QACAR,MAAM,GAAI,MAAKpC,UAAL,GAAkBkC,MAAlB,GAA2BY,cAA3B,GAA4C,MAAK9B,YAAL,CAAkBgC,MAAxE;QACAX,SAAS,GAAI,MAAKrC,UAAL,GAAkBmC,MAAlB,GAA2BW,cAA3B,GAA4C,MAAK9B,YAAL,CAAkBgC,MAA3E;MACH,CAPD,MAQK,IAAIlM,oBAAoB,CAAC,MAAKwL,OAAN,CAAxB,EAAwC;QACzC,IAAMzL,OAAM,GAAG,MAAKyL,OAApB;QACAF,MAAM,GAAGF,MAAM,IAAIrL,OAAM,CAACoM,KAAP,GAAepM,OAAM,CAACqM,IAA1B,CAAN,GAAwCrM,OAAM,CAACsM,IAA/C,GAAsD,MAAKnC,YAAL,CAAkBoC,KAAjF;QACAf,SAAS,GAAGF,MAAM,IAAItL,OAAM,CAACwM,GAAP,GAAaxM,OAAM,CAACyM,MAAxB,CAAN,GAAwCzM,OAAM,CAACsM,IAA/C,GAAsD,MAAKnC,YAAL,CAAkBgC,MAApF;MACH,CAJI,MAKA;QACD;MACH;;MACD,IAAI,MAAK7C,qBAAT,EAAgC;QAC5BD,YAAY,GACR,MAAKqD,cAAL,CAAoB,MAAKC,eAAL,CAAqBvK,CAArB,GAAyBmJ,MAA7C,EAAqD,MAAKoB,eAAL,CAAqB5J,CAA1E,EAA6E,MAAK4J,eAAL,CAAqB1J,CAAlG,EAAqG,IAArG,CADQ,GAER,MAAK2J,KAAL,CAAWrB,MAAX,EAAmB,CAAnB,EAAsB,IAAtB,CAFJ;;QAGA,MAAKsB,OAAL,CAAa,CAACrB,SAAd,EAAyB,IAAzB;MACH,CALD,MAMK;QACDnC,YAAY,GACR,MAAKqD,cAAL,CAAoB,MAAKC,eAAL,CAAqBvK,CAArB,GAAyBmJ,MAA7C,EAAqD,MAAKoB,eAAL,CAAqB5J,CAArB,GAAyByI,SAA9E,EAAyF,MAAKmB,eAAL,CAAqB1J,CAA9G,EAAiH,IAAjH,CADQ,GAER,MAAK2J,KAAL,CAAWrB,MAAX,EAAmBC,SAAnB,EAA8B,IAA9B,CAFJ;MAGH;IACJ,CA9BD;;IA+BA,MAAKsB,eAAL,GAAuB,UAACzB,MAAD,EAASC,MAAT,EAAoB;MACvC,IAAMyB,KAAK,GAAG7M,IAAI,GAAG,MAAK6I,kBAAZ,GAAiCsC,MAAjC,GAA0C,MAAKlB,YAAL,CAAkBgC,MAA1E,CADuC,CAC2C;;MAClF,IAAMa,GAAG,GAAG9M,IAAI,GAAG,MAAK8I,gBAAZ,GAA+BsC,MAA/B,GAAwC,MAAKnB,YAAL,CAAkBgC,MAAtE;;MACA,MAAKc,MAAL,CAAYF,KAAZ,EAAmBC,GAAnB,EAAwB,IAAxB;IACH,CAJD;;IAKA,MAAKE,cAAL,GAAsB,UAACC,KAAD,EAAQ/K,CAAR,EAAWW,CAAX,EAAiB;MACnC,IAAMqK,UAAU,GAAGjN,IAAI,CAACkN,GAAL,CAAS,IAAT,EAAe,CAACF,KAAD,GAAS,MAAKlE,UAA7B,CAAnB;MACA,IAAMqE,QAAQ,GAAG,MAAKC,aAAL,CAAmBC,MAAnB,GAA4BJ,UAA7C;MACA,IAAMK,UAAU,GAAG,MAAKF,aAAL,CAAmBC,MAAtC;MACA,IAAME,gBAAgB,GAAGD,UAAU,IAAIN,KAAK,IAAI,CAAT,GAAa,CAAC,CAAd,GAAkB,CAAtB,CAAnC;;MACA,MAAKQ,OAAL,CAAaL,QAAb;;MACA,IAAI,MAAK3E,aAAL,KAAuB2E,QAAQ,GAAG,MAAK7E,WAAhB,IAA+B,MAAKC,WAAL,KAAqB,MAAKD,WAAhF,CAAJ,EAAkG;QAC9F,MAAKgD,OAAL,CAAamC,iBAAb,CAA+B1G,IAA/B;;QACA,MAAK2G,UAAL,CAAgBC,GAAhB,CAAoB5G,IAAI,CAAC6G,SAAL,GAAiBC,cAAjB,CAAgCN,gBAAhC,CAApB;;QACA,MAAK5B,OAAL,CAAagC,GAAb,CAAiB5G,IAAI,CAAC6G,SAAL,GAAiBC,cAAjB,CAAgCN,gBAAhC,CAAjB;MACH;;MACD,IAAI,MAAKtE,aAAT,EAAwB;QACpB,MAAKU,mBAAL,IAA4B,MAAKyD,aAAL,CAAmBC,MAAnB,GAA4BC,UAAxD;;QACA,IAAI,MAAK9E,aAAL,KAAuB2E,QAAQ,GAAG,MAAK7E,WAAhB,IAA+B,MAAKC,WAAL,KAAqB,MAAKD,WAAhF,CAAJ,EAAkG;UAC9F,MAAKqB,mBAAL,IAA4B4D,gBAA5B;QACH;;QACD,MAAKO,kBAAL,CAAwB1J,GAAxB,CAA4BnC,CAA5B,EAA+BW,CAA/B;MACH;IACJ,CAlBD;;IAmBA,MAAKmL,aAAL,GAAqB,UAACf,KAAD,EAAQ/K,CAAR,EAAWW,CAAX,EAAiB;MAClC,IAAMoL,SAAS,GAAGhO,IAAI,CAACkN,GAAL,CAAS,IAAT,EAAeF,KAAK,GAAG,MAAKlE,UAA5B,CAAlB;MACA,IAAMmF,QAAQ,GAAG,MAAKC,QAAtB,CAFkC,CAGlC;;MACA,MAAKC,MAAL,CAAY,MAAKC,KAAL,GAAaJ,SAAzB;;MACA,IAAI,MAAK/E,aAAT,EAAwB;QACpB,MAAKU,mBAAL,IAA4B,MAAKuE,QAAL,GAAgBD,QAA5C;;QACA,MAAKH,kBAAL,CAAwB1J,GAAxB,CAA4BnC,CAA5B,EAA+BW,CAA/B;MACH;IACJ,CATD,CA7O4B,CAuP5B;;;IACA,IAAI,OAAO8D,KAAP,KAAiB,WAArB,EAAkC;MAC9B9B,OAAO,CAACjE,KAAR,CAAc,iJAAd;IACH;;IACD,MAAK2K,OAAL,GAAezL,MAAf;IACA,MAAKwO,aAAL,GAAqB,IAAI3H,KAAK,CAAC4H,UAAV,GAAuBC,kBAAvB,CAA0C,MAAKjD,OAAL,CAAakD,EAAvD,EAA2D5H,OAA3D,CAArB;IACA,MAAK6H,oBAAL,GAA4B,MAAKJ,aAAL,CAAmBK,KAAnB,GAA2BC,MAA3B,EAA5B;IACA,MAAKlF,MAAL,GAAcjL,MAAM,CAACG,IAArB,CA9P4B,CA+P5B;;IACA,MAAKgN,OAAL,GAAe,IAAIjF,KAAK,CAACoE,OAAV,EAAf;IACA,MAAK4C,UAAL,GAAkB,MAAK/B,OAAL,CAAa+C,KAAb,EAAlB;IACA,MAAKE,YAAL,GAAoB,IAAIlI,KAAK,CAACoE,OAAV,EAApB;IACA,MAAK0B,eAAL,GAAuB,MAAKoC,YAAL,CAAkBF,KAAlB,EAAvB,CAnQ4B,CAoQ5B;;IACA,MAAKG,UAAL,GAAkB,IAAInI,KAAK,CAACoI,SAAV,GAAsBC,cAAtB,CAAqChI,IAAI,CAACyE,IAAL,CAAU,MAAKF,OAAL,CAAaG,QAAvB,EAAiCuD,eAAjC,CAAiD,MAAKX,aAAtD,CAArC,CAAlB;IACA,MAAKjB,aAAL,GAAqB,MAAKyB,UAAL,CAAgBH,KAAhB,EAArB;IACA,MAAKN,KAAL,GAAa,MAAK9C,OAAL,CAAaa,IAA1B;IACA,MAAK+B,QAAL,GAAgB,MAAKE,KAArB,CAxQ4B,CAyQ5B;;IACA,MAAKa,iBAAL,GAAyB,CACrB,IAAIvI,KAAK,CAACoE,OAAV,EADqB,EAErB,IAAIpE,KAAK,CAACoE,OAAV,EAFqB,EAGrB,IAAIpE,KAAK,CAACoE,OAAV,EAHqB,EAIrB,IAAIpE,KAAK,CAACoE,OAAV,EAJqB,CAAzB;;IAMA,MAAKoE,uBAAL,GAhR4B,CAiR5B;;;IACA,MAAKC,SAAL,GAAiB,IAAIzI,KAAK,CAAC0I,IAAV,CAAe,IAAI1I,KAAK,CAACoE,OAAV,CAAkB,CAACtJ,QAAnB,EAA6B,CAACA,QAA9B,EAAwC,CAACA,QAAzC,CAAf,EAAmE,IAAIkF,KAAK,CAACoE,OAAV,CAAkBtJ,QAAlB,EAA4BA,QAA5B,EAAsCA,QAAtC,CAAnE,CAAjB,CAlR4B,CAmR5B;;IACA,MAAK6N,UAAL,GAAkB,MAAK/D,OAAL,CAAakD,EAAb,CAAgBE,KAAhB,EAAlB;IACA,MAAKY,QAAL,GAAgB,MAAK3D,OAAL,CAAa+C,KAAb,EAAhB;IACA,MAAKa,UAAL,GAAkB,MAAKjE,OAAL,CAAaG,QAAb,CAAsBiD,KAAtB,EAAlB;IACA,MAAKc,MAAL,GAAc,MAAKpB,KAAnB;IACA,MAAKqB,aAAL,GAAqB,MAAKb,YAAL,CAAkBF,KAAlB,EAArB;IACA,MAAK/E,mBAAL,GAA2B,CAA3B;IACA,MAAKmE,kBAAL,GAA0B,IAAIpH,KAAK,CAACgJ,OAAV,EAA1B,CA1R4B,CA2R5B;;IACA,MAAKC,YAAL,GAAoB;MAChBzD,IAAI,EAAE1N,MAAM,CAACI,MADG;MAEhBgR,MAAM,EAAEpR,MAAM,CAACO,KAFC;MAGhBkN,KAAK,EAAEzN,MAAM,CAACK,KAHE;MAIhBgR,KAAK,EAAEjQ,mBAAmB,CAAC,MAAK0L,OAAN,CAAnB,GAAoC9M,MAAM,CAACO,KAA3C,GACHe,oBAAoB,CAAC,MAAKwL,OAAN,CAApB,GAAqC9M,MAAM,CAACQ,IAA5C,GACIR,MAAM,CAACG;IANC,CAApB;IAQA,MAAKmR,OAAL,GAAe;MACXC,GAAG,EAAEvR,MAAM,CAACS,YADD;MAEX+Q,GAAG,EAAEpQ,mBAAmB,CAAC,MAAK0L,OAAN,CAAnB,GAAoC9M,MAAM,CAACc,iBAA3C,GACDQ,oBAAoB,CAAC,MAAKwL,OAAN,CAApB,GAAqC9M,MAAM,CAACiB,gBAA5C,GACIjB,MAAM,CAACG,IAJJ;MAKXsR,KAAK,EAAEzR,MAAM,CAACU;IALH,CAAf;IAOA,IAAMgR,iBAAiB,GAAG,IAAIxJ,KAAK,CAACgJ,OAAV,EAA1B;IACA,IAAMS,gBAAgB,GAAG,IAAIzJ,KAAK,CAACgJ,OAAV,EAAzB;IACA,IAAMU,UAAU,GAAG,IAAI1J,KAAK,CAACgJ,OAAV,EAAnB;;IACA,IAAMW,aAAa,GAAG,SAAhBA,aAAgB,CAAC1K,KAAD,EAAW;MAC7B,IAAI,CAAC,MAAK6D,QAAN,IAAkB,CAAC,MAAK8G,WAA5B,EACI,OAFyB,CAG7B;MACA;MACA;;MACA,IAAMC,WAAW,GAAG5K,KAAK,CAAC6K,WAAN,KAAsB,OAAtB,GAAgC,IAAhC,GAChB,CAAC7K,KAAK,CAAC8K,OAAN,GAAgBrS,YAAY,CAACC,IAA9B,MAAwCD,YAAY,CAACC,IAArD,GAA4DD,YAAY,CAACC,IAAzE,GACI,CAACsH,KAAK,CAAC8K,OAAN,GAAgBrS,YAAY,CAACG,MAA9B,MAA0CH,YAAY,CAACG,MAAvD,GAAgEH,YAAY,CAACG,MAA7E,GACI,CAACoH,KAAK,CAAC8K,OAAN,GAAgBrS,YAAY,CAACE,KAA9B,MAAyCF,YAAY,CAACE,KAAtD,GAA8DF,YAAY,CAACE,KAA3E,GACI,IAJhB;;MAKA,IAAIiS,WAAW,KAAK,IAApB,EAA0B;QACtB,IAAMG,aAAa,GAAG,MAAKC,yBAAL,CAA+BJ,WAA/B,CAAtB;;QACAG,aAAa,IAAI,MAAKE,eAAL,CAAqBF,aAArB,CAAjB;MACH;;MACD,IAAI,CAAC/K,KAAK,CAAC8K,OAAN,GAAgBrS,YAAY,CAACC,IAA9B,MAAwCD,YAAY,CAACC,IAArD,IAA6D,MAAK+L,cAAtE,EACI;MACJ,IAAM9F,OAAO,GAAG;QACZuM,SAAS,EAAElL,KAAK,CAACkL,SADL;QAEZtM,OAAO,EAAEoB,KAAK,CAACpB,OAFH;QAGZC,OAAO,EAAEmB,KAAK,CAACnB,OAHH;QAIZ0G,MAAM,EAAE,CAJI;QAKZC,MAAM,EAAE,CALI;QAMZoF,WAAW,EAAXA;MANY,CAAhB;;MAQA,MAAKpG,eAAL,CAAqB9E,IAArB,CAA0Bf,OAA1B,EAzB6B,CA0B7B;;;MACA,MAAKgM,WAAL,CAAiBQ,aAAjB,CAA+BC,mBAA/B,CAAmD,aAAnD,EAAkEC,aAAlE,EAAiF;QAAEC,OAAO,EAAE;MAAX,CAAjF;;MACA,MAAKX,WAAL,CAAiBQ,aAAjB,CAA+BC,mBAA/B,CAAmD,WAAnD,EAAgEG,WAAhE;;MACA,MAAKZ,WAAL,CAAiBQ,aAAjB,CAA+BK,gBAA/B,CAAgD,aAAhD,EAA+DH,aAA/D,EAA8E;QAAEC,OAAO,EAAE;MAAX,CAA9E;;MACA,MAAKX,WAAL,CAAiBQ,aAAjB,CAA+BK,gBAA/B,CAAgD,WAAhD,EAA6DD,WAA7D;;MACA,MAAKhH,WAAL,GAAmB,IAAnB;MACAkH,aAAa,CAACzL,KAAD,CAAb;IACH,CAjCD;;IAkCA,IAAM0L,WAAW,GAAG,SAAdA,WAAc,CAAC1L,KAAD,EAAW;MAC3B,IAAI,CAAC,MAAK6D,QAAN,IAAkB,CAAC,MAAK8G,WAAxB,IAAuC,MAAKlG,cAAhD,EACI;MACJ,IAAMmG,WAAW,GAAG,CAAC5K,KAAK,CAAC8K,OAAN,GAAgBrS,YAAY,CAACC,IAA9B,MAAwCD,YAAY,CAACC,IAArD,GAA4DD,YAAY,CAACC,IAAzE,GAChB,CAACsH,KAAK,CAAC8K,OAAN,GAAgBrS,YAAY,CAACG,MAA9B,MAA0CH,YAAY,CAACG,MAAvD,GAAgEH,YAAY,CAACG,MAA7E,GACI,CAACoH,KAAK,CAAC8K,OAAN,GAAgBrS,YAAY,CAACE,KAA9B,MAAyCF,YAAY,CAACE,KAAtD,GAA8DF,YAAY,CAACE,KAA3E,GACI,IAHZ;;MAIA,IAAIiS,WAAW,KAAK,IAApB,EAA0B;QACtB,IAAMG,aAAa,GAAG,MAAKC,yBAAL,CAA+BJ,WAA/B,CAAtB;;QACAG,aAAa,IAAI,MAAKE,eAAL,CAAqBF,aAArB,CAAjB;MACH;;MACD,IAAMpM,OAAO,GAAG;QACZuM,SAAS,EAAE,CADC;QAEZtM,OAAO,EAAEoB,KAAK,CAACpB,OAFH;QAGZC,OAAO,EAAEmB,KAAK,CAACnB,OAHH;QAIZ0G,MAAM,EAAE,CAJI;QAKZC,MAAM,EAAE,CALI;QAMZoF,WAAW,EAAE,CAAC5K,KAAK,CAAC8K,OAAN,GAAgBrS,YAAY,CAACC,IAA9B,MAAwCD,YAAY,CAACC,IAArD,GAA4DD,YAAY,CAACC,IAAzE,GACT,CAACsH,KAAK,CAAC8K,OAAN,GAAgBrS,YAAY,CAACG,MAA9B,MAA0CH,YAAY,CAACC,IAAvD,GAA8DD,YAAY,CAACG,MAA3E,GACI,CAACoH,KAAK,CAAC8K,OAAN,GAAgBrS,YAAY,CAACE,KAA9B,MAAyCF,YAAY,CAACC,IAAtD,GAA6DD,YAAY,CAACE,KAA1E,GACI;MATA,CAAhB;;MAWA,MAAK6L,eAAL,CAAqB9E,IAArB,CAA0Bf,OAA1B,EAtB2B,CAuB3B;MACA;;;MACA,MAAKgM,WAAL,CAAiBQ,aAAjB,CAA+BC,mBAA/B,CAAmD,WAAnD,EAAgEO,WAAhE;;MACA,MAAKhB,WAAL,CAAiBQ,aAAjB,CAA+BC,mBAA/B,CAAmD,SAAnD,EAA8DQ,SAA9D;;MACA,MAAKjB,WAAL,CAAiBQ,aAAjB,CAA+BK,gBAA/B,CAAgD,WAAhD,EAA6DG,WAA7D;;MACA,MAAKhB,WAAL,CAAiBQ,aAAjB,CAA+BK,gBAA/B,CAAgD,SAAhD,EAA2DI,SAA3D;;MACA,MAAKrH,WAAL,GAAmB,IAAnB;MACAkH,aAAa,CAACzL,KAAD,CAAb;IACH,CA/BD;;IAgCA,IAAMqL,aAAa,GAAG,SAAhBA,aAAgB,CAACrL,KAAD,EAAW;MAC7B,IAAIA,KAAK,CAAC6L,UAAV,EACI7L,KAAK,CAAC8L,cAAN;MACJ,IAAMZ,SAAS,GAAGlL,KAAK,CAACkL,SAAxB;;MACA,IAAMvM,OAAO,GAAG,MAAK8F,cAAL,IAAuB,MAAKsH,gBAAL,CAAsBb,SAAtB,CAAvC;;MACA,IAAI,CAACvM,OAAL,EACI;MACJA,OAAO,CAACC,OAAR,GAAkBoB,KAAK,CAACpB,OAAxB;MACAD,OAAO,CAACE,OAAR,GAAkBmB,KAAK,CAACnB,OAAxB;MACAF,OAAO,CAAC4G,MAAR,GAAiBvF,KAAK,CAACgM,SAAvB;MACArN,OAAO,CAAC6G,MAAR,GAAiBxF,KAAK,CAACiM,SAAvB;MACA,MAAKnI,MAAL,GAAc,CAAd;;MACA,IAAI9D,KAAK,CAAC6K,WAAN,KAAsB,OAA1B,EAAmC;QAC/B,QAAQ,MAAKrG,eAAL,CAAqB1F,MAA7B;UACI,KAAK,CAAL;YACI,MAAKgF,MAAL,GAAc,MAAKqG,OAAL,CAAaC,GAA3B;YACA;;UACJ,KAAK,CAAL;YACI,MAAKtG,MAAL,GAAc,MAAKqG,OAAL,CAAaE,GAA3B;YACA;;UACJ,KAAK,CAAL;YACI,MAAKvG,MAAL,GAAc,MAAKqG,OAAL,CAAaG,KAA3B;YACA;QATR;MAWH,CAZD,MAaK;QACD,IAAK,CAAC,MAAK/F,WAAN,IAAqB,MAAKE,cAA3B,IACA,MAAKF,WAAL,IAAoB,CAACvE,KAAK,CAAC8K,OAAN,GAAgBrS,YAAY,CAACC,IAA9B,MAAwCD,YAAY,CAACC,IAD7E,EACmF;UAC/E,MAAKoL,MAAL,GAAc,MAAKA,MAAL,GAAc,MAAKkG,YAAL,CAAkBzD,IAA9C;QACH;;QACD,IAAI,MAAKhC,WAAL,IAAoB,CAACvE,KAAK,CAAC8K,OAAN,GAAgBrS,YAAY,CAACG,MAA9B,MAA0CH,YAAY,CAACG,MAA/E,EAAuF;UACnF,MAAKkL,MAAL,GAAc,MAAKA,MAAL,GAAc,MAAKkG,YAAL,CAAkBC,MAA9C;QACH;;QACD,IAAI,MAAK1F,WAAL,IAAoB,CAACvE,KAAK,CAAC8K,OAAN,GAAgBrS,YAAY,CAACE,KAA9B,MAAyCF,YAAY,CAACE,KAA9E,EAAqF;UACjF,MAAKmL,MAAL,GAAc,MAAKA,MAAL,GAAc,MAAKkG,YAAL,CAAkB1D,KAA9C;QACH;MACJ;;MACD4F,QAAQ;IACX,CAtCD;;IAuCA,IAAMP,WAAW,GAAG,SAAdA,WAAc,CAAC3L,KAAD,EAAW;MAC3B,IAAMrB,OAAO,GAAG,MAAK8F,cAAL,IAAuB,MAAKsH,gBAAL,CAAsB,CAAtB,CAAvC;;MACA,IAAI,CAACpN,OAAL,EACI;MACJA,OAAO,CAACC,OAAR,GAAkBoB,KAAK,CAACpB,OAAxB;MACAD,OAAO,CAACE,OAAR,GAAkBmB,KAAK,CAACnB,OAAxB;MACAF,OAAO,CAAC4G,MAAR,GAAiBvF,KAAK,CAACgM,SAAvB;MACArN,OAAO,CAAC6G,MAAR,GAAiBxF,KAAK,CAACiM,SAAvB;MACA,MAAKnI,MAAL,GAAc,CAAd;;MACA,IAAI,MAAKW,cAAL,IACA,CAACzE,KAAK,CAAC8K,OAAN,GAAgBrS,YAAY,CAACC,IAA9B,MAAwCD,YAAY,CAACC,IADzD,EAC+D;QAC3D,MAAKoL,MAAL,GAAc,MAAKA,MAAL,GAAc,MAAKkG,YAAL,CAAkBzD,IAA9C;MACH;;MACD,IAAI,CAACvG,KAAK,CAAC8K,OAAN,GAAgBrS,YAAY,CAACG,MAA9B,MAA0CH,YAAY,CAACG,MAA3D,EAAmE;QAC/D,MAAKkL,MAAL,GAAc,MAAKA,MAAL,GAAc,MAAKkG,YAAL,CAAkBC,MAA9C;MACH;;MACD,IAAI,CAACjK,KAAK,CAAC8K,OAAN,GAAgBrS,YAAY,CAACE,KAA9B,MAAyCF,YAAY,CAACE,KAA1D,EAAiE;QAC7D,MAAKmL,MAAL,GAAc,MAAKA,MAAL,GAAc,MAAKkG,YAAL,CAAkB1D,KAA9C;MACH;;MACD4F,QAAQ;IACX,CApBD;;IAqBA,IAAMX,WAAW,GAAG,SAAdA,WAAc,CAACvL,KAAD,EAAW;MAC3B,IAAMrB,OAAO,GAAG,MAAKoN,gBAAL,CAAsB/L,KAAK,CAACkL,SAA5B,CAAhB;;MACA,IAAIvM,OAAO,IAAIA,OAAO,KAAK,MAAK8F,cAAhC,EACI;MACJ9F,OAAO,IAAI,MAAKsM,eAAL,CAAqBtM,OAArB,CAAX;;MACA,IAAIqB,KAAK,CAAC6K,WAAN,KAAsB,OAA1B,EAAmC;QAC/B,QAAQ,MAAKrG,eAAL,CAAqB1F,MAA7B;UACI,KAAK,CAAL;YACI,MAAKgF,MAAL,GAAcjL,MAAM,CAACG,IAArB;YACA;;UACJ,KAAK,CAAL;YACI,MAAK8K,MAAL,GAAc,MAAKqG,OAAL,CAAaC,GAA3B;YACA;;UACJ,KAAK,CAAL;YACI,MAAKtG,MAAL,GAAc,MAAKqG,OAAL,CAAaE,GAA3B;YACA;;UACJ,KAAK,CAAL;YACI,MAAKvG,MAAL,GAAc,MAAKqG,OAAL,CAAaG,KAA3B;YACA;QAZR;MAcH,CAfD,MAgBK;QACD,MAAKxG,MAAL,GAAcjL,MAAM,CAACG,IAArB;MACH;;MACDmT,WAAW;IACd,CAzBD;;IA0BA,IAAMP,SAAS,GAAG,SAAZA,SAAY,GAAM;MACpB,IAAMjN,OAAO,GAAG,MAAKoN,gBAAL,CAAsB,CAAtB,CAAhB;;MACA,IAAIpN,OAAO,IAAIA,OAAO,KAAK,MAAK8F,cAAhC,EACI;MACJ9F,OAAO,IAAI,MAAKsM,eAAL,CAAqBtM,OAArB,CAAX;MACA,MAAKmF,MAAL,GAAcjL,MAAM,CAACG,IAArB;MACAmT,WAAW;IACd,CAPD;;IAQA,IAAIC,mBAAmB,GAAG,CAAC,CAA3B;;IACA,IAAMC,YAAY,GAAG,SAAfA,YAAe,CAACrM,KAAD,EAAW;MAC5B,IAAI,CAAC,MAAK6D,QAAN,IAAkB,MAAKmG,YAAL,CAAkBE,KAAlB,KAA4BrR,MAAM,CAACG,IAAzD,EACI;MACJgH,KAAK,CAAC8L,cAAN;;MACA,IAAI,MAAKxI,aAAL,IACA,MAAK0G,YAAL,CAAkBE,KAAlB,KAA4BrR,MAAM,CAACI,MADnC,IAEA,MAAK+Q,YAAL,CAAkBE,KAAlB,KAA4BrR,MAAM,CAACK,KAFvC,EAE8C;QAC1C,IAAMoT,GAAG,GAAGC,WAAW,CAACD,GAAZ,EAAZ,CAD0C,CAE1C;;QACA,IAAIF,mBAAmB,GAAGE,GAAtB,GAA4B,IAAhC,EACI,MAAKE,cAAL,CAAoB,MAAKnI,YAAzB;QACJ+H,mBAAmB,GAAGE,GAAtB;MACH,CAZ2B,CAa5B;;;MACA,IAAMG,YAAY,GAAG/L,KAAK,GAAG,CAAC,CAAJ,GAAQ,CAAC,CAAnC;MACA,IAAM2G,KAAK,GAAIrH,KAAK,CAAC0M,SAAN,KAAoB,CAArB,GAA0B1M,KAAK,CAACwF,MAAN,GAAeiH,YAAzC,GAAwDzM,KAAK,CAACwF,MAAN,IAAgBiH,YAAY,GAAG,EAA/B,CAAtE;MACA,IAAMnQ,CAAC,GAAG,MAAKgH,aAAL,GAAqB,CAACtD,KAAK,CAACpB,OAAN,GAAgB,MAAKyF,YAAL,CAAkB/H,CAAnC,IAAwC,MAAK+H,YAAL,CAAkBoC,KAA1D,GAAkE,CAAlE,GAAsE,CAA3F,GAA+F,CAAzG;MACA,IAAMxJ,CAAC,GAAG,MAAKqG,aAAL,GAAqB,CAACtD,KAAK,CAACnB,OAAN,GAAgB,MAAKwF,YAAL,CAAkBpH,CAAnC,IAAwC,MAAKoH,YAAL,CAAkBgC,MAA1D,GAAmE,CAAC,CAApE,GAAwE,CAA7F,GAAiG,CAA3G;;MACA,QAAQ,MAAK2D,YAAL,CAAkBE,KAA1B;QACI,KAAKrR,MAAM,CAACI,MAAZ;UAAoB;YAChB,MAAK+N,eAAL,CAAqBhH,KAAK,CAACuF,MAA3B,EAAmCvF,KAAK,CAACwF,MAAzC;;YACA,MAAKd,wBAAL,GAAgC,IAAhC;YACA;UACH;;QACD,KAAK7L,MAAM,CAACK,KAAZ;UAAmB;YACf,MAAKoM,cAAL,CAAoBtF,KAAK,CAACuF,MAA1B,EAAkCvF,KAAK,CAACwF,MAAxC,EAAgD,KAAhD;;YACA,MAAKZ,uBAAL,GAA+B,IAA/B;YACA;UACH;;QACD,KAAK/L,MAAM,CAACM,MAAZ;UAAoB;YAChB,MAAKmM,cAAL,CAAoBtF,KAAK,CAACuF,MAA1B,EAAkCvF,KAAK,CAACwF,MAAxC,EAAgD,IAAhD;;YACA,MAAKX,wBAAL,GAAgC,IAAhC;YACA;UACH;;QACD,KAAKhM,MAAM,CAACO,KAAZ;UAAmB;YACf,MAAKgO,cAAL,CAAoB,CAACC,KAArB,EAA4B/K,CAA5B,EAA+BW,CAA/B;;YACA,MAAK0H,uBAAL,GAA+B,IAA/B;YACA;UACH;;QACD,KAAK9L,MAAM,CAACQ,IAAZ;UAAkB;YACd,MAAK+O,aAAL,CAAmB,CAACf,KAApB,EAA2B/K,CAA3B,EAA8BW,CAA9B;;YACA,MAAK6H,sBAAL,GAA8B,IAA9B;YACA;UACH;MAzBL;;MA2BA,MAAK6H,aAAL,CAAmB;QAAEtN,IAAI,EAAE;MAAR,CAAnB;IACH,CA9CD;;IA+CA,IAAMuN,aAAa,GAAG,SAAhBA,aAAgB,CAAC5M,KAAD,EAAW;MAC7B,IAAI,CAAC,MAAK2K,WAAN,IAAqB,CAAC,MAAK9G,QAA/B,EACI,OAFyB,CAG7B;MACA;;MACA,IAAI,MAAKmG,YAAL,CAAkB1D,KAAlB,KAA4BjE,cAAc,CAACxJ,MAAf,CAAsBG,IAAtD,EAA4D;QACxD,IAAMkS,SAAS,GAAGlL,KAAK,YAAY6M,YAAjB,GAAgC7M,KAAK,CAACkL,SAAtC,GACdlL,KAAK,YAAY8M,UAAjB,GAA8B,CAA9B,GACI,CAFR;;QAGA,IAAMnO,OAAO,GAAG,MAAKoN,gBAAL,CAAsBb,SAAtB,CAAhB;;QACAvM,OAAO,IAAI,MAAKsM,eAAL,CAAqBtM,OAArB,CAAX,CALwD,CAMxD;;QACA,MAAKgM,WAAL,CAAiBQ,aAAjB,CAA+BC,mBAA/B,CAAmD,aAAnD,EAAkEC,aAAlE,EAAiF;UAAEC,OAAO,EAAE;QAAX,CAAjF;;QACA,MAAKX,WAAL,CAAiBQ,aAAjB,CAA+BC,mBAA/B,CAAmD,WAAnD,EAAgEG,WAAhE;;QACA,MAAKZ,WAAL,CAAiBQ,aAAjB,CAA+BC,mBAA/B,CAAmD,WAAnD,EAAgEO,WAAhE;;QACA,MAAKhB,WAAL,CAAiBQ,aAAjB,CAA+BC,mBAA/B,CAAmD,SAAnD,EAA8DQ,SAA9D;;QACA;MACH;;MACD5L,KAAK,CAAC8L,cAAN;IACH,CAnBD;;IAoBA,IAAML,aAAa,GAAG,SAAhBA,aAAgB,CAACzL,KAAD,EAAW;MAC7B,IAAI,CAAC,MAAK6D,QAAV,EACI;MACJtF,2BAA2B,CAAC,MAAKiG,eAAN,EAAuBrD,GAAvB,CAA3B;;MACA,MAAKqL,cAAL,CAAoB,MAAKnI,YAAzB;;MACAkG,iBAAiB,CAAC1E,IAAlB,CAAuB1E,GAAvB;MACAqJ,gBAAgB,CAAC3E,IAAjB,CAAsB1E,GAAtB;MACA,IAAM4L,YAAY,GAAG,MAAKvI,eAAL,CAAqB1F,MAArB,IAA+B,CAApD;;MACA,IAAIiO,YAAJ,EAAkB;QACd;QACA,IAAMC,EAAE,GAAG7L,GAAG,CAAC7E,CAAJ,GAAQ,MAAKkI,eAAL,CAAqB,CAArB,EAAwB5F,OAA3C;QACA,IAAMqO,EAAE,GAAG9L,GAAG,CAAClE,CAAJ,GAAQ,MAAKuH,eAAL,CAAqB,CAArB,EAAwB3F,OAA3C;QACA,IAAM2I,QAAQ,GAAGnN,IAAI,CAACwD,IAAL,CAAUmP,EAAE,GAAGA,EAAL,GAAUC,EAAE,GAAGA,EAAzB,CAAjB;QACAxC,UAAU,CAAChM,GAAX,CAAe,CAAf,EAAkB+I,QAAlB,EALc,CAMd;;QACA,IAAMlL,CAAC,GAAG,CAAC,MAAKkI,eAAL,CAAqB,CAArB,EAAwB5F,OAAxB,GAAkC,MAAK4F,eAAL,CAAqB,CAArB,EAAwB5F,OAA3D,IAAsE,GAAhF;QACA,IAAM3B,CAAC,GAAG,CAAC,MAAKuH,eAAL,CAAqB,CAArB,EAAwB3F,OAAxB,GAAkC,MAAK2F,eAAL,CAAqB,CAArB,EAAwB3F,OAA3D,IAAsE,GAAhF;QACA2L,gBAAgB,CAAC/L,GAAjB,CAAqBnC,CAArB,EAAwBW,CAAxB;MACH;;MACD,MAAK6G,MAAL,GAAc,CAAd;;MACA,IAAI,CAAC9D,KAAL,EAAY;QACR,IAAI,MAAKyE,cAAT,EACI,MAAKX,MAAL,GAAc,MAAKA,MAAL,GAAc,MAAKkG,YAAL,CAAkBzD,IAA9C;MACP,CAHD,MAIK,IAAI,iBAAiBvG,KAAjB,IAA0BA,KAAK,CAAC6K,WAAN,KAAsB,OAApD,EAA6D;QAC9D,QAAQ,MAAKrG,eAAL,CAAqB1F,MAA7B;UACI,KAAK,CAAL;YACI,MAAKgF,MAAL,GAAc,MAAKqG,OAAL,CAAaC,GAA3B;YACA;;UACJ,KAAK,CAAL;YACI,MAAKtG,MAAL,GAAc,MAAKqG,OAAL,CAAaE,GAA3B;YACA;;UACJ,KAAK,CAAL;YACI,MAAKvG,MAAL,GAAc,MAAKqG,OAAL,CAAaG,KAA3B;YACA;QATR;MAWH,CAZI,MAaA;QACD,IAAI,CAAC,MAAK7F,cAAN,IAAwB,CAACzE,KAAK,CAAC8K,OAAN,GAAgBrS,YAAY,CAACC,IAA9B,MAAwCD,YAAY,CAACC,IAAjF,EAAuF;UACnF,MAAKoL,MAAL,GAAc,MAAKA,MAAL,GAAc,MAAKkG,YAAL,CAAkBzD,IAA9C;QACH;;QACD,IAAI,CAACvG,KAAK,CAAC8K,OAAN,GAAgBrS,YAAY,CAACG,MAA9B,MAA0CH,YAAY,CAACG,MAA3D,EAAmE;UAC/D,MAAKkL,MAAL,GAAc,MAAKA,MAAL,GAAc,MAAKkG,YAAL,CAAkBC,MAA9C;QACH;;QACD,IAAI,CAACjK,KAAK,CAAC8K,OAAN,GAAgBrS,YAAY,CAACE,KAA9B,MAAyCF,YAAY,CAACE,KAA1D,EAAiE;UAC7D,MAAKmL,MAAL,GAAc,MAAKA,MAAL,GAAc,MAAKkG,YAAL,CAAkB1D,KAA9C;QACH;MACJ,CA/C4B,CAgD7B;;;MACA,IAAI,CAAC,MAAKxC,MAAL,GAAcjL,MAAM,CAACI,MAAtB,MAAkCJ,MAAM,CAACI,MAAzC,IACA,CAAC,MAAK6K,MAAL,GAAcjL,MAAM,CAACS,YAAtB,MAAwCT,MAAM,CAACS,YAD/C,IAEA,CAAC,MAAKwK,MAAL,GAAcjL,MAAM,CAACgB,kBAAtB,MAA8ChB,MAAM,CAACgB,kBAFrD,IAGA,CAAC,MAAKiK,MAAL,GAAcjL,MAAM,CAACmB,iBAAtB,MAA6CnB,MAAM,CAACmB,iBAHxD,EAG2E;QACvE,MAAKyN,aAAL,CAAmBR,KAAnB,GAA2B,MAAKiC,UAAL,CAAgBjC,KAA3C;QACA,MAAKQ,aAAL,CAAmBP,GAAnB,GAAyB,MAAKgC,UAAL,CAAgBhC,GAAzC;QACA,MAAKnC,cAAL,CAAoBpK,KAApB,GAA4B,CAA5B;QACA,MAAKqK,YAAL,CAAkBrK,KAAlB,GAA0B,CAA1B;MACH;;MACD,IAAI,CAAC,MAAKmJ,MAAL,GAAcjL,MAAM,CAACK,KAAtB,MAAiCL,MAAM,CAACK,KAAxC,IACA,CAAC,MAAK4K,MAAL,GAAcjL,MAAM,CAACU,WAAtB,MAAuCV,MAAM,CAACU,WAD9C,IAEA,CAAC,MAAKuK,MAAL,GAAcjL,MAAM,CAACc,iBAAtB,MAA6Cd,MAAM,CAACc,iBAFpD,IAGA,CAAC,MAAKmK,MAAL,GAAcjL,MAAM,CAACiB,gBAAtB,MAA4CjB,MAAM,CAACiB,gBAHvD,EAGyE;QACrE,MAAKiO,UAAL,CAAgBlC,IAAhB,CAAqB,MAAKG,OAA1B;;QACA,MAAKd,eAAL,CAAqBzG,GAArB,CAAyB,CAAzB,EAA4B,CAA5B,EAA+B,CAA/B;MACH;;MACD,IAAI,CAAC,MAAKqF,MAAL,GAAcjL,MAAM,CAACO,KAAtB,MAAiCP,MAAM,CAACO,KAAxC,IACA,CAAC,MAAK0K,MAAL,GAAcjL,MAAM,CAACY,WAAtB,MAAuCZ,MAAM,CAACY,WAD9C,IAEA,CAAC,MAAKqK,MAAL,GAAcjL,MAAM,CAACc,iBAAtB,MAA6Cd,MAAM,CAACc,iBAFpD,IAGA,CAAC,MAAKmK,MAAL,GAAcjL,MAAM,CAACe,kBAAtB,MAA8Cf,MAAM,CAACe,kBAHrD,IAIA,CAAC,MAAKkK,MAAL,GAAcjL,MAAM,CAACgB,kBAAtB,MAA8ChB,MAAM,CAACgB,kBAJzD,EAI6E;QACzE,MAAK4N,aAAL,CAAmBC,MAAnB,GAA4B,MAAKwB,UAAL,CAAgBxB,MAA5C;QACA,MAAKzC,eAAL,CAAqBtK,KAArB,GAA6B,CAA7B;MACH;;MACD,IAAI,CAAC,MAAKmJ,MAAL,GAAcjL,MAAM,CAACQ,IAAtB,MAAgCR,MAAM,CAACQ,IAAvC,IACA,CAAC,MAAKyK,MAAL,GAAcjL,MAAM,CAACa,UAAtB,MAAsCb,MAAM,CAACa,UAD7C,IAEA,CAAC,MAAKoK,MAAL,GAAcjL,MAAM,CAACiB,gBAAtB,MAA4CjB,MAAM,CAACiB,gBAFnD,IAGA,CAAC,MAAKgK,MAAL,GAAcjL,MAAM,CAACkB,iBAAtB,MAA6ClB,MAAM,CAACkB,iBAHpD,IAIA,CAAC,MAAK+J,MAAL,GAAcjL,MAAM,CAACmB,iBAAtB,MAA6CnB,MAAM,CAACmB,iBAJxD,EAI2E;QACvE,MAAKuO,QAAL,GAAgB,MAAKE,KAArB;QACA,MAAKpD,aAAL,CAAmB1K,KAAnB,GAA2B,CAA3B;MACH;;MACD,IAAI,CAAC,MAAKmJ,MAAL,GAAcjL,MAAM,CAACM,MAAtB,MAAkCN,MAAM,CAACM,MAAzC,IACA,CAAC,MAAK2K,MAAL,GAAcjL,MAAM,CAACW,YAAtB,MAAwCX,MAAM,CAACW,YAD/C,IAEA,CAAC,MAAKsK,MAAL,GAAcjL,MAAM,CAACe,kBAAtB,MAA8Cf,MAAM,CAACe,kBAFrD,IAGA,CAAC,MAAKkK,MAAL,GAAcjL,MAAM,CAACkB,iBAAtB,MAA6ClB,MAAM,CAACkB,iBAHxD,EAG2E;QACvE,MAAK8M,eAAL,CAAqBhB,IAArB,CAA0B,MAAKoD,YAA/B;;QACA,MAAK7D,oBAAL,CAA0B3G,GAA1B,CAA8B,CAA9B,EAAiC,CAAjC,EAAoC,CAApC;MACH;;MACD,MAAKkO,aAAL,CAAmB;QAAEtN,IAAI,EAAE;MAAR,CAAnB;IACH,CAzFD;;IA0FA,IAAM6M,QAAQ,GAAG,SAAXA,QAAW,GAAM;MACnB,IAAI,CAAC,MAAKrI,QAAV,EACI;MACJtF,2BAA2B,CAAC,MAAKiG,eAAN,EAAuBrD,GAAvB,CAA3B,CAHmB,CAInB;MACA;;MACA,IAAM+L,mBAAmB,GAAG,MAAKvC,WAAL,IAAoBwC,QAAQ,CAACC,kBAAT,KAAgC,MAAKzC,WAArF;MACA,IAAM0C,aAAa,GAAGH,mBAAmB,GAAG,MAAKzI,cAAL,IAAuB,MAAKD,eAAL,CAAqB,CAArB,CAA1B,GAAoD,IAA7F;MACA,IAAMe,MAAM,GAAG8H,aAAa,GAAG,CAACA,aAAa,CAAC9H,MAAlB,GAA2BiF,gBAAgB,CAAClO,CAAjB,GAAqB6E,GAAG,CAAC7E,CAAhF;MACA,IAAMkJ,MAAM,GAAG6H,aAAa,GAAG,CAACA,aAAa,CAAC7H,MAAlB,GAA2BgF,gBAAgB,CAACvN,CAAjB,GAAqBkE,GAAG,CAAClE,CAAhF;MACAuN,gBAAgB,CAAC3E,IAAjB,CAAsB1E,GAAtB;;MACA,IAAI,CAAC,MAAK2C,MAAL,GAAcjL,MAAM,CAACI,MAAtB,MAAkCJ,MAAM,CAACI,MAAzC,IACA,CAAC,MAAK6K,MAAL,GAAcjL,MAAM,CAACS,YAAtB,MAAwCT,MAAM,CAACS,YAD/C,IAEA,CAAC,MAAKwK,MAAL,GAAcjL,MAAM,CAACgB,kBAAtB,MAA8ChB,MAAM,CAACgB,kBAFrD,IAGA,CAAC,MAAKiK,MAAL,GAAcjL,MAAM,CAACmB,iBAAtB,MAA6CnB,MAAM,CAACmB,iBAHxD,EAG2E;QACvE,MAAKgN,eAAL,CAAqBzB,MAArB,EAA6BC,MAA7B;;QACA,MAAKd,wBAAL,GAAgC,IAAhC;MACH;;MACD,IAAI,CAAC,MAAKZ,MAAL,GAAcjL,MAAM,CAACO,KAAtB,MAAiCP,MAAM,CAACO,KAAxC,IACA,CAAC,MAAK0K,MAAL,GAAcjL,MAAM,CAACQ,IAAtB,MAAgCR,MAAM,CAACQ,IAD3C,EACiD;QAC7C,IAAMiU,MAAM,GAAG,MAAKhK,aAAL,GAAqB,CAACiH,iBAAiB,CAACjO,CAAlB,GAAsB,MAAK+H,YAAL,CAAkB/H,CAAzC,IAA8C,MAAK+H,YAAL,CAAkBoC,KAAhE,GAAwE,CAAxE,GAA4E,CAAjG,GAAqG,CAApH;QACA,IAAM8G,MAAM,GAAG,MAAKjK,aAAL,GAAqB,CAACiH,iBAAiB,CAACtN,CAAlB,GAAsB,MAAKoH,YAAL,CAAkBpH,CAAzC,IAA8C,MAAKoH,YAAL,CAAkBgC,MAAhE,GAAyE,CAAC,CAA1E,GAA8E,CAAnG,GAAuG,CAAtH;QACA,IAAMmH,cAAc,GAAG,MAAKpK,iBAAL,GAAyB,CAAC,CAA1B,GAA8B,CAArD;;QACA,IAAI,CAAC,MAAKU,MAAL,GAAcjL,MAAM,CAACO,KAAtB,MAAiCP,MAAM,CAACO,KAA5C,EAAmD;UAC/C,MAAKgO,cAAL,CAAoBoG,cAAc,GAAGhI,MAAjB,GAA0BjF,kBAA9C,EAAkE+M,MAAlE,EAA0EC,MAA1E;;UACA,MAAK5I,uBAAL,GAA+B,IAA/B;QACH,CAHD,MAIK;UACD,MAAKyD,aAAL,CAAmBoF,cAAc,GAAGhI,MAAjB,GAA0BjF,kBAA7C,EAAiE+M,MAAjE,EAAyEC,MAAzE;;UACA,MAAKzI,sBAAL,GAA8B,IAA9B;QACH;MACJ;;MACD,IAAI,CAAC,MAAKhB,MAAL,GAAcjL,MAAM,CAACY,WAAtB,MAAuCZ,MAAM,CAACY,WAA9C,IACA,CAAC,MAAKqK,MAAL,GAAcjL,MAAM,CAACa,UAAtB,MAAsCb,MAAM,CAACa,UAD7C,IAEA,CAAC,MAAKoK,MAAL,GAAcjL,MAAM,CAACc,iBAAtB,MAA6Cd,MAAM,CAACc,iBAFpD,IAGA,CAAC,MAAKmK,MAAL,GAAcjL,MAAM,CAACiB,gBAAtB,MAA4CjB,MAAM,CAACiB,gBAHnD,IAIA,CAAC,MAAKgK,MAAL,GAAcjL,MAAM,CAACe,kBAAtB,MAA8Cf,MAAM,CAACe,kBAJrD,IAKA,CAAC,MAAKkK,MAAL,GAAcjL,MAAM,CAACkB,iBAAtB,MAA6ClB,MAAM,CAACkB,iBALpD,IAMA,CAAC,MAAK+J,MAAL,GAAcjL,MAAM,CAACgB,kBAAtB,MAA8ChB,MAAM,CAACgB,kBANrD,IAOA,CAAC,MAAKiK,MAAL,GAAcjL,MAAM,CAACmB,iBAAtB,MAA6CnB,MAAM,CAACmB,iBAPxD,EAO2E;QACvE,IAAMgT,EAAE,GAAG7L,GAAG,CAAC7E,CAAJ,GAAQ,MAAKkI,eAAL,CAAqB,CAArB,EAAwB5F,OAA3C;QACA,IAAMqO,EAAE,GAAG9L,GAAG,CAAClE,CAAJ,GAAQ,MAAKuH,eAAL,CAAqB,CAArB,EAAwB3F,OAA3C;QACA,IAAM2I,QAAQ,GAAGnN,IAAI,CAACwD,IAAL,CAAUmP,EAAE,GAAGA,EAAL,GAAUC,EAAE,GAAGA,EAAzB,CAAjB;QACA,IAAMQ,UAAU,GAAGhD,UAAU,CAACxN,CAAX,GAAeuK,QAAlC;QACAiD,UAAU,CAAChM,GAAX,CAAe,CAAf,EAAkB+I,QAAlB;;QACA,IAAM8F,OAAM,GAAG,MAAKhK,aAAL,GAAqB,CAACkH,gBAAgB,CAAClO,CAAjB,GAAqB,MAAK+H,YAAL,CAAkB/H,CAAxC,IAA6C,MAAK+H,YAAL,CAAkBoC,KAA/D,GAAuE,CAAvE,GAA2E,CAAhG,GAAoG,CAAnH;;QACA,IAAM8G,OAAM,GAAG,MAAKjK,aAAL,GAAqB,CAACkH,gBAAgB,CAACvN,CAAjB,GAAqB,MAAKoH,YAAL,CAAkBpH,CAAxC,IAA6C,MAAKoH,YAAL,CAAkBgC,MAA/D,GAAwE,CAAC,CAAzE,GAA6E,CAAlG,GAAsG,CAArH;;QACA,IAAI,CAAC,MAAKvC,MAAL,GAAcjL,MAAM,CAACY,WAAtB,MAAuCZ,MAAM,CAACY,WAA9C,IACA,CAAC,MAAKqK,MAAL,GAAcjL,MAAM,CAACgB,kBAAtB,MAA8ChB,MAAM,CAACgB,kBADrD,IAEA,CAAC,MAAKiK,MAAL,GAAcjL,MAAM,CAACc,iBAAtB,MAA6Cd,MAAM,CAACc,iBAFpD,IAGA,CAAC,MAAKmK,MAAL,GAAcjL,MAAM,CAACe,kBAAtB,MAA8Cf,MAAM,CAACe,kBAHzD,EAG6E;UACzE,MAAKwN,cAAL,CAAoBqG,UAAU,GAAGlN,kBAAjC,EAAqD+M,OAArD,EAA6DC,OAA7D;;UACA,MAAK5I,uBAAL,GAA+B,IAA/B;QACH,CAND,MAOK;UACD,MAAKyD,aAAL,CAAmBqF,UAAU,GAAGlN,kBAAhC,EAAoD+M,OAApD,EAA4DC,OAA5D;;UACA,MAAKzI,sBAAL,GAA8B,IAA9B;QACH;MACJ;;MACD,IAAI,CAAC,MAAKhB,MAAL,GAAcjL,MAAM,CAACK,KAAtB,MAAiCL,MAAM,CAACK,KAAxC,IACA,CAAC,MAAK4K,MAAL,GAAcjL,MAAM,CAACU,WAAtB,MAAuCV,MAAM,CAACU,WAD9C,IAEA,CAAC,MAAKuK,MAAL,GAAcjL,MAAM,CAACc,iBAAtB,MAA6Cd,MAAM,CAACc,iBAFpD,IAGA,CAAC,MAAKmK,MAAL,GAAcjL,MAAM,CAACiB,gBAAtB,MAA4CjB,MAAM,CAACiB,gBAHvD,EAGyE;QACrE,MAAKwL,cAAL,CAAoBC,MAApB,EAA4BC,MAA5B,EAAoC,KAApC;;QACA,MAAKZ,uBAAL,GAA+B,IAA/B;MACH;;MACD,IAAI,CAAC,MAAKd,MAAL,GAAcjL,MAAM,CAACM,MAAtB,MAAkCN,MAAM,CAACM,MAAzC,IACA,CAAC,MAAK2K,MAAL,GAAcjL,MAAM,CAACW,YAAtB,MAAwCX,MAAM,CAACW,YAD/C,IAEA,CAAC,MAAKsK,MAAL,GAAcjL,MAAM,CAACe,kBAAtB,MAA8Cf,MAAM,CAACe,kBAFrD,IAGA,CAAC,MAAKkK,MAAL,GAAcjL,MAAM,CAACkB,iBAAtB,MAA6ClB,MAAM,CAACkB,iBAHxD,EAG2E;QACvE,MAAKuL,cAAL,CAAoBC,MAApB,EAA4BC,MAA5B,EAAoC,IAApC;;QACA,MAAKX,wBAAL,GAAgC,IAAhC;MACH;;MACD,MAAK8H,aAAL,CAAmB;QAAEtN,IAAI,EAAE;MAAR,CAAnB;IACH,CA1ED;;IA2EA,IAAM8M,WAAW,GAAG,SAAdA,WAAc,GAAM;MACtB5N,2BAA2B,CAAC,MAAKiG,eAAN,EAAuBrD,GAAvB,CAA3B;MACAqJ,gBAAgB,CAAC3E,IAAjB,CAAsB1E,GAAtB;;MACA,IAAI,MAAKqD,eAAL,CAAqB1F,MAArB,KAAgC,CAAhC,IACC,MAAK0F,eAAL,CAAqB1F,MAArB,KAAgC,CAAhC,IAAqC,MAAK0F,eAAL,CAAqB,CAArB,MAA4B,MAAKC,cAD3E,EAC4F;QACxF,MAAKF,WAAL,GAAmB,KAAnB;MACH;;MACD,IAAI,MAAKC,eAAL,CAAqB1F,MAArB,KAAgC,CAAhC,IAAqC,MAAK6L,WAA9C,EAA2D;QACvD;QACA,MAAKA,WAAL,CAAiBQ,aAAjB,CAA+BC,mBAA/B,CAAmD,aAAnD,EAAkEC,aAAlE,EAAiF;UAAEC,OAAO,EAAE;QAAX,CAAjF;;QACA,MAAKX,WAAL,CAAiBQ,aAAjB,CAA+BC,mBAA/B,CAAmD,WAAnD,EAAgEO,WAAhE;;QACA,MAAKhB,WAAL,CAAiBQ,aAAjB,CAA+BC,mBAA/B,CAAmD,WAAnD,EAAgEG,WAAhE;;QACA,MAAKZ,WAAL,CAAiBQ,aAAjB,CAA+BC,mBAA/B,CAAmD,SAAnD,EAA8DQ,SAA9D;;QACA,MAAKe,aAAL,CAAmB;UAAEtN,IAAI,EAAE;QAAR,CAAnB;MACH;IACJ,CAfD;;IAgBA,MAAKqO,WAAL,GAAmB,YAAM;MACrB,IAAI,CAAC,MAAK7J,QAAN,IAAkB,CAAC,MAAK8G,WAA5B,EACI;;MACJ,MAAK/G,MAAL,GAHqB,CAIrB;;;MACA,MAAKa,cAAL,GAAsB;QAClByG,SAAS,EAAE,CAAC,CADM;QAElBtM,OAAO,EAAE,CAFS;QAGlBC,OAAO,EAAE,CAHS;QAIlB0G,MAAM,EAAE,CAJU;QAKlBC,MAAM,EAAE,CALU;QAMlBoF,WAAW,EAAE;MANK,CAAtB;;MAQA,MAAKpG,eAAL,CAAqB9E,IAArB,CAA0B,MAAK+E,cAA/B,EAbqB,CAcrB;;;MACA,MAAKkG,WAAL,CAAiBQ,aAAjB,CAA+BC,mBAA/B,CAAmD,aAAnD,EAAkEC,aAAlE,EAAiF;QAAEC,OAAO,EAAE;MAAX,CAAjF;;MACA,MAAKX,WAAL,CAAiBQ,aAAjB,CAA+BC,mBAA/B,CAAmD,WAAnD,EAAgEG,WAAhE;;MACA,MAAKZ,WAAL,CAAiBgD,kBAAjB;;MACA,MAAKhD,WAAL,CAAiBQ,aAAjB,CAA+BK,gBAA/B,CAAgD,mBAAhD,EAAqEoC,mBAArE;;MACA,MAAKjD,WAAL,CAAiBQ,aAAjB,CAA+BK,gBAA/B,CAAgD,kBAAhD,EAAoEqC,kBAApE;;MACA,MAAKlD,WAAL,CAAiBQ,aAAjB,CAA+BK,gBAA/B,CAAgD,aAAhD,EAA+DH,aAA/D,EAA8E;QAAEC,OAAO,EAAE;MAAX,CAA9E;;MACA,MAAKX,WAAL,CAAiBQ,aAAjB,CAA+BK,gBAA/B,CAAgD,WAAhD,EAA6DD,WAA7D;;MACAE,aAAa;IAChB,CAvBD;;IAwBA,MAAKqC,aAAL,GAAqB,YAAM;MACvB,IAAI,MAAKrJ,cAAL,KAAwB,IAA5B,EAAkC;QAC9B,MAAKwG,eAAL,CAAqB,MAAKxG,cAA1B;;QACA,MAAKA,cAAL,GAAsB,IAAtB;MACH;;MACD0I,QAAQ,CAACY,eAAT;;MACA,MAAKnK,MAAL;;MACA,IAAI,CAAC,MAAK+G,WAAV,EACI;;MACJ,MAAKA,WAAL,CAAiBQ,aAAjB,CAA+BC,mBAA/B,CAAmD,mBAAnD,EAAwEwC,mBAAxE;;MACA,MAAKjD,WAAL,CAAiBQ,aAAjB,CAA+BC,mBAA/B,CAAmD,kBAAnD,EAAuEyC,kBAAvE;IACH,CAXD;;IAYA,IAAMD,mBAAmB,GAAG,SAAtBA,mBAAsB,GAAM;MAC9B,IAAMV,mBAAmB,GAAG,MAAKvC,WAAL,IAAoB,MAAKA,WAAL,CAAiBQ,aAAjB,CAA+BiC,kBAA/B,KAAsD,MAAKzC,WAA3G;MACA,IAAI,CAACuC,mBAAL,EACI,MAAKY,aAAL;IACP,CAJD;;IAKA,IAAMD,kBAAkB,GAAG,SAArBA,kBAAqB,GAAM;MAC7B,MAAKC,aAAL;IACH,CAFD;;IAGA,MAAKE,qBAAL,GAA6B,UAAC1L,UAAD,EAAgB;MACzC,MAAKqI,WAAL,GAAmBrI,UAAnB;MACA,MAAKqI,WAAL,CAAiBsD,KAAjB,CAAuBC,WAAvB,GAAqC,MAArC;MACA,MAAKvD,WAAL,CAAiBsD,KAAjB,CAAuBE,UAAvB,GAAoC,MAApC;MACA,MAAKxD,WAAL,CAAiBsD,KAAjB,CAAuBG,gBAAvB,GAA0C,MAA1C;;MACA,MAAKzD,WAAL,CAAiBa,gBAAjB,CAAkC,aAAlC,EAAiDd,aAAjD;;MACA5J,2BAA2B,IAAI,MAAK6J,WAAL,CAAiBa,gBAAjB,CAAkC,WAAlC,EAA+CE,WAA/C,CAA/B;;MACA,MAAKf,WAAL,CAAiBa,gBAAjB,CAAkC,eAAlC,EAAmDD,WAAnD;;MACA,MAAKZ,WAAL,CAAiBa,gBAAjB,CAAkC,OAAlC,EAA2Ca,YAA3C,EAAyD;QAAEf,OAAO,EAAE;MAAX,CAAzD;;MACA,MAAKX,WAAL,CAAiBa,gBAAjB,CAAkC,aAAlC,EAAiDoB,aAAjD;IACH,CAVD;;IAWA,MAAKyB,wBAAL,GAAgC,YAAM;MAClC,IAAI,CAAC,MAAK1D,WAAV,EACI;MACJ,MAAKA,WAAL,CAAiBsD,KAAjB,CAAuBC,WAAvB,GAAqC,EAArC;MACA,MAAKvD,WAAL,CAAiBsD,KAAjB,CAAuBE,UAAvB,GAAoC,EAApC;MACA,MAAKxD,WAAL,CAAiBsD,KAAjB,CAAuBG,gBAAvB,GAA0C,EAA1C;;MACA,MAAKzD,WAAL,CAAiBS,mBAAjB,CAAqC,aAArC,EAAoDV,aAApD;;MACA,MAAKC,WAAL,CAAiBS,mBAAjB,CAAqC,WAArC,EAAkDM,WAAlD;;MACA,MAAKf,WAAL,CAAiBS,mBAAjB,CAAqC,eAArC,EAAsDG,WAAtD,EARkC,CASlC;MACA;MACA;MACA;;;MACA,MAAKZ,WAAL,CAAiBS,mBAAjB,CAAqC,OAArC,EAA8CiB,YAA9C,EAA4D;QAAEf,OAAO,EAAE;MAAX,CAA5D;;MACA,MAAKX,WAAL,CAAiBS,mBAAjB,CAAqC,aAArC,EAAoDwB,aAApD,EAdkC,CAelC;;;MACA,MAAKjC,WAAL,CAAiBQ,aAAjB,CAA+BC,mBAA/B,CAAmD,aAAnD,EAAkEC,aAAlE,EAAiF;QAAEC,OAAO,EAAE;MAAX,CAAjF;;MACA,MAAKX,WAAL,CAAiBQ,aAAjB,CAA+BC,mBAA/B,CAAmD,WAAnD,EAAgEO,WAAhE;;MACA,MAAKhB,WAAL,CAAiBQ,aAAjB,CAA+BC,mBAA/B,CAAmD,WAAnD,EAAgEG,WAAhE;;MACA,MAAKZ,WAAL,CAAiBQ,aAAjB,CAA+BC,mBAA/B,CAAmD,SAAnD,EAA8DQ,SAA9D;;MACA,MAAKjB,WAAL,CAAiBQ,aAAjB,CAA+BC,mBAA/B,CAAmD,mBAAnD,EAAwEwC,mBAAxE;;MACA,MAAKjD,WAAL,CAAiBQ,aAAjB,CAA+BC,mBAA/B,CAAmD,kBAAnD,EAAuEyC,kBAAvE;IACH,CAtBD;;IAuBA,MAAKjK,MAAL,GAAc,YAAM;MAChB,IAAI,MAAKE,MAAL,KAAgBjL,MAAM,CAACG,IAA3B,EACI;MACJ,MAAK8K,MAAL,GAAcjL,MAAM,CAACG,IAArB;MACA,MAAKwL,eAAL,CAAqB1F,MAArB,GAA8B,CAA9B;MACAqN,WAAW;IACd,CAND;;IAOA,IAAI7J,UAAJ,EACI,MAAKgM,OAAL,CAAahM,UAAb;;IACJ,MAAKiM,MAAL,CAAY,CAAZ;;IA9xB4B;EA+xB/B;EACD;AACJ;AACA;AACA;;;;;SACI,eAAa;MACT,OAAO,KAAK5I,OAAZ;IACH,C;SACD,aAAWzL,MAAX,EAAmB;MACf,KAAKyL,OAAL,GAAezL,MAAf;MACA,KAAKsU,cAAL;;MACA,KAAK7I,OAAL,CAAa8I,sBAAb;;MACA,KAAKlF,uBAAL;;MACA,KAAKpF,YAAL,GAAoB,IAApB;IACH;IACD;AACJ;AACA;AACA;AACA;;;;SACI,eAAc;MACV,OAAO,KAAKN,QAAZ;IACH,C;SACD,aAAY6K,OAAZ,EAAqB;MACjB,KAAK7K,QAAL,GAAgB6K,OAAhB;MACA,IAAI,CAAC,KAAK/D,WAAV,EACI;;MACJ,IAAI+D,OAAJ,EAAa;QACT,KAAK/D,WAAL,CAAiBsD,KAAjB,CAAuBC,WAAvB,GAAqC,MAArC;QACA,KAAKvD,WAAL,CAAiBsD,KAAjB,CAAuBE,UAAvB,GAAoC,MAApC;QACA,KAAKxD,WAAL,CAAiBsD,KAAjB,CAAuBG,gBAAvB,GAA0C,MAA1C;MACH,CAJD,MAKK;QACD,KAAKxK,MAAL;QACA,KAAK+G,WAAL,CAAiBsD,KAAjB,CAAuBC,WAAvB,GAAqC,EAArC;QACA,KAAKvD,WAAL,CAAiBsD,KAAjB,CAAuBE,UAAvB,GAAoC,EAApC;QACA,KAAKxD,WAAL,CAAiBsD,KAAjB,CAAuBG,gBAAvB,GAA0C,EAA1C;MACH;IACJ;IACD;AACJ;AACA;AACA;AACA;;;;SACI,eAAa;MACT,OAAO,CAAC,KAAKnK,UAAb;IACH;IACD;AACJ;AACA;AACA;AACA;;;;SACI,eAAoB;MAChB,OAAO,KAAKH,MAAZ;IACH;IACD;AACJ;AACA;AACA;;;;SACI,eAAe;MACX,OAAO,KAAKoF,UAAL,CAAgBxB,MAAvB;IACH,C;SACD,aAAaF,QAAb,EAAuB;MACnB,IAAI,KAAK0B,UAAL,CAAgBxB,MAAhB,KAA2BF,QAA3B,IACA,KAAKC,aAAL,CAAmBC,MAAnB,KAA8BF,QADlC,EAEI;MACJ,KAAK0B,UAAL,CAAgBxB,MAAhB,GAAyBF,QAAzB;MACA,KAAKC,aAAL,CAAmBC,MAAnB,GAA4BF,QAA5B;MACA,KAAKrD,YAAL,GAAoB,IAApB;IACH,C,CACD;;IACA;AACJ;AACA;AACA;AACA;;;;SACI,eAAmB;MACf,OAAO,KAAK+E,UAAL,CAAgBjC,KAAvB;IACH,C;SACD,aAAiB0H,YAAjB,EAA+B;MAC3B,IAAI,KAAKzF,UAAL,CAAgBjC,KAAhB,KAA0B0H,YAA1B,IACA,KAAKlH,aAAL,CAAmBR,KAAnB,KAA6B0H,YADjC,EAEI;MACJ,KAAKzF,UAAL,CAAgBjC,KAAhB,GAAwB0H,YAAxB;MACA,KAAKlH,aAAL,CAAmBR,KAAnB,GAA2B0H,YAA3B;MACA,KAAKxK,YAAL,GAAoB,IAApB;IACH,C,CACD;;IACA;AACJ;AACA;AACA;;;;SACI,eAAiB;MACb,OAAO,KAAK+E,UAAL,CAAgBhC,GAAvB;IACH,C;SACD,aAAe0H,UAAf,EAA2B;MACvB,IAAI,KAAK1F,UAAL,CAAgBhC,GAAhB,KAAwB0H,UAAxB,IACA,KAAKnH,aAAL,CAAmBP,GAAnB,KAA2B0H,UAD/B,EAEI;MACJ,KAAK1F,UAAL,CAAgBhC,GAAhB,GAAsB0H,UAAtB;MACA,KAAKnH,aAAL,CAAmBP,GAAnB,GAAyB0H,UAAzB;MACA,KAAKzK,YAAL,GAAoB,IAApB;IACH;IACD;AACJ;AACA;AACA;;;;SACI,eAA6B;MACzB,OAAO,KAAKD,uBAAZ;IACH,C;SACD,aAA2B2K,sBAA3B,EAAmD;MAC/C,KAAK3K,uBAAL,GAA+B2K,sBAA/B;MACA,KAAK1K,YAAL,GAAoB,IAApB;IACH;IACD;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;WACI,0BAAiB9E,IAAjB,EAAuBC,QAAvB,EAAiC;MAC7B,qFAAuBD,IAAvB,EAA6BC,QAA7B;IACH;IACD;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;WACI,6BAAoBD,IAApB,EAA0BC,QAA1B,EAAoC;MAChC,wFAA0BD,IAA1B,EAAgCC,QAAhC;IACH;IACD;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;;;;WACI,gBAAOqP,YAAP,EAAqBC,UAArB,EAA2D;MAAA,IAA1BE,gBAA0B,uEAAP,KAAO;MACvD,OAAO,KAAKC,QAAL,CAAc,KAAKtH,aAAL,CAAmBR,KAAnB,GAA2B0H,YAAzC,EAAuD,KAAKlH,aAAL,CAAmBP,GAAnB,GAAyB0H,UAAhF,EAA4FE,gBAA5F,CAAP;IACH;IACD;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;WACI,yBAAgBH,YAAhB,EAAwD;MAAA,IAA1BG,gBAA0B,uEAAP,KAAO;MACpD,OAAO,KAAKC,QAAL,CAAcJ,YAAd,EAA4B,KAAKlH,aAAL,CAAmBP,GAA/C,EAAoD4H,gBAApD,CAAP;IACH;IACD;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;WACI,uBAAcF,UAAd,EAAoD;MAAA,IAA1BE,gBAA0B,uEAAP,KAAO;MAChD,OAAO,KAAKC,QAAL,CAAc,KAAKtH,aAAL,CAAmBR,KAAjC,EAAwC2H,UAAxC,EAAoDE,gBAApD,CAAP;IACH;IACD;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;WACI,kBAASH,YAAT,EAAuBC,UAAvB,EAA6D;MAAA,IAA1BE,gBAA0B,uEAAP,KAAO;MACzD,KAAKpK,wBAAL,GAAgC,KAAhC;MACA,IAAMuC,KAAK,GAAGvM,KAAK,CAACiU,YAAD,EAAe,KAAKlM,eAApB,EAAqC,KAAKC,eAA1C,CAAnB;MACA,IAAMwE,GAAG,GAAGxM,KAAK,CAACkU,UAAD,EAAa,KAAKrM,aAAlB,EAAiC,KAAKC,aAAtC,CAAjB;MACA,KAAKiF,aAAL,CAAmBR,KAAnB,GAA2BA,KAA3B;MACA,KAAKQ,aAAL,CAAmBP,GAAnB,GAAyBA,GAAzB;;MACA,KAAKO,aAAL,CAAmBuH,QAAnB;;MACA,KAAK7K,YAAL,GAAoB,IAApB;;MACA,IAAI,CAAC2K,gBAAL,EAAuB;QACnB,KAAK5F,UAAL,CAAgBjC,KAAhB,GAAwB,KAAKQ,aAAL,CAAmBR,KAA3C;QACA,KAAKiC,UAAL,CAAgBhC,GAAhB,GAAsB,KAAKO,aAAL,CAAmBP,GAAzC;MACH;;MACD,IAAM+H,kBAAkB,GAAG,CAACH,gBAAD,IACvB5T,YAAY,CAAC,KAAKgO,UAAL,CAAgBjC,KAAjB,EAAwB,KAAKQ,aAAL,CAAmBR,KAA3C,EAAkD,KAAKvD,aAAvD,CAAZ,IACIxI,YAAY,CAAC,KAAKgO,UAAL,CAAgBhC,GAAjB,EAAsB,KAAKO,aAAL,CAAmBP,GAAzC,EAA8C,KAAKxD,aAAnD,CAFpB;MAGA,OAAO,KAAKwL,oBAAL,CAA0BD,kBAA1B,CAAP;IACH;IACD;AACJ;AACA;AACA;AACA;AACA;;;;WACI,eAAMzH,QAAN,EAA0C;MAAA,IAA1BsH,gBAA0B,uEAAP,KAAO;MACtC,OAAO,KAAKjH,OAAL,CAAa,KAAKJ,aAAL,CAAmBC,MAAnB,GAA4BF,QAAzC,EAAmDsH,gBAAnD,CAAP;IACH;IACD;AACJ;AACA;AACA;AACA;AACA;;;;WACI,iBAAQtH,QAAR,EAA4C;MAAA,IAA1BsH,gBAA0B,uEAAP,KAAO;MACxC,KAAKnK,uBAAL,GAA+B,KAA/B;MACA,IAAMwK,UAAU,GAAG,KAAK1H,aAAL,CAAmBC,MAAtC;MACA,IAAM0H,SAAS,GAAG1U,KAAK,CAAC8M,QAAD,EAAW,KAAK7E,WAAhB,EAA6B,KAAKC,WAAlC,CAAvB;MACA,IAAMyM,WAAW,GAAG,KAAK1L,cAAL,CAAoB7E,MAApB,IAA8B,CAAlD;;MACA,IAAIuQ,WAAJ,EAAiB;QACb,IAAMC,0BAA0B,GAAG,KAAKC,cAAL,EAAnC;;QACA,IAAMC,UAAU,GAAGtU,YAAY,CAACoU,0BAAD,EAA6B,KAAKpG,UAAL,CAAgBxB,MAA7C,CAA/B;QACA,IAAM+H,SAAS,GAAGN,UAAU,GAAGC,SAA/B;QACA,IAAI,CAACK,SAAD,IAAcD,UAAlB,EACI,OAAOE,OAAO,CAACC,OAAR,EAAP;QACJ,KAAKlI,aAAL,CAAmBC,MAAnB,GAA4BrN,IAAI,CAACO,GAAL,CAASwU,SAAT,EAAoBE,0BAApB,CAA5B;MACH,CAPD,MAQK;QACD,KAAK7H,aAAL,CAAmBC,MAAnB,GAA4B0H,SAA5B;MACH;;MACD,KAAKjL,YAAL,GAAoB,IAApB;;MACA,IAAI,CAAC2K,gBAAL,EAAuB;QACnB,KAAK5F,UAAL,CAAgBxB,MAAhB,GAAyB,KAAKD,aAAL,CAAmBC,MAA5C;MACH;;MACD,IAAMuH,kBAAkB,GAAG,CAACH,gBAAD,IAAqB5T,YAAY,CAAC,KAAKgO,UAAL,CAAgBxB,MAAjB,EAAyB,KAAKD,aAAL,CAAmBC,MAA5C,EAAoD,KAAKhE,aAAzD,CAA5D;MACA,OAAO,KAAKwL,oBAAL,CAA0BD,kBAA1B,CAAP;IACH;IACD;AACJ;AACA;AACA;AACA;AACA;AACA;;;;WACI,cAAKW,QAAL,EAAyC;MAAA,IAA1Bd,gBAA0B,uEAAP,KAAO;MACrC,OAAO,KAAKtG,MAAL,CAAY,KAAKD,QAAL,GAAgBqH,QAA5B,EAAsCd,gBAAtC,CAAP;IACH;IACD;AACJ;AACA;AACA;AACA;AACA;AACA;;;;WACI,gBAAOtI,IAAP,EAAuC;MAAA,IAA1BsI,gBAA0B,uEAAP,KAAO;MACnC,KAAKhK,sBAAL,GAA8B,KAA9B;MACA,KAAKyD,QAAL,GAAgB7N,KAAK,CAAC8L,IAAD,EAAO,KAAK1D,OAAZ,EAAqB,KAAKC,OAA1B,CAArB;MACA,KAAKoB,YAAL,GAAoB,IAApB;;MACA,IAAI,CAAC2K,gBAAL,EAAuB;QACnB,KAAKrG,KAAL,GAAa,KAAKF,QAAlB;MACH;;MACD,IAAM0G,kBAAkB,GAAG,CAACH,gBAAD,IAAqB5T,YAAY,CAAC,KAAKuN,KAAN,EAAa,KAAKF,QAAlB,EAA4B,KAAK7E,aAAjC,CAA5D;MACA,OAAO,KAAKwL,oBAAL,CAA0BD,kBAA1B,CAAP;IACH;IACD;AACJ;AACA;AACA;;;;WACI,aAAI3S,CAAJ,EAAOW,CAAP,EAAoC;MAAA,IAA1B6R,gBAA0B,uEAAP,KAAO;MAChC7P,OAAO,CAACC,IAAR,CAAa,mCAAb;MACA,OAAO,KAAK4H,KAAL,CAAWxK,CAAX,EAAcW,CAAd,EAAiB6R,gBAAjB,CAAP;IACH;IACD;AACJ;AACA;AACA;AACA;AACA;AACA;;;;WACI,eAAMxS,CAAN,EAASW,CAAT,EAAsC;MAAA,IAA1B6R,gBAA0B,uEAAP,KAAO;;MAClC,KAAKnJ,OAAL,CAAakK,YAAb;;MACAtO,QAAQ,CAACuO,mBAAT,CAA6B,KAAKnK,OAAL,CAAaoK,MAA1C,EAAkD,CAAlD;;MACAvO,QAAQ,CAACsO,mBAAT,CAA6B,KAAKnK,OAAL,CAAaoK,MAA1C,EAAkD,CAAlD;;MACAxO,QAAQ,CAAC2G,cAAT,CAAwB5L,CAAxB;;MACAkF,QAAQ,CAAC0G,cAAT,CAAwB,CAACjL,CAAzB;;MACA,IAAM2I,MAAM,GAAGxE,IAAI,CAACyE,IAAL,CAAUtE,QAAV,EAAoByG,GAApB,CAAwBxG,QAAxB,CAAf;;MACA,IAAMwO,EAAE,GAAG3O,IAAI,CAACwE,IAAL,CAAU,KAAKkC,UAAf,EAA2BC,GAA3B,CAA+BpC,MAA/B,CAAX;;MACA,OAAO,KAAKqK,MAAL,CAAYD,EAAE,CAAC1T,CAAf,EAAkB0T,EAAE,CAAC/S,CAArB,EAAwB+S,EAAE,CAAC7S,CAA3B,EAA8B2R,gBAA9B,CAAP;IACH;IACD;AACJ;AACA;AACA;AACA;AACA;;;;WACI,iBAAQtH,QAAR,EAA4C;MAAA,IAA1BsH,gBAA0B,uEAAP,KAAO;;MACxC1N,IAAI,CAAC0O,mBAAL,CAAyB,KAAKnK,OAAL,CAAaoK,MAAtC,EAA8C,CAA9C;;MACA3O,IAAI,CAAC8O,YAAL,CAAkB,KAAKvK,OAAL,CAAakD,EAA/B,EAAmCzH,IAAnC;;MACAA,IAAI,CAAC8G,cAAL,CAAoBV,QAApB;;MACA,IAAMwI,EAAE,GAAG3O,IAAI,CAACwE,IAAL,CAAU,KAAKkC,UAAf,EAA2BC,GAA3B,CAA+B5G,IAA/B,CAAX;;MACA,OAAO,KAAK6O,MAAL,CAAYD,EAAE,CAAC1T,CAAf,EAAkB0T,EAAE,CAAC/S,CAArB,EAAwB+S,EAAE,CAAC7S,CAA3B,EAA8B2R,gBAA9B,CAAP;IACH;IACD;AACJ;AACA;AACA;AACA;AACA;;;;WACI,iBAAQzI,MAAR,EAA0C;MAAA,IAA1ByI,gBAA0B,uEAAP,KAAO;;MACtC1N,IAAI,CAACyE,IAAL,CAAU,KAAKF,OAAL,CAAakD,EAAvB,EAA2BX,cAA3B,CAA0C7B,MAA1C;;MACA,OAAO,KAAK4J,MAAL,CAAY,KAAKlI,UAAL,CAAgBzL,CAAhB,GAAoB8E,IAAI,CAAC9E,CAArC,EAAwC,KAAKyL,UAAL,CAAgB9K,CAAhB,GAAoBmE,IAAI,CAACnE,CAAjE,EAAoE,KAAK8K,UAAL,CAAgB5K,CAAhB,GAAoBiE,IAAI,CAACjE,CAA7F,EAAgG2R,gBAAhG,CAAP;IACH;IACD;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;;;;WACI,gBAAOxS,CAAP,EAAUW,CAAV,EAAaE,CAAb,EAA0C;MAAA,IAA1B2R,gBAA0B,uEAAP,KAAO;MACtC,KAAKlK,uBAAL,GAA+B,KAA/B;;MACA,IAAMgB,MAAM,GAAGxE,IAAI,CAAC3C,GAAL,CAASnC,CAAT,EAAYW,CAAZ,EAAeE,CAAf,EAAkB4I,GAAlB,CAAsB,KAAKgC,UAA3B,CAAf;;MACA,KAAKoI,kBAAL,CAAwB,KAAKpI,UAA7B,EAAyCnC,MAAzC,EAAiD,KAAKnC,gBAAtD;;MACA,KAAKU,YAAL,GAAoB,IAApB;;MACA,IAAI,CAAC2K,gBAAL,EAAuB;QACnB,KAAK9I,OAAL,CAAaH,IAAb,CAAkB,KAAKkC,UAAvB;MACH;;MACD,IAAMkH,kBAAkB,GAAG,CAACH,gBAAD,IACvB5T,YAAY,CAAC,KAAK8K,OAAL,CAAa1J,CAAd,EAAiB,KAAKyL,UAAL,CAAgBzL,CAAjC,EAAoC,KAAKoH,aAAzC,CAAZ,IACIxI,YAAY,CAAC,KAAK8K,OAAL,CAAa/I,CAAd,EAAiB,KAAK8K,UAAL,CAAgB9K,CAAjC,EAAoC,KAAKyG,aAAzC,CADhB,IAEIxI,YAAY,CAAC,KAAK8K,OAAL,CAAa7I,CAAd,EAAiB,KAAK4K,UAAL,CAAgB5K,CAAjC,EAAoC,KAAKuG,aAAzC,CAHpB;MAIA,OAAO,KAAKwL,oBAAL,CAA0BD,kBAA1B,CAAP;IACH;IACD;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;WACI,2BAAkB3S,CAAlB,EAAqBW,CAArB,EAAwBE,CAAxB,EAAqD;MAAA,IAA1B2R,gBAA0B,uEAAP,KAAO;;MACjD,IAAMsB,KAAK,GAAGhP,IAAI,CAAC3C,GAAL,CAASnC,CAAT,EAAYW,CAAZ,EAAeE,CAAf,CAAd;;MACA,IAAMkT,SAAS,GAAGD,KAAK,CAACrK,GAAN,CAAU,KAAKgC,UAAf,EAA2BE,SAA3B,EAAlB;MACA,IAAMnC,QAAQ,GAAGuK,SAAS,CAACnI,cAAV,CAAyB,CAAC,KAAKT,aAAL,CAAmBC,MAA7C,CAAjB;MACA,OAAO,KAAK4I,WAAL,CAAiBxK,QAAQ,CAACxJ,CAA1B,EAA6BwJ,QAAQ,CAAC7I,CAAtC,EAAyC6I,QAAQ,CAAC3I,CAAlD,EAAqD2R,gBAArD,CAAP;IACH;IACD;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;WACI,kBAASyB,YAAT,EAAuBzB,gBAAvB,EAAuI;MAAA,+EAAJ,EAAI;MAAA,sBAA5F0B,KAA4F;MAAA,IAA5FA,KAA4F,2BAApF,KAAoF;MAAA,4BAA7EC,WAA6E;MAAA,IAA7EA,WAA6E,iCAA/D,CAA+D;MAAA,6BAA5DC,YAA4D;MAAA,IAA5DA,YAA4D,kCAA7C,CAA6C;MAAA,8BAA1CC,aAA0C;MAAA,IAA1CA,aAA0C,mCAA1B,CAA0B;MAAA,2BAAvBC,UAAuB;MAAA,IAAvBA,UAAuB,gCAAV,CAAU;;MACnI,IAAMC,QAAQ,GAAG,EAAjB;MACA,IAAMC,IAAI,GAAGP,YAAY,CAACQ,MAAb,GACPjP,MAAM,CAAC+D,IAAP,CAAY0K,YAAZ,CADO,GAEPzO,MAAM,CAACkP,aAAP,CAAqBT,YAArB,CAFN;;MAGA,IAAIO,IAAI,CAACG,OAAL,EAAJ,EAAoB;QAChBhS,OAAO,CAACC,IAAR,CAAa,qEAAb;QACAwQ,OAAO,CAACC,OAAR;MACH,CARkI,CASnI;;;MACA,IAAM1I,KAAK,GAAG5L,WAAW,CAAC,KAAKoM,aAAL,CAAmBR,KAApB,EAA2B1M,OAA3B,CAAzB;MACA,IAAM2M,GAAG,GAAG7L,WAAW,CAAC,KAAKoM,aAAL,CAAmBP,GAApB,EAAyB3M,OAAzB,CAAvB;MACAsW,QAAQ,CAACnR,IAAT,CAAc,KAAKqP,QAAL,CAAc9H,KAAd,EAAqBC,GAArB,EAA0B4H,gBAA1B,CAAd;;MACA,IAAMoC,MAAM,GAAG9P,IAAI,CAAC+P,gBAAL,CAAsB,KAAK1J,aAA3B,EAA0CQ,SAA1C,EAAf;;MACA,IAAMmJ,QAAQ,GAAGnP,YAAY,CAAC2G,kBAAb,CAAgCsI,MAAhC,EAAwChQ,OAAxC,CAAjB;;MACA,IAAMmQ,aAAa,GAAGnW,YAAY,CAACb,IAAI,CAACY,GAAL,CAASiW,MAAM,CAACjU,CAAhB,CAAD,EAAqB,CAArB,CAAlC;;MACA,IAAIoU,aAAJ,EAAmB;QACfD,QAAQ,CAACE,QAAT,CAAkBpP,YAAY,CAACqP,gBAAb,CAA8BtQ,OAA9B,EAAuCgG,KAAvC,CAAlB;MACH;;MACDmK,QAAQ,CAACE,QAAT,CAAkB,KAAKxI,oBAAvB,EAnBmI,CAoBnI;;MACA,IAAM0I,EAAE,GAAGzP,MAAM,CAAC0P,SAAP,EAAX,CArBmI,CAsBnI;;;MACApQ,IAAI,CAACwE,IAAL,CAAUiL,IAAI,CAAClW,GAAf,EAAoByO,eAApB,CAAoC+H,QAApC;;MACAI,EAAE,CAACE,aAAH,CAAiBrQ,IAAjB,EAxBmI,CAyBnI;;MACAA,IAAI,CAACwE,IAAL,CAAUiL,IAAI,CAAClW,GAAf,EAAoB+W,IAApB,CAAyBb,IAAI,CAACjW,GAAL,CAASyB,CAAlC,EAAqC+M,eAArC,CAAqD+H,QAArD;;MACAI,EAAE,CAACE,aAAH,CAAiBrQ,IAAjB,EA3BmI,CA4BnI;;MACAA,IAAI,CAACwE,IAAL,CAAUiL,IAAI,CAAClW,GAAf,EAAoBgX,IAApB,CAAyBd,IAAI,CAACjW,GAAL,CAASoC,CAAlC,EAAqCoM,eAArC,CAAqD+H,QAArD;;MACAI,EAAE,CAACE,aAAH,CAAiBrQ,IAAjB,EA9BmI,CA+BnI;;MACAA,IAAI,CAACwE,IAAL,CAAUiL,IAAI,CAACjW,GAAf,EAAoBgX,IAApB,CAAyBf,IAAI,CAAClW,GAAL,CAASuC,CAAlC,EAAqCkM,eAArC,CAAqD+H,QAArD;;MACAI,EAAE,CAACE,aAAH,CAAiBrQ,IAAjB,EAjCmI,CAkCnI;;MACAA,IAAI,CAACwE,IAAL,CAAUiL,IAAI,CAAClW,GAAf,EAAoBiX,IAApB,CAAyBf,IAAI,CAACjW,GAAL,CAASsC,CAAlC,EAAqCkM,eAArC,CAAqD+H,QAArD;;MACAI,EAAE,CAACE,aAAH,CAAiBrQ,IAAjB,EApCmI,CAqCnI;;MACAA,IAAI,CAACwE,IAAL,CAAUiL,IAAI,CAACjW,GAAf,EAAoB+W,IAApB,CAAyBd,IAAI,CAAClW,GAAL,CAASqC,CAAlC,EAAqCoM,eAArC,CAAqD+H,QAArD;;MACAI,EAAE,CAACE,aAAH,CAAiBrQ,IAAjB,EAvCmI,CAwCnI;;MACAA,IAAI,CAACwE,IAAL,CAAUiL,IAAI,CAACjW,GAAf,EAAoB8W,IAApB,CAAyBb,IAAI,CAAClW,GAAL,CAAS0B,CAAlC,EAAqC+M,eAArC,CAAqD+H,QAArD;;MACAI,EAAE,CAACE,aAAH,CAAiBrQ,IAAjB,EA1CmI,CA2CnI;;MACAA,IAAI,CAACwE,IAAL,CAAUiL,IAAI,CAACjW,GAAf,EAAoBwO,eAApB,CAAoC+H,QAApC;;MACAI,EAAE,CAACE,aAAH,CAAiBrQ,IAAjB,EA7CmI,CA8CnI;;MACAmQ,EAAE,CAAC5W,GAAH,CAAO0B,CAAP,IAAYmU,WAAZ;MACAe,EAAE,CAAC5W,GAAH,CAAOqC,CAAP,IAAY0T,aAAZ;MACAa,EAAE,CAAC3W,GAAH,CAAOyB,CAAP,IAAYoU,YAAZ;MACAc,EAAE,CAAC3W,GAAH,CAAOoC,CAAP,IAAY2T,UAAZ;MACAQ,QAAQ,CAACxI,kBAAT,CAA4B1H,OAA5B,EAAqCgQ,MAArC;;MACA,IAAIG,aAAJ,EAAmB;QACfD,QAAQ,CAACU,WAAT,CAAqB5P,YAAY,CAAC8G,MAAb,EAArB;MACH;;MACDoI,QAAQ,CAACU,WAAT,CAAqB,KAAKpJ,aAA1B;MACA,IAAMqJ,MAAM,GAAGP,EAAE,CAACQ,OAAH,CAAW5Q,IAAX,CAAf;MACA,IAAM6Q,MAAM,GAAGT,EAAE,CAACU,SAAH,CAAa7Q,IAAb,EAAmBgI,eAAnB,CAAmC+H,QAAnC,CAAf;;MACA,IAAInX,mBAAmB,CAAC,KAAK0L,OAAN,CAAvB,EAAuC;QACnC,IAAM6B,QAAQ,GAAG,KAAK2K,mBAAL,CAAyBJ,MAAM,CAACzV,CAAhC,EAAmCyV,MAAM,CAAC9U,CAA1C,EAA6C8U,MAAM,CAAC5U,CAApD,EAAuDqT,KAAvD,CAAjB;QACAK,QAAQ,CAACnR,IAAT,CAAc,KAAKuQ,MAAL,CAAYgC,MAAM,CAAC3V,CAAnB,EAAsB2V,MAAM,CAAChV,CAA7B,EAAgCgV,MAAM,CAAC9U,CAAvC,EAA0C2R,gBAA1C,CAAd;QACA+B,QAAQ,CAACnR,IAAT,CAAc,KAAKmI,OAAL,CAAaL,QAAb,EAAuBsH,gBAAvB,CAAd;QACA+B,QAAQ,CAACnR,IAAT,CAAc,KAAKkH,cAAL,CAAoB,CAApB,EAAuB,CAAvB,EAA0B,CAA1B,EAA6BkI,gBAA7B,CAAd;MACH,CALD,MAMK,IAAI3U,oBAAoB,CAAC,KAAKwL,OAAN,CAAxB,EAAwC;QACzC,IAAMzL,MAAM,GAAG,KAAKyL,OAApB;QACA,IAAMc,KAAK,GAAGvM,MAAM,CAACoM,KAAP,GAAepM,MAAM,CAACqM,IAApC;QACA,IAAMF,MAAM,GAAGnM,MAAM,CAACwM,GAAP,GAAaxM,MAAM,CAACyM,MAAnC;QACA,IAAMH,IAAI,GAAGgK,KAAK,GAAGnW,IAAI,CAACQ,GAAL,CAAS4L,KAAK,GAAGsL,MAAM,CAACzV,CAAxB,EAA2B+J,MAAM,GAAG0L,MAAM,CAAC9U,CAA3C,CAAH,GAAmD5C,IAAI,CAACO,GAAL,CAAS6L,KAAK,GAAGsL,MAAM,CAACzV,CAAxB,EAA2B+J,MAAM,GAAG0L,MAAM,CAAC9U,CAA3C,CAArE;QACA4T,QAAQ,CAACnR,IAAT,CAAc,KAAKuQ,MAAL,CAAYgC,MAAM,CAAC3V,CAAnB,EAAsB2V,MAAM,CAAChV,CAA7B,EAAgCgV,MAAM,CAAC9U,CAAvC,EAA0C2R,gBAA1C,CAAd;QACA+B,QAAQ,CAACnR,IAAT,CAAc,KAAK8I,MAAL,CAAYhC,IAAZ,EAAkBsI,gBAAlB,CAAd;QACA+B,QAAQ,CAACnR,IAAT,CAAc,KAAKkH,cAAL,CAAoB,CAApB,EAAuB,CAAvB,EAA0B,CAA1B,EAA6BkI,gBAA7B,CAAd;MACH;;MACD,OAAOY,OAAO,CAAC0C,GAAR,CAAYvB,QAAZ,CAAP;IACH;IACD;AACJ;AACA;AACA;AACA;AACA;;;;WACI,qBAAYwB,YAAZ,EAA0BvD,gBAA1B,EAA4C;MACxC,IAAM+B,QAAQ,GAAG,EAAjB;MACA,IAAMyB,QAAQ,GAAGD,YAAY,YAAYtR,KAAK,CAACwR,MAA/C;MACA,IAAMC,cAAc,GAAGF,QAAQ,GAC3BtQ,OAAO,CAAC6D,IAAR,CAAawM,YAAb,CAD2B,GAE3BhQ,cAAc,CAACoQ,oBAAf,CAAoCJ,YAApC,EAAkDrQ,OAAlD,CAFJ;MAGA6O,QAAQ,CAACnR,IAAT,CAAc,KAAKuQ,MAAL,CAAYuC,cAAc,CAACP,MAAf,CAAsB3V,CAAlC,EAAqCkW,cAAc,CAACP,MAAf,CAAsBhV,CAA3D,EAA8DuV,cAAc,CAACP,MAAf,CAAsB9U,CAApF,EAAuF2R,gBAAvF,CAAd;;MACA,IAAI7U,mBAAmB,CAAC,KAAK0L,OAAN,CAAvB,EAAuC;QACnC,IAAM+M,aAAa,GAAG,KAAKC,sBAAL,CAA4BH,cAAc,CAAC9K,MAA3C,CAAtB;QACAmJ,QAAQ,CAACnR,IAAT,CAAc,KAAKmI,OAAL,CAAa6K,aAAb,EAA4B5D,gBAA5B,CAAd;MACH,CAHD,MAIK,IAAI3U,oBAAoB,CAAC,KAAKwL,OAAN,CAAxB,EAAwC;QACzC,IAAMc,KAAK,GAAG,KAAKd,OAAL,CAAaW,KAAb,GAAqB,KAAKX,OAAL,CAAaY,IAAhD;QACA,IAAMF,MAAM,GAAG,KAAKV,OAAL,CAAae,GAAb,GAAmB,KAAKf,OAAL,CAAagB,MAA/C;QACA,IAAMiM,QAAQ,GAAG,IAAIJ,cAAc,CAAC9K,MAApC;QACA,IAAMlB,IAAI,GAAGnM,IAAI,CAACO,GAAL,CAAS6L,KAAK,GAAGmM,QAAjB,EAA2BvM,MAAM,GAAGuM,QAApC,CAAb;QACA/B,QAAQ,CAACnR,IAAT,CAAc,KAAK8I,MAAL,CAAYhC,IAAZ,EAAkBsI,gBAAlB,CAAd;MACH;;MACD+B,QAAQ,CAACnR,IAAT,CAAc,KAAKkH,cAAL,CAAoB,CAApB,EAAuB,CAAvB,EAA0B,CAA1B,EAA6BkI,gBAA7B,CAAd;MACA,OAAOY,OAAO,CAAC0C,GAAR,CAAYvB,QAAZ,CAAP;IACH;IACD;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;WACI,mBAAUgC,SAAV,EAAqBC,SAArB,EAAgCC,SAAhC,EAA2ChW,OAA3C,EAAoDC,OAApD,EAA6DE,OAA7D,EAAgG;MAAA,IAA1B4R,gBAA0B,uEAAP,KAAO;MAC5F,KAAKpK,wBAAL,GAAgC,KAAhC;MACA,KAAKC,uBAAL,GAA+B,KAA/B;MACA,KAAKC,uBAAL,GAA+B,KAA/B;;MACA,IAAM5I,MAAM,GAAGqF,IAAI,CAAC5C,GAAL,CAAS1B,OAAT,EAAkBC,OAAlB,EAA2BE,OAA3B,CAAf;;MACA,IAAM4I,QAAQ,GAAG1E,IAAI,CAAC3C,GAAL,CAASoU,SAAT,EAAoBC,SAApB,EAA+BC,SAA/B,CAAjB;;MACA,KAAKhL,UAAL,CAAgBlC,IAAhB,CAAqB7J,MAArB;;MACA,KAAKyL,aAAL,CAAmB2B,cAAnB,CAAkCtD,QAAQ,CAACC,GAAT,CAAa/J,MAAb,EAAqBqN,eAArB,CAAqC,KAAKX,aAA1C,CAAlC;;MACA,KAAKsK,kBAAL;MACA,KAAK7O,YAAL,GAAoB,IAApB;;MACA,IAAI,CAAC2K,gBAAL,EAAuB;QACnB,KAAK9I,OAAL,CAAaH,IAAb,CAAkB,KAAKkC,UAAvB;;QACA,KAAKmB,UAAL,CAAgBrD,IAAhB,CAAqB,KAAK4B,aAA1B;MACH;;MACD,IAAMwH,kBAAkB,GAAG,CAACH,gBAAD,IACvB5T,YAAY,CAAC,KAAK8K,OAAL,CAAa1J,CAAd,EAAiB,KAAKyL,UAAL,CAAgBzL,CAAjC,EAAoC,KAAKoH,aAAzC,CAAZ,IACIxI,YAAY,CAAC,KAAK8K,OAAL,CAAa/I,CAAd,EAAiB,KAAK8K,UAAL,CAAgB9K,CAAjC,EAAoC,KAAKyG,aAAzC,CADhB,IAEIxI,YAAY,CAAC,KAAK8K,OAAL,CAAa7I,CAAd,EAAiB,KAAK4K,UAAL,CAAgB5K,CAAjC,EAAoC,KAAKuG,aAAzC,CAFhB,IAGIxI,YAAY,CAAC,KAAKgO,UAAL,CAAgBjC,KAAjB,EAAwB,KAAKQ,aAAL,CAAmBR,KAA3C,EAAkD,KAAKvD,aAAvD,CAHhB,IAIIxI,YAAY,CAAC,KAAKgO,UAAL,CAAgBhC,GAAjB,EAAsB,KAAKO,aAAL,CAAmBP,GAAzC,EAA8C,KAAKxD,aAAnD,CAJhB,IAKIxI,YAAY,CAAC,KAAKgO,UAAL,CAAgBxB,MAAjB,EAAyB,KAAKD,aAAL,CAAmBC,MAA5C,EAAoD,KAAKhE,aAAzD,CANpB;MAOA,OAAO,KAAKwL,oBAAL,CAA0BD,kBAA1B,CAAP;IACH;IACD;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;WACI,oBAAWgE,UAAX,EAAuBC,UAAvB,EAAmCC,UAAnC,EAA+CC,QAA/C,EAAyDC,QAAzD,EAAmEC,QAAnE,EAA6EC,UAA7E,EAAyFC,UAAzF,EAAqGC,UAArG,EAAiHC,QAAjH,EAA2HC,QAA3H,EAAqIC,QAArI,EAA+IC,CAA/I,EAA4K;MAAA,IAA1B/E,gBAA0B,0EAAP,KAAO;MACxK,KAAKpK,wBAAL,GAAgC,KAAhC;MACA,KAAKC,uBAAL,GAA+B,KAA/B;MACA,KAAKC,uBAAL,GAA+B,KAA/B;;MACA,IAAMkP,OAAO,GAAG1S,IAAI,CAAC3C,GAAL,CAAS2U,QAAT,EAAmBC,QAAnB,EAA6BC,QAA7B,CAAhB;;MACA,IAAMS,SAAS,GAAG1S,IAAI,CAAC5C,GAAL,CAASwU,UAAT,EAAqBC,UAArB,EAAiCC,UAAjC,CAAlB;;MACAvR,WAAW,CAACwH,cAAZ,CAA2B2K,SAAS,CAAChO,GAAV,CAAc+N,OAAd,EAAuBzK,eAAvB,CAAuC,KAAKX,aAA5C,CAA3B;;MACA,IAAMsL,OAAO,GAAG1S,IAAI,CAAC7C,GAAL,CAASiV,QAAT,EAAmBC,QAAnB,EAA6BC,QAA7B,CAAhB;;MACA,IAAMK,SAAS,GAAG5S,IAAI,CAAC5C,GAAL,CAAS8U,UAAT,EAAqBC,UAArB,EAAiCC,UAAjC,CAAlB;;MACA5R,WAAW,CAACuH,cAAZ,CAA2B6K,SAAS,CAAClO,GAAV,CAAciO,OAAd,EAAuB3K,eAAvB,CAAuC,KAAKX,aAA5C,CAA3B;;MACA,KAAKX,UAAL,CAAgBlC,IAAhB,CAAqBiO,OAAO,CAACI,IAAR,CAAaF,OAAb,EAAsBH,CAAtB,CAArB,EAVwK,CAUxH;;;MAChD,IAAMM,UAAU,GAAGtS,WAAW,CAACoF,KAAZ,GAAoBrF,WAAW,CAACqF,KAAnD;MACA,IAAMmN,QAAQ,GAAGvS,WAAW,CAACqF,GAAZ,GAAkBtF,WAAW,CAACsF,GAA/C;MACA,IAAMmN,WAAW,GAAGxS,WAAW,CAAC6F,MAAZ,GAAqB9F,WAAW,CAAC8F,MAArD;;MACA,KAAKD,aAAL,CAAmBhJ,GAAnB,CAAuBmD,WAAW,CAAC8F,MAAZ,GAAqB2M,WAAW,GAAGR,CAA1D,EAA6DjS,WAAW,CAACsF,GAAZ,GAAkBkN,QAAQ,GAAGP,CAA1F,EAA6FjS,WAAW,CAACqF,KAAZ,GAAoBkN,UAAU,GAAGN,CAA9H;;MACA,KAAKb,kBAAL;MACA,KAAK7O,YAAL,GAAoB,IAApB;;MACA,IAAI,CAAC2K,gBAAL,EAAuB;QACnB,KAAK9I,OAAL,CAAaH,IAAb,CAAkB,KAAKkC,UAAvB;;QACA,KAAKmB,UAAL,CAAgBrD,IAAhB,CAAqB,KAAK4B,aAA1B;MACH;;MACD,IAAMwH,kBAAkB,GAAG,CAACH,gBAAD,IACvB5T,YAAY,CAAC,KAAK8K,OAAL,CAAa1J,CAAd,EAAiB,KAAKyL,UAAL,CAAgBzL,CAAjC,EAAoC,KAAKoH,aAAzC,CAAZ,IACIxI,YAAY,CAAC,KAAK8K,OAAL,CAAa/I,CAAd,EAAiB,KAAK8K,UAAL,CAAgB9K,CAAjC,EAAoC,KAAKyG,aAAzC,CADhB,IAEIxI,YAAY,CAAC,KAAK8K,OAAL,CAAa7I,CAAd,EAAiB,KAAK4K,UAAL,CAAgB5K,CAAjC,EAAoC,KAAKuG,aAAzC,CAFhB,IAGIxI,YAAY,CAAC,KAAKgO,UAAL,CAAgBjC,KAAjB,EAAwB,KAAKQ,aAAL,CAAmBR,KAA3C,EAAkD,KAAKvD,aAAvD,CAHhB,IAIIxI,YAAY,CAAC,KAAKgO,UAAL,CAAgBhC,GAAjB,EAAsB,KAAKO,aAAL,CAAmBP,GAAzC,EAA8C,KAAKxD,aAAnD,CAJhB,IAKIxI,YAAY,CAAC,KAAKgO,UAAL,CAAgBxB,MAAjB,EAAyB,KAAKD,aAAL,CAAmBC,MAA5C,EAAoD,KAAKhE,aAAzD,CANpB;MAOA,OAAO,KAAKwL,oBAAL,CAA0BD,kBAA1B,CAAP;IACH;IACD;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;WACI,qBAAY4D,SAAZ,EAAuBC,SAAvB,EAAkCC,SAAlC,EAAuE;MAAA,IAA1BjE,gBAA0B,uEAAP,KAAO;MACnE,OAAO,KAAKwF,SAAL,CAAezB,SAAf,EAA0BC,SAA1B,EAAqCC,SAArC,EAAgD,KAAKhL,UAAL,CAAgBzL,CAAhE,EAAmE,KAAKyL,UAAL,CAAgB9K,CAAnF,EAAsF,KAAK8K,UAAL,CAAgB5K,CAAtG,EAAyG2R,gBAAzG,CAAP;IACH;IACD;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;WACI,mBAAU/R,OAAV,EAAmBC,OAAnB,EAA4BE,OAA5B,EAA+D;MAAA,IAA1B4R,gBAA0B,uEAAP,KAAO;MAC3D,IAAMyF,GAAG,GAAG,KAAKC,WAAL,CAAiBpT,IAAjB,CAAZ;MACA,IAAMqT,OAAO,GAAG,KAAKH,SAAL,CAAeC,GAAG,CAACjY,CAAnB,EAAsBiY,GAAG,CAACtX,CAA1B,EAA6BsX,GAAG,CAACpX,CAAjC,EAAoCJ,OAApC,EAA6CC,OAA7C,EAAsDE,OAAtD,EAA+D4R,gBAA/D,CAAhB,CAF2D,CAG3D;;MACA,KAAKrH,aAAL,CAAmBP,GAAnB,GAAyBxM,KAAK,CAAC,KAAKkU,UAAN,EAAkB,KAAKrM,aAAvB,EAAsC,KAAKC,aAA3C,CAA9B;MACA,OAAOiS,OAAP;IACH;IACD;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;;;;WACI,wBAAenY,CAAf,EAAkBW,CAAlB,EAAqBE,CAArB,EAAkD;MAAA,IAA1B2R,gBAA0B,uEAAP,KAAO;MAC9C,KAAKjK,wBAAL,GAAgC,KAAhC;;MACA,KAAKgC,eAAL,CAAqBpI,GAArB,CAAyBnC,CAAzB,EAA4BW,CAA5B,EAA+BE,CAA/B;;MACA,KAAKgH,YAAL,GAAoB,IAApB;MACA,IAAI,CAAC2K,gBAAL,EACI,KAAK7F,YAAL,CAAkBpD,IAAlB,CAAuB,KAAKgB,eAA5B;MACJ,IAAMoI,kBAAkB,GAAG,CAACH,gBAAD,IACvB5T,YAAY,CAAC,KAAK+N,YAAL,CAAkB3M,CAAnB,EAAsB,KAAKuK,eAAL,CAAqBvK,CAA3C,EAA8C,KAAKoH,aAAnD,CAAZ,IACIxI,YAAY,CAAC,KAAK+N,YAAL,CAAkBhM,CAAnB,EAAsB,KAAK4J,eAAL,CAAqB5J,CAA3C,EAA8C,KAAKyG,aAAnD,CADhB,IAEIxI,YAAY,CAAC,KAAK+N,YAAL,CAAkB9L,CAAnB,EAAsB,KAAK0J,eAAL,CAAqB1J,CAA3C,EAA8C,KAAKuG,aAAnD,CAHpB;MAIA,OAAO,KAAKwL,oBAAL,CAA0BD,kBAA1B,CAAP;IACH;IACD;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;;;;WACI,uBAAclS,OAAd,EAAuBC,OAAvB,EAAgCE,OAAhC,EAAyC;MACrC,KAAKyI,OAAL,CAAa+O,iBAAb;;MACAnT,QAAQ,CAACuO,mBAAT,CAA6B,KAAKnK,OAAL,CAAagP,kBAA1C,EAA8D,CAA9D;;MACAnT,QAAQ,CAACsO,mBAAT,CAA6B,KAAKnK,OAAL,CAAagP,kBAA1C,EAA8D,CAA9D;;MACAlT,QAAQ,CAACqO,mBAAT,CAA6B,KAAKnK,OAAL,CAAagP,kBAA1C,EAA8D,CAA9D;;MACA,IAAM7O,QAAQ,GAAG1E,IAAI,CAAC3C,GAAL,CAAS1B,OAAT,EAAkBC,OAAlB,EAA2BE,OAA3B,CAAjB;;MACA,IAAMsK,QAAQ,GAAG1B,QAAQ,CAAC8O,UAAT,CAAoB,KAAKjP,OAAL,CAAaG,QAAjC,CAAjB;MACA,IAAM+O,aAAa,GAAG/O,QAAQ,CAACC,GAAT,CAAa,KAAKJ,OAAL,CAAaG,QAA1B,CAAtB;;MACAvE,QAAQ,CAAC2G,cAAT,CAAwB2M,aAAa,CAACvY,CAAtC;;MACAkF,QAAQ,CAAC0G,cAAT,CAAwB2M,aAAa,CAAC5X,CAAtC;;MACAwE,QAAQ,CAACyG,cAAT,CAAwB2M,aAAa,CAAC1X,CAAtC;;MACAiE,IAAI,CAACyE,IAAL,CAAUtE,QAAV,EAAoByG,GAApB,CAAwBxG,QAAxB,EAAkCwG,GAAlC,CAAsCvG,QAAtC;;MACAL,IAAI,CAACjE,CAAL,GAASiE,IAAI,CAACjE,CAAL,GAASqK,QAAlB;MACA,KAAKK,OAAL,CAAaL,QAAb,EAAuB,KAAvB;MACA,KAAKZ,cAAL,CAAoB,CAACxF,IAAI,CAAC9E,CAA1B,EAA6B8E,IAAI,CAACnE,CAAlC,EAAqC,CAACmE,IAAI,CAACjE,CAA3C,EAA8C,KAA9C;MACA,KAAK8S,MAAL,CAAYlT,OAAZ,EAAqBC,OAArB,EAA8BE,OAA9B,EAAuC,KAAvC;IACH;IACD;AACJ;AACA;AACA;AACA;;;;WACI,qBAAY4X,IAAZ,EAAkB;MACd,IAAI,CAACA,IAAL,EAAW;QACP,KAAKtL,SAAL,CAAe5O,GAAf,CAAmB6D,GAAnB,CAAuB,CAAC5C,QAAxB,EAAkC,CAACA,QAAnC,EAA6C,CAACA,QAA9C;;QACA,KAAK2N,SAAL,CAAe3O,GAAf,CAAmB4D,GAAnB,CAAuB5C,QAAvB,EAAiCA,QAAjC,EAA2CA,QAA3C;;QACA,KAAKsI,YAAL,GAAoB,IAApB;QACA;MACH;;MACD,KAAKqF,SAAL,CAAe3D,IAAf,CAAoBiP,IAApB;;MACA,KAAKtL,SAAL,CAAeuL,UAAf,CAA0B,KAAKhN,UAA/B,EAA2C,KAAKA,UAAhD;;MACA,KAAK5D,YAAL,GAAoB,IAApB;IACH;IACD;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;WACI,qBAAY6Q,WAAZ,EAAyB/X,CAAzB,EAA4BwJ,KAA5B,EAAmCJ,MAAnC,EAA2C;MACvC,IAAI2O,WAAW,KAAK,IAApB,EAA0B;QAAE;QACxB,KAAKjR,SAAL,GAAiB,IAAjB;QACA;MACH;;MACD,KAAKA,SAAL,GAAiB,KAAKA,SAAL,IAAkB,IAAIhD,KAAK,CAACkU,OAAV,EAAnC;;MACA,IAAI,OAAOD,WAAP,KAAuB,QAA3B,EAAqC;QAAE;QACnC,KAAKjR,SAAL,CAAetF,GAAf,CAAmBuW,WAAnB,EAAgC/X,CAAhC,EAAmCwJ,KAAnC,EAA0CJ,MAA1C;MACH,CAFD,MAGK;QAAE;QACH,KAAKtC,SAAL,CAAe8B,IAAf,CAAoBmP,WAApB;MACH;IACJ;IACD;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;;;;WACI,6BAAoBvO,KAApB,EAA2BJ,MAA3B,EAAmC6O,KAAnC,EAAyD;MAAA,IAAf1E,KAAe,uEAAP,KAAO;MACrD,IAAIzR,gCAAgC,CAAC,KAAK4G,OAAN,EAAe,qBAAf,CAApC,EACI,OAAO,KAAKuD,UAAL,CAAgBxB,MAAvB;MACJ,IAAMyN,kBAAkB,GAAG1O,KAAK,GAAGJ,MAAnC;MACA,IAAMJ,GAAG,GAAG,KAAKN,OAAL,CAAaO,eAAb,KAAiCzL,OAA7C;MACA,IAAM2a,MAAM,GAAG,KAAKzP,OAAL,CAAayP,MAA5B;MACA,IAAMC,WAAW,GAAG,CAAC7E,KAAK,GAAG2E,kBAAkB,GAAGC,MAAxB,GAAiCD,kBAAkB,GAAGC,MAA5D,IAAsE/O,MAAtE,GAA+EI,KAAK,GAAG2O,MAA3G;MACA,OAAOC,WAAW,GAAG,GAAd,GAAoBhb,IAAI,CAAC+L,GAAL,CAASH,GAAG,GAAG,GAAf,CAApB,GAA0CiP,KAAK,GAAG,GAAzD;IACH;IACD;AACJ;AACA;AACA;AACA;AACA;;;;WACI,gCAAuBxN,MAAvB,EAA+B;MAC3B,IAAI3I,gCAAgC,CAAC,KAAK4G,OAAN,EAAe,wBAAf,CAApC,EACI,OAAO,KAAKuD,UAAL,CAAgBxB,MAAvB,CAFuB,CAG3B;;MACA,IAAM4N,IAAI,GAAG,KAAK3P,OAAL,CAAaO,eAAb,KAAiCzL,OAA9C;MACA,IAAM8a,IAAI,GAAGlb,IAAI,CAACmb,IAAL,CAAUnb,IAAI,CAAC+L,GAAL,CAASkP,IAAI,GAAG,GAAhB,IAAuB,KAAK3P,OAAL,CAAayP,MAA9C,IAAwD,CAArE;MACA,IAAMnP,GAAG,GAAG,IAAI,KAAKN,OAAL,CAAayP,MAAjB,GAA0BE,IAA1B,GAAiCC,IAA7C;MACA,OAAO7N,MAAM,GAAIrN,IAAI,CAACob,GAAL,CAASxP,GAAG,GAAG,GAAf,CAAjB;IACH;IACD;AACJ;AACA;AACA;AACA;;;;WACI,mBAAUnJ,GAAV,EAAe;MACX,IAAM4Y,IAAI,GAAG,CAAC,CAAC5Y,GAAF,IAASA,GAAG,CAAC6Y,SAAb,GAAyB7Y,GAAzB,GAA+B,IAAIiE,KAAK,CAACoE,OAAV,EAA5C;;MACA,OAAOuQ,IAAI,CAAC7P,IAAL,CAAU,KAAKkC,UAAf,CAAP;IACH;IACD;AACJ;AACA;AACA;AACA;;;;WACI,qBAAYjL,GAAZ,EAAiB;MACb,IAAM4Y,IAAI,GAAG,CAAC,CAAC5Y,GAAF,IAASA,GAAG,CAAC6Y,SAAb,GAAyB7Y,GAAzB,GAA+B,IAAIiE,KAAK,CAACoE,OAAV,EAA5C;;MACA,OAAOuQ,IAAI,CAACvE,gBAAL,CAAsB,KAAK1J,aAA3B,EAA0C4B,eAA1C,CAA0D,KAAKP,oBAA/D,EAAqFd,GAArF,CAAyF,KAAKD,UAA9F,CAAP;IACH;IACD;AACJ;AACA;AACA;AACA;;;;WACI,wBAAejL,GAAf,EAAoB;MAChB,IAAM4Y,IAAI,GAAG,CAAC,CAAC5Y,GAAF,IAASA,GAAG,CAAC6Y,SAAb,GAAyB7Y,GAAzB,GAA+B,IAAIiE,KAAK,CAACoE,OAAV,EAA5C;;MACA,OAAOuQ,IAAI,CAAC7P,IAAL,CAAU,KAAKgB,eAAf,CAAP;IACH;IACD;AACJ;AACA;AACA;;;;WACI,8BAAqB;MACjB,KAAKY,aAAL,CAAmBR,KAAnB,GAA2B,KAAKQ,aAAL,CAAmBR,KAAnB,GAA2B7M,IAAtD;MACA,IAAI,KAAKqN,aAAL,CAAmBR,KAAnB,GAA2B,CAA/B,EACI,KAAKQ,aAAL,CAAmBR,KAAnB,IAA4B7M,IAA5B;MACJ,KAAK8O,UAAL,CAAgBjC,KAAhB,IAAyB7M,IAAI,GAAGC,IAAI,CAACkB,KAAL,CAAW,CAAC,KAAKkM,aAAL,CAAmBR,KAAnB,GAA2B,KAAKiC,UAAL,CAAgBjC,KAA5C,IAAqD7M,IAAhE,CAAhC;IACH;IACD;AACJ;AACA;AACA;AACA;;;;WACI,iBAAgC;MAAA,IAA1B0U,gBAA0B,uEAAP,KAAO;;MAC5B,IAAI,CAAC5T,YAAY,CAAC,KAAKyK,OAAL,CAAakD,EAAb,CAAgBvM,CAAjB,EAAoB,KAAKoN,UAAL,CAAgBpN,CAApC,CAAb,IACA,CAACpB,YAAY,CAAC,KAAKyK,OAAL,CAAakD,EAAb,CAAgB5L,CAAjB,EAAoB,KAAKyM,UAAL,CAAgBzM,CAApC,CADb,IAEA,CAAC/B,YAAY,CAAC,KAAKyK,OAAL,CAAakD,EAAb,CAAgB1L,CAAjB,EAAoB,KAAKuM,UAAL,CAAgBvM,CAApC,CAFjB,EAEyD;QACrD,KAAKwI,OAAL,CAAakD,EAAb,CAAgBhD,IAAhB,CAAqB,KAAK6D,UAA1B;;QACA,IAAM5D,QAAQ,GAAG,KAAK0O,WAAL,CAAiBpT,IAAjB,CAAjB;QACA,KAAKoN,cAAL;QACA,KAAK8B,WAAL,CAAiBxK,QAAQ,CAACxJ,CAA1B,EAA6BwJ,QAAQ,CAAC7I,CAAtC,EAAyC6I,QAAQ,CAAC3I,CAAlD;MACH;;MACD,IAAM0T,QAAQ,GAAG,CACb,KAAKyD,SAAL,CAAe,KAAK1K,UAAL,CAAgBtN,CAA/B,EAAkC,KAAKsN,UAAL,CAAgB3M,CAAlD,EAAqD,KAAK2M,UAAL,CAAgBzM,CAArE,EAAwE,KAAKwM,QAAL,CAAcrN,CAAtF,EAAyF,KAAKqN,QAAL,CAAc1M,CAAvG,EAA0G,KAAK0M,QAAL,CAAcxM,CAAxH,EAA2H2R,gBAA3H,CADa,EAEb,KAAKlI,cAAL,CAAoB,KAAKkD,aAAL,CAAmBxN,CAAvC,EAA0C,KAAKwN,aAAL,CAAmB7M,CAA7D,EAAgE,KAAK6M,aAAL,CAAmB3M,CAAnF,EAAsF2R,gBAAtF,CAFa,EAGb,KAAKtG,MAAL,CAAY,KAAKqB,MAAjB,EAAyBiF,gBAAzB,CAHa,CAAjB;MAKA,OAAOY,OAAO,CAAC0C,GAAR,CAAYvB,QAAZ,CAAP;IACH;IACD;AACJ;AACA;AACA;;;;WACI,qBAAY;MACR,KAAKnH,UAAL,CAAgB7D,IAAhB,CAAqB,KAAKF,OAAL,CAAakD,EAAlC;;MACA,KAAK+M,SAAL,CAAe,KAAKjM,QAApB;MACA,KAAK6K,WAAL,CAAiB,KAAK5K,UAAtB;MACA,KAAKC,MAAL,GAAc,KAAKpB,KAAnB;;MACA,KAAKqB,aAAL,CAAmBjE,IAAnB,CAAwB,KAAKoD,YAA7B;IACH;IACD;AACJ;AACA;AACA;AACA;;;;WACI,0BAAiB;MACb,KAAKP,aAAL,CAAmBE,kBAAnB,CAAsC,KAAKjD,OAAL,CAAakD,EAAnD,EAAuD5H,OAAvD;;MACA,KAAK6H,oBAAL,CAA0BjD,IAA1B,CAA+B,KAAK6C,aAApC,EAAmDM,MAAnD;IACH;IACD;AACJ;AACA;AACA;AACA;;;;WACI,yBAAgB;MACZ,IAAM6M,eAAe,GAAGzU,IAAI,CAAC0U,UAAL,CAAgB,KAAK9P,OAArB,EAA8B,KAAKL,OAAL,CAAaG,QAA3C,EAAqDmC,SAArD,EAAxB,CADY,CAEZ;MACA;;;MACA,IAAM8N,IAAI,GAAG1U,IAAI,CAAC6O,YAAL,CAAkB2F,eAAlB,EAAmC,KAAKlQ,OAAL,CAAakD,EAAhD,EAAoDZ,SAApD,EAAb,CAJY,CAKZ;MACA;;;MACA,KAAKtC,OAAL,CAAakD,EAAb,CAAgBqH,YAAhB,CAA6B6F,IAA7B,EAAmCF,eAAnC,EAAoD5N,SAApD;;MACA,KAAKtC,OAAL,CAAa+O,iBAAb;;MACA,IAAM5O,QAAQ,GAAG,KAAK0O,WAAL,CAAiBpT,IAAjB,CAAjB;MACA,KAAKoN,cAAL;MACA,KAAK8B,WAAL,CAAiBxK,QAAQ,CAACxJ,CAA1B,EAA6BwJ,QAAQ,CAAC7I,CAAtC,EAAyC6I,QAAQ,CAAC3I,CAAlD;IACH;IACD;AACJ;AACA;AACA;AACA;AACA;AACA;;;;WACI,gBAAOkK,KAAP,EAAc;MACV,IAAM8M,UAAU,GAAG,KAAK1M,aAAL,CAAmBR,KAAnB,GAA2B,KAAKiC,UAAL,CAAgBjC,KAA9D;MACA,IAAMmN,QAAQ,GAAG,KAAK3M,aAAL,CAAmBP,GAAnB,GAAyB,KAAKgC,UAAL,CAAgBhC,GAA1D;MACA,IAAMmN,WAAW,GAAG,KAAK5M,aAAL,CAAmBC,MAAnB,GAA4B,KAAKwB,UAAL,CAAgBxB,MAAhE;;MACA,IAAMsO,WAAW,GAAGtU,YAAY,CAACoU,UAAb,CAAwB,KAAK/N,UAA7B,EAAyC,KAAK/B,OAA9C,CAApB;;MACA,IAAMiQ,WAAW,GAAGtU,YAAY,CAACmU,UAAb,CAAwB,KAAKjP,eAA7B,EAA8C,KAAKoC,YAAnD,CAApB;;MACA,IAAMiN,SAAS,GAAG,KAAK3N,QAAL,GAAgB,KAAKE,KAAvC,CANU,CAOV;;MACA,IAAI3N,UAAU,CAACqZ,UAAD,CAAd,EAA4B;QACxB,KAAKpP,cAAL,CAAoBpK,KAApB,GAA4B,CAA5B;QACA,KAAKuO,UAAL,CAAgBjC,KAAhB,GAAwB,KAAKQ,aAAL,CAAmBR,KAA3C;MACH,CAHD,MAIK;QACD,IAAM/K,UAAU,GAAG,KAAKwI,wBAAL,GAAgC,KAAK1B,kBAArC,GAA0D,KAAK9G,UAAlF;QACA,KAAKgN,UAAL,CAAgBjC,KAAhB,GAAwBnL,UAAU,CAAC,KAAKoN,UAAL,CAAgBjC,KAAjB,EAAwB,KAAKQ,aAAL,CAAmBR,KAA3C,EAAkD,KAAKlC,cAAvD,EAAuE7I,UAAvE,EAAmFL,QAAnF,EAA6FwL,KAA7F,CAAlC;QACA,KAAKlD,YAAL,GAAoB,IAApB;MACH,CAhBS,CAiBV;;;MACA,IAAIrJ,UAAU,CAACsZ,QAAD,CAAd,EAA0B;QACtB,KAAKpP,YAAL,CAAkBrK,KAAlB,GAA0B,CAA1B;QACA,KAAKuO,UAAL,CAAgBhC,GAAhB,GAAsB,KAAKO,aAAL,CAAmBP,GAAzC;MACH,CAHD,MAIK;QACD,IAAMhL,WAAU,GAAG,KAAKwI,wBAAL,GAAgC,KAAK1B,kBAArC,GAA0D,KAAK9G,UAAlF;;QACA,KAAKgN,UAAL,CAAgBhC,GAAhB,GAAsBpL,UAAU,CAAC,KAAKoN,UAAL,CAAgBhC,GAAjB,EAAsB,KAAKO,aAAL,CAAmBP,GAAzC,EAA8C,KAAKlC,YAAnD,EAAiE9I,WAAjE,EAA6EL,QAA7E,EAAuFwL,KAAvF,CAAhC;QACA,KAAKlD,YAAL,GAAoB,IAApB;MACH,CA1BS,CA2BV;;;MACA,IAAIrJ,UAAU,CAACuZ,WAAD,CAAd,EAA6B;QACzB,KAAKpP,eAAL,CAAqBtK,KAArB,GAA6B,CAA7B;QACA,KAAKuO,UAAL,CAAgBxB,MAAhB,GAAyB,KAAKD,aAAL,CAAmBC,MAA5C;MACH,CAHD,MAIK;QACD,IAAMxL,YAAU,GAAG,KAAKyI,uBAAL,GAA+B,KAAK3B,kBAApC,GAAyD,KAAK9G,UAAjF;;QACA,KAAKgN,UAAL,CAAgBxB,MAAhB,GAAyB5L,UAAU,CAAC,KAAKoN,UAAL,CAAgBxB,MAAjB,EAAyB,KAAKD,aAAL,CAAmBC,MAA5C,EAAoD,KAAKzC,eAAzD,EAA0E/I,YAA1E,EAAsF,KAAKC,QAA3F,EAAqGkL,KAArG,CAAnC;QACA,KAAKlD,YAAL,GAAoB,IAApB;MACH,CApCS,CAqCV;;;MACA,IAAIrJ,UAAU,CAACkb,WAAW,CAAC1Z,CAAb,CAAV,IAA6BxB,UAAU,CAACkb,WAAW,CAAC/Y,CAAb,CAAvC,IAA0DnC,UAAU,CAACkb,WAAW,CAAC7Y,CAAb,CAAxE,EAAyF;QACrF,KAAK+H,eAAL,CAAqBzG,GAArB,CAAyB,CAAzB,EAA4B,CAA5B,EAA+B,CAA/B;;QACA,KAAKuH,OAAL,CAAaH,IAAb,CAAkB,KAAKkC,UAAvB;MACH,CAHD,MAIK;QACD,IAAM7L,YAAU,GAAG,KAAK0I,uBAAL,GAA+B,KAAK5B,kBAApC,GAAyD,KAAK9G,UAAjF;;QACAW,cAAc,CAAC,KAAKmJ,OAAN,EAAe,KAAK+B,UAApB,EAAgC,KAAK7C,eAArC,EAAsDhJ,YAAtD,EAAkE,KAAKC,QAAvE,EAAiFkL,KAAjF,EAAwF,KAAKrB,OAA7F,CAAd;QACA,KAAK7B,YAAL,GAAoB,IAApB;MACH,CA9CS,CA+CV;;;MACA,IAAIrJ,UAAU,CAACmb,WAAW,CAAC3Z,CAAb,CAAV,IAA6BxB,UAAU,CAACmb,WAAW,CAAChZ,CAAb,CAAvC,IAA0DnC,UAAU,CAACmb,WAAW,CAAC9Y,CAAb,CAAxE,EAAyF;QACrF,KAAKiI,oBAAL,CAA0B3G,GAA1B,CAA8B,CAA9B,EAAiC,CAAjC,EAAoC,CAApC;;QACA,KAAKwK,YAAL,CAAkBpD,IAAlB,CAAuB,KAAKgB,eAA5B;MACH,CAHD,MAIK;QACD,IAAM3K,YAAU,GAAG,KAAK2I,wBAAL,GAAgC,KAAK7B,kBAArC,GAA0D,KAAK9G,UAAlF;;QACAW,cAAc,CAAC,KAAKoM,YAAN,EAAoB,KAAKpC,eAAzB,EAA0C,KAAKzB,oBAA/C,EAAqElJ,YAArE,EAAiF,KAAKC,QAAtF,EAAgGkL,KAAhG,EAAuG,KAAK4B,YAA5G,CAAd;QACA,KAAK9E,YAAL,GAAoB,IAApB;MACH;;MACD,IAAI,KAAKH,mBAAL,KAA6B,CAAjC,EAAoC;QAChC,IAAI/J,mBAAmB,CAAC,KAAK0L,OAAN,CAAvB,EAAuC;UACnC,IAAMzL,MAAM,GAAG,KAAKyL,OAApB;;UACA,IAAMkQ,eAAe,GAAGzU,IAAI,CAAC+P,gBAAL,CAAsB,KAAKjI,UAA3B,EAAuCG,eAAvC,CAAuD,KAAKP,oBAA5D,EAAkFb,SAAlF,GAA8FkO,MAA9F,EAAxB;;UACA,IAAMC,MAAM,GAAG/U,IAAI,CAACwE,IAAL,CAAUgQ,eAAV,EAA2BQ,KAA3B,CAAiCnc,MAAM,CAAC2O,EAAxC,EAA4CZ,SAA5C,EAAf;;UACA,IAAImO,MAAM,CAACE,QAAP,OAAsB,CAA1B,EACIF,MAAM,CAAC9Z,CAAP,GAAW,GAAX;;UACJ,IAAMia,MAAM,GAAGjV,IAAI,CAAC4O,YAAL,CAAkBkG,MAAlB,EAA0BP,eAA1B,CAAf;;UACA,IAAMW,aAAa,GAAG,KAAK/O,aAAL,CAAmBC,MAAnB,GAA4BrN,IAAI,CAAC+L,GAAL,CAASlM,MAAM,CAACgM,eAAP,KAA2BzL,OAA3B,GAAqC,GAA9C,CAAlD;UACA,IAAMkN,UAAU,GAAG,KAAKF,aAAL,CAAmBC,MAAnB,GAA4B,KAAK1D,mBAApD;UACA,IAAMyS,SAAS,GAAG,CAAC9O,UAAU,GAAG,KAAKF,aAAL,CAAmBC,MAAjC,IAA2C,KAAKD,aAAL,CAAmBC,MAAhF;;UACA,IAAMgP,MAAM,GAAGtV,IAAI,CAACyE,IAAL,CAAU,KAAKkC,UAAf,EACVC,GADU,CACNoO,MAAM,CAAClO,cAAP,CAAsB,KAAKC,kBAAL,CAAwB7L,CAAxB,GAA4Bka,aAA5B,GAA4Ctc,MAAM,CAACkb,MAAzE,CADM,EAEVpN,GAFU,CAENuO,MAAM,CAACrO,cAAP,CAAsB,KAAKC,kBAAL,CAAwBlL,CAAxB,GAA4BuZ,aAAlD,CAFM,CAAf;;UAGA,KAAKzO,UAAL,CAAgBmM,IAAhB,CAAqBwC,MAArB,EAA6BD,SAA7B;QACH,CAdD,MAeK,IAAItc,oBAAoB,CAAC,KAAKwL,OAAN,CAAxB,EAAwC;UACzC,IAAMzL,QAAM,GAAG,KAAKyL,OAApB;;UACA,IAAMgR,mBAAmB,GAAGvV,IAAI,CAAC3C,GAAL,CAAS,KAAK0J,kBAAL,CAAwB7L,CAAjC,EAAoC,KAAK6L,kBAAL,CAAwBlL,CAA5D,EAA+D,CAAC/C,QAAM,CAAC0c,IAAP,GAAc1c,QAAM,CAAC2c,GAAtB,KAA8B3c,QAAM,CAAC0c,IAAP,GAAc1c,QAAM,CAAC2c,GAAnD,CAA/D,EAAwHC,SAAxH,CAAkI5c,QAAlI,CAA5B,CAFyC,CAE8H;;;UACvK,IAAM6c,UAAU,GAAG1V,IAAI,CAAC5C,GAAL,CAAS,CAAT,EAAY,CAAZ,EAAe,CAAC,CAAhB,EAAmB4K,eAAnB,CAAmCnP,QAAM,CAAC6c,UAA1C,CAAnB;;UACA,IAAML,OAAM,GAAGpV,IAAI,CAACuE,IAAL,CAAU8Q,mBAAV,EAA+B3O,GAA/B,CAAmC+O,UAAU,CAAC7O,cAAX,CAA0B,CAACyO,mBAAmB,CAACK,GAApB,CAAwB9c,QAAM,CAAC2O,EAA/B,CAA3B,CAAnC,CAAf;;UACA,IAAMP,QAAQ,GAAG,KAAKG,KAAL,GAAa,KAAKzE,mBAAnC;;UACA,IAAMyS,UAAS,GAAG,EAAEnO,QAAQ,GAAG,KAAKC,QAAlB,IAA8B,KAAKE,KAArD,CANyC,CAOzC;UACA;UACA;;;UACA,IAAMoN,gBAAe,GAAGzU,IAAI,CAAC+P,gBAAL,CAAsB,KAAKjI,UAA3B,EAAuCG,eAAvC,CAAuD,KAAKP,oBAA5D,EAAkFb,SAAlF,GAA8FkO,MAA9F,EAAxB;;UACA,IAAMc,iBAAiB,GAAG,KAAKlP,UAAL,CAAgBiP,GAAhB,CAAoBnB,gBAApB,CAA1B;;UACA,KAAK9N,UAAL,CAAgBmM,IAAhB,CAAqBwC,OAArB,EAA6BD,UAA7B;;UACA,IAAMS,gBAAgB,GAAG,KAAKnP,UAAL,CAAgBiP,GAAhB,CAAoBnB,gBAApB,CAAzB,CAbyC,CAczC;;;UACA,IAAMsB,QAAQ,GAAGtB,gBAAe,CAAC3N,cAAhB,CAA+BgP,gBAAgB,GAAGD,iBAAlD,CAAjB;;UACA,KAAKlP,UAAL,CAAgBhC,GAAhB,CAAoBoR,QAApB;QACH;;QACD,KAAKnR,OAAL,CAAaH,IAAb,CAAkB,KAAKkC,UAAvB,EAlCgC,CAmChC;;;QACA,KAAKyB,SAAL,CAAeuL,UAAf,CAA0B,KAAKhN,UAA/B,EAA2C,KAAKA,UAAhD;;QACA,KAAK/D,mBAAL,GAA2B,CAA3B;MACH,CA/FS,CAgGV;;;MACA,IAAIlJ,UAAU,CAACob,SAAD,CAAd,EAA2B;QACvB,KAAK7Q,aAAL,CAAmB1K,KAAnB,GAA2B,CAA3B;QACA,KAAK8N,KAAL,GAAa,KAAKF,QAAlB;MACH,CAHD,MAIK;QACD,IAAMrM,YAAU,GAAG,KAAK4I,sBAAL,GAA8B,KAAK9B,kBAAnC,GAAwD,KAAK9G,UAAhF;;QACA,KAAKuM,KAAL,GAAa3M,UAAU,CAAC,KAAK2M,KAAN,EAAa,KAAKF,QAAlB,EAA4B,KAAKlD,aAAjC,EAAgDnJ,YAAhD,EAA4DL,QAA5D,EAAsEwL,KAAtE,CAAvB;MACH;;MACD,IAAI,KAAK1B,OAAL,CAAaa,IAAb,KAAsB,KAAKiC,KAA/B,EAAsC;QAClC,KAAK9C,OAAL,CAAaa,IAAb,GAAoB,KAAKiC,KAAzB;;QACA,KAAK9C,OAAL,CAAa8I,sBAAb;;QACA,KAAKlF,uBAAL;;QACA,KAAKpF,YAAL,GAAoB,IAApB;MACH,CA9GS,CA+GV;;;MACA,IAAMvB,WAAW,GAAG,KAAK2M,cAAL,EAApB;;MACA,KAAKrG,UAAL,CAAgBxB,MAAhB,GAAyBrN,IAAI,CAACO,GAAL,CAAS,KAAKsO,UAAL,CAAgBxB,MAAzB,EAAiC9E,WAAjC,CAAzB,CAjHU,CAkHV;;MACA,KAAKsG,UAAL,CAAgB8F,QAAhB;;MACA,KAAKrJ,OAAL,CAAaG,QAAb,CAAsBqL,gBAAtB,CAAuC,KAAKjI,UAA5C,EAAwDG,eAAxD,CAAwE,KAAKP,oBAA7E,EAAmGd,GAAnG,CAAuG,KAAKhC,OAA5G;;MACA,KAAKL,OAAL,CAAayR,MAAb,CAAoB,KAAKpR,OAAzB,EArHU,CAsHV;;;MACA,IAAMqR,YAAY,GAAG,CAACvc,UAAU,CAAC,KAAKmO,YAAL,CAAkB3M,CAAnB,CAAX,IACjB,CAACxB,UAAU,CAAC,KAAKmO,YAAL,CAAkBhM,CAAnB,CADM,IAEjB,CAACnC,UAAU,CAAC,KAAKmO,YAAL,CAAkB9L,CAAnB,CAFf;;MAGA,IAAIka,YAAJ,EAAkB;QACd,KAAK1R,OAAL,CAAa+O,iBAAb;;QACAnT,QAAQ,CAACuO,mBAAT,CAA6B,KAAKnK,OAAL,CAAaoK,MAA1C,EAAkD,CAAlD;;QACAvO,QAAQ,CAACsO,mBAAT,CAA6B,KAAKnK,OAAL,CAAaoK,MAA1C,EAAkD,CAAlD;;QACAtO,QAAQ,CAACqO,mBAAT,CAA6B,KAAKnK,OAAL,CAAaoK,MAA1C,EAAkD,CAAlD;;QACAxO,QAAQ,CAAC2G,cAAT,CAAwB,KAAKe,YAAL,CAAkB3M,CAA1C;;QACAkF,QAAQ,CAAC0G,cAAT,CAAwB,CAAC,KAAKe,YAAL,CAAkBhM,CAA3C;;QACAwE,QAAQ,CAACyG,cAAT,CAAwB,KAAKe,YAAL,CAAkB9L,CAA1C,EAPc,CAOgC;;;QAC9CiE,IAAI,CAACyE,IAAL,CAAUtE,QAAV,EAAoByG,GAApB,CAAwBxG,QAAxB,EAAkCwG,GAAlC,CAAsCvG,QAAtC;;QACA,KAAKkE,OAAL,CAAaG,QAAb,CAAsBkC,GAAtB,CAA0B5G,IAA1B;MACH;;MACD,IAAI,KAAK8C,uBAAT,EAAkC;QAC9B,KAAKiM,kBAAL,CAAwB,KAAKxK,OAAL,CAAaG,QAAb,CAAsBD,IAAtB,CAA2B,KAAKG,OAAhC,CAAxB,EAAkE5E,IAAI,CAAC+P,gBAAL,CAAsB,KAAKjI,UAA3B,EAAuCG,eAAvC,CAAuD,KAAKP,oBAA5D,CAAlE,EAAqJ,GAArJ;MACH;;MACD,IAAMwO,OAAO,GAAG,KAAKnT,YAArB;;MACA,IAAImT,OAAO,IAAI,CAAC,KAAKlT,gBAArB,EAAuC;QACnC,KAAKH,UAAL,GAAkB,KAAlB;QACA,KAAK0I,aAAL,CAAmB;UAAEtN,IAAI,EAAE;QAAR,CAAnB;QACA,KAAKsN,aAAL,CAAmB;UAAEtN,IAAI,EAAE;QAAR,CAAnB;MACH,CAJD,MAKK,IAAIiY,OAAJ,EAAa;QACd,KAAK3K,aAAL,CAAmB;UAAEtN,IAAI,EAAE;QAAR,CAAnB;;QACA,IAAIvE,UAAU,CAACqZ,UAAD,EAAa,KAAKzQ,aAAlB,CAAV,IACA5I,UAAU,CAACsZ,QAAD,EAAW,KAAK1Q,aAAhB,CADV,IAEA5I,UAAU,CAACuZ,WAAD,EAAc,KAAK3Q,aAAnB,CAFV,IAGA5I,UAAU,CAACkb,WAAW,CAAC1Z,CAAb,EAAgB,KAAKoH,aAArB,CAHV,IAIA5I,UAAU,CAACkb,WAAW,CAAC/Y,CAAb,EAAgB,KAAKyG,aAArB,CAJV,IAKA5I,UAAU,CAACkb,WAAW,CAAC7Y,CAAb,EAAgB,KAAKuG,aAArB,CALV,IAMA5I,UAAU,CAACmb,WAAW,CAAC3Z,CAAb,EAAgB,KAAKoH,aAArB,CANV,IAOA5I,UAAU,CAACmb,WAAW,CAAChZ,CAAb,EAAgB,KAAKyG,aAArB,CAPV,IAQA5I,UAAU,CAACmb,WAAW,CAAC9Y,CAAb,EAAgB,KAAKuG,aAArB,CARV,IASA5I,UAAU,CAACob,SAAD,EAAY,KAAKxS,aAAjB,CATV,IAUA,CAAC,KAAKO,UAVV,EAUsB;UAClB,KAAKA,UAAL,GAAkB,IAAlB;UACA,KAAK0I,aAAL,CAAmB;YAAEtN,IAAI,EAAE;UAAR,CAAnB;QACH;MACJ,CAhBI,MAiBA,IAAI,CAACiY,OAAD,IAAY,KAAKlT,gBAArB,EAAuC;QACxC,KAAKuI,aAAL,CAAmB;UAAEtN,IAAI,EAAE;QAAR,CAAnB;MACH;;MACD,KAAK+E,gBAAL,GAAwBkT,OAAxB;MACA,KAAKnT,YAAL,GAAoB,KAApB;MACA,OAAOmT,OAAP;IACH;IACD;AACJ;AACA;AACA;;;;WACI,kBAAS;MACL,OAAOC,IAAI,CAACC,SAAL,CAAe;QAClB9I,OAAO,EAAE,KAAK7K,QADI;QAElBlB,WAAW,EAAE,KAAKA,WAFA;QAGlBC,WAAW,EAAEpH,mBAAmB,CAAC,KAAKoH,WAAN,CAHd;QAIlBE,OAAO,EAAE,KAAKA,OAJI;QAKlBC,OAAO,EAAEvH,mBAAmB,CAAC,KAAKuH,OAAN,CALV;QAMlBR,aAAa,EAAE,KAAKA,aANF;QAOlBC,aAAa,EAAEhH,mBAAmB,CAAC,KAAKgH,aAAN,CAPhB;QAQlBC,eAAe,EAAEjH,mBAAmB,CAAC,KAAKiH,eAAN,CARlB;QASlBC,eAAe,EAAElH,mBAAmB,CAAC,KAAKkH,eAAN,CATlB;QAUlBxG,UAAU,EAAE,KAAKA,UAVC;QAWlB8G,kBAAkB,EAAE,KAAKA,kBAXP;QAYlBG,UAAU,EAAE,KAAKA,UAZC;QAalBE,UAAU,EAAE,KAAKA,UAbC;QAclBC,aAAa,EAAE,KAAKA,aAdF;QAelBE,qBAAqB,EAAE,KAAKA,qBAfV;QAgBlBxH,MAAM,EAAE,KAAK+L,UAAL,CAAgB0P,OAAhB,EAhBU;QAiBlB3R,QAAQ,EAAE1E,IAAI,CAAC+P,gBAAL,CAAsB,KAAK1J,aAA3B,EAA0CO,GAA1C,CAA8C,KAAKD,UAAnD,EAA+D0P,OAA/D,EAjBQ;QAkBlBjR,IAAI,EAAE,KAAK+B,QAlBO;QAmBlBmP,WAAW,EAAE,KAAK7Q,eAAL,CAAqB4Q,OAArB,EAnBK;QAoBlBE,OAAO,EAAE,KAAKhO,QAAL,CAAc8N,OAAd,EApBS;QAqBlBG,SAAS,EAAE,KAAKhO,UAAL,CAAgB6N,OAAhB,EArBO;QAsBlBI,KAAK,EAAE,KAAKhO,MAtBM;QAuBlBiO,YAAY,EAAE,KAAKhO,aAAL,CAAmB2N,OAAnB;MAvBI,CAAf,CAAP;IAyBH;IACD;AACJ;AACA;AACA;AACA;AACA;;;;WACI,kBAASM,IAAT,EAAyC;MAAA,IAA1BjJ,gBAA0B,uEAAP,KAAO;MACrC,IAAMkJ,GAAG,GAAGT,IAAI,CAACU,KAAL,CAAWF,IAAX,CAAZ;MACA,KAAKrJ,OAAL,GAAesJ,GAAG,CAACtJ,OAAnB;MACA,KAAK/L,WAAL,GAAmBqV,GAAG,CAACrV,WAAvB;MACA,KAAKC,WAAL,GAAmBhH,mBAAmB,CAACoc,GAAG,CAACpV,WAAL,CAAtC;MACA,KAAKE,OAAL,GAAekV,GAAG,CAAClV,OAAnB;MACA,KAAKC,OAAL,GAAenH,mBAAmB,CAACoc,GAAG,CAACjV,OAAL,CAAlC;MACA,KAAKR,aAAL,GAAqByV,GAAG,CAACzV,aAAzB;MACA,KAAKC,aAAL,GAAqB5G,mBAAmB,CAACoc,GAAG,CAACxV,aAAL,CAAxC;MACA,KAAKC,eAAL,GAAuB7G,mBAAmB,CAACoc,GAAG,CAACvV,eAAL,CAA1C;MACA,KAAKC,eAAL,GAAuB9G,mBAAmB,CAACoc,GAAG,CAACtV,eAAL,CAA1C;MACA,KAAKxG,UAAL,GAAkB8b,GAAG,CAAC9b,UAAtB;MACA,KAAK8G,kBAAL,GAA0BgV,GAAG,CAAChV,kBAA9B;MACA,KAAKG,UAAL,GAAkB6U,GAAG,CAAC7U,UAAtB;MACA,KAAKE,UAAL,GAAkB2U,GAAG,CAAC3U,UAAtB;MACA,KAAKC,aAAL,GAAqB0U,GAAG,CAAC1U,aAAzB;MACA,KAAKE,qBAAL,GAA6BwU,GAAG,CAACxU,qBAAjC;;MACA,KAAKmG,QAAL,CAAcuO,SAAd,CAAwBF,GAAG,CAACL,OAA5B;;MACA,KAAK/N,UAAL,CAAgBsO,SAAhB,CAA0BF,GAAG,CAACJ,SAA9B;;MACA,KAAK/N,MAAL,GAAcmO,GAAG,CAACH,KAAlB;;MACA,KAAK/N,aAAL,CAAmBoO,SAAnB,CAA6BF,GAAG,CAACF,YAAjC;;MACA,KAAK7H,MAAL,CAAY+H,GAAG,CAAChc,MAAJ,CAAW,CAAX,CAAZ,EAA2Bgc,GAAG,CAAChc,MAAJ,CAAW,CAAX,CAA3B,EAA0Cgc,GAAG,CAAChc,MAAJ,CAAW,CAAX,CAA1C,EAAyD8S,gBAAzD;;MACAlN,WAAW,CAACwH,cAAZ,CAA2BhI,IAAI,CAAC8W,SAAL,CAAeF,GAAG,CAAClS,QAAnB,EAA6BC,GAA7B,CAAiC,KAAKgC,UAAtC,EAAkDsB,eAAlD,CAAkE,KAAKX,aAAvE,CAA3B;;MACA,KAAKqG,QAAL,CAAcnN,WAAW,CAACqF,KAA1B,EAAiCrF,WAAW,CAACsF,GAA7C,EAAkD4H,gBAAlD;MACA,KAAKjH,OAAL,CAAajG,WAAW,CAAC8F,MAAzB,EAAiCoH,gBAAjC;MACA,KAAKtG,MAAL,CAAYwP,GAAG,CAACxR,IAAhB,EAAsBsI,gBAAtB;MACA,KAAKlI,cAAL,CAAoBoR,GAAG,CAACN,WAAJ,CAAgB,CAAhB,CAApB,EAAwCM,GAAG,CAACN,WAAJ,CAAgB,CAAhB,CAAxC,EAA4DM,GAAG,CAACN,WAAJ,CAAgB,CAAhB,CAA5D,EAAgF5I,gBAAhF;MACA,KAAK3K,YAAL,GAAoB,IAApB;IACH;IACD;AACJ;AACA;AACA;;;;WACI,iBAAQ7B,UAAR,EAAoB;MAChB,IAAI,KAAKqI,WAAT,EAAsB;QAClB1L,OAAO,CAACC,IAAR,CAAa,uCAAb;QACA;MACH;;MACDoD,UAAU,CAAC6V,YAAX,CAAwB,8BAAxB,EAAwD7X,OAAxD;;MACA,KAAK0N,qBAAL,CAA2B1L,UAA3B;IACH;IACD;AACJ;AACA;;;;WACI,sBAAa;MACT,KAAKsB,MAAL;;MACA,KAAKyK,wBAAL;;MACA,IAAI,KAAK1D,WAAT,EAAsB;QAClB,KAAKA,WAAL,CAAiByN,eAAjB,CAAiC,8BAAjC;;QACA,KAAKzN,WAAL,GAAmBnL,SAAnB;MACH;IACJ;IACD;AACJ;AACA;AACA;;;;WACI,mBAAU;MACN;MACA,KAAK6Y,uBAAL,GAFM,CAGN;;MACA,KAAKC,UAAL;IACH;;;WACD,0BAAiBpN,SAAjB,EAA4B;MACxB,OAAO,KAAK1G,eAAL,CAAqB+T,IAArB,CAA0B,UAACC,aAAD;QAAA,OAAmBA,aAAa,CAACtN,SAAd,KAA4BA,SAA/C;MAAA,CAA1B,CAAP;IACH;;;WACD,mCAA0BN,WAA1B,EAAuC;MACnC,OAAO,KAAKpG,eAAL,CAAqB+T,IAArB,CAA0B,UAACC,aAAD;QAAA,OAAmBA,aAAa,CAAC5N,WAAd,KAA8BA,WAAjD;MAAA,CAA1B,CAAP;IACH;;;WACD,yBAAgBjM,OAAhB,EAAyB;MACrB,KAAK6F,eAAL,CAAqB3E,MAArB,CAA4B,KAAK2E,eAAL,CAAqB/E,OAArB,CAA6Bd,OAA7B,CAA5B,EAAmE,CAAnE;IACH;;;WACD,4BAAmBmH,QAAnB,EAA6BF,MAA7B,EAAqC6S,QAArC,EAA+C;MAC3C,IAAMC,aAAa,GAAG9S,MAAM,CAAC0Q,QAAP,EAAtB;;MACA,IAAIoC,aAAa,KAAK,GAAtB,EAA2B;QAAE;QACzB,OAAO5S,QAAP;MACH,CAJ0C,CAK3C;;;MACA,IAAM6S,SAAS,GAAGtX,IAAI,CAACwE,IAAL,CAAUD,MAAV,EAAkBoC,GAAlB,CAAsBlC,QAAtB,CAAlB,CAN2C,CAMQ;;;MACnD,IAAM8S,aAAa,GAAG,KAAKpP,SAAL,CAAeuL,UAAf,CAA0B4D,SAA1B,EAAqCrX,IAArC,CAAtB,CAP2C,CAOuB;;;MAClE,IAAMuX,kBAAkB,GAAGD,aAAa,CAAC7S,GAAd,CAAkB4S,SAAlB,CAA3B,CAR2C,CAQc;;MACzD,IAAMG,yBAAyB,GAAGD,kBAAkB,CAACvC,QAAnB,EAAlC,CAT2C,CASsB;;MACjE,IAAIwC,yBAAyB,KAAK,GAAlC,EAAuC;QAAE;QACrC,OAAOhT,QAAQ,CAACkC,GAAT,CAAapC,MAAb,CAAP;MACH,CAFD,MAGK,IAAIkT,yBAAyB,KAAKJ,aAAlC,EAAiD;QAAE;QACpD,OAAO5S,QAAP;MACH,CAFI,MAGA,IAAI2S,QAAQ,KAAK,GAAjB,EAAsB;QACvB,OAAO3S,QAAQ,CAACkC,GAAT,CAAapC,MAAb,EAAqBoC,GAArB,CAAyB6Q,kBAAzB,CAAP;MACH,CAFI,MAGA;QACD,IAAME,YAAY,GAAG,MAAMN,QAAQ,GAAGK,yBAAX,GAAuClT,MAAM,CAACoR,GAAP,CAAW6B,kBAAX,CAAlE;QACA,OAAO/S,QAAQ,CACVkC,GADE,CACE3G,IAAI,CAACwE,IAAL,CAAUD,MAAV,EAAkBsC,cAAlB,CAAiC6Q,YAAjC,CADF,EAEF/Q,GAFE,CAEE6Q,kBAAkB,CAAC3Q,cAAnB,CAAkC,MAAMuQ,QAAxC,CAFF,CAAP;MAGH;IACJ;;;WACD,mCAA0B;MACtB,IAAIxe,mBAAmB,CAAC,KAAK0L,OAAN,CAAvB,EAAuC;QACnC,IAAMzL,MAAM,GAAG,KAAKyL,OAApB;QACA,IAAMiR,IAAI,GAAG1c,MAAM,CAAC0c,IAApB;QACA,IAAM3Q,GAAG,GAAG/L,MAAM,CAACgM,eAAP,KAA2BzL,OAAvC;QACA,IAAMue,UAAU,GAAG3e,IAAI,CAAC+L,GAAL,CAASH,GAAG,GAAG,GAAf,IAAsB2Q,IAAzC,CAJmC,CAIY;;QAC/C,IAAMqC,SAAS,GAAGD,UAAU,GAAG9e,MAAM,CAACkb,MAAtC,CALmC,CAKW;;QAC9C,KAAK9L,iBAAL,CAAuB,CAAvB,EAA0B7K,GAA1B,CAA8B,CAACwa,SAA/B,EAA0C,CAACD,UAA3C,EAAuD,CAAvD;;QACA,KAAK1P,iBAAL,CAAuB,CAAvB,EAA0B7K,GAA1B,CAA8Bwa,SAA9B,EAAyC,CAACD,UAA1C,EAAsD,CAAtD;;QACA,KAAK1P,iBAAL,CAAuB,CAAvB,EAA0B7K,GAA1B,CAA8Bwa,SAA9B,EAAyCD,UAAzC,EAAqD,CAArD;;QACA,KAAK1P,iBAAL,CAAuB,CAAvB,EAA0B7K,GAA1B,CAA8B,CAACwa,SAA/B,EAA0CD,UAA1C,EAAsD,CAAtD;MACH,CAVD,MAWK,IAAI7e,oBAAoB,CAAC,KAAKwL,OAAN,CAAxB,EAAwC;QACzC,IAAMzL,QAAM,GAAG,KAAKyL,OAApB;QACA,IAAMuT,OAAO,GAAG,IAAIhf,QAAM,CAACsM,IAA3B;QACA,IAAMD,IAAI,GAAGrM,QAAM,CAACqM,IAAP,GAAc2S,OAA3B;QACA,IAAM5S,KAAK,GAAGpM,QAAM,CAACoM,KAAP,GAAe4S,OAA7B;QACA,IAAMxS,GAAG,GAAGxM,QAAM,CAACwM,GAAP,GAAawS,OAAzB;QACA,IAAMvS,MAAM,GAAGzM,QAAM,CAACyM,MAAP,GAAgBuS,OAA/B;;QACA,KAAK5P,iBAAL,CAAuB,CAAvB,EAA0B7K,GAA1B,CAA8B8H,IAA9B,EAAoCG,GAApC,EAAyC,CAAzC;;QACA,KAAK4C,iBAAL,CAAuB,CAAvB,EAA0B7K,GAA1B,CAA8B6H,KAA9B,EAAqCI,GAArC,EAA0C,CAA1C;;QACA,KAAK4C,iBAAL,CAAuB,CAAvB,EAA0B7K,GAA1B,CAA8B6H,KAA9B,EAAqCK,MAArC,EAA6C,CAA7C;;QACA,KAAK2C,iBAAL,CAAuB,CAAvB,EAA0B7K,GAA1B,CAA8B8H,IAA9B,EAAoCI,MAApC,EAA4C,CAA5C;MACH;IACJ,C,CACD;;;;WACA,0BAAiB;MACb,IAAIa,QAAQ,GAAG3L,QAAf;MACA,IAAMwT,WAAW,GAAG,KAAK1L,cAAL,CAAoB7E,MAApB,IAA8B,CAAlD;MACA,IAAI,CAACuQ,WAAL,EACI,OAAO7H,QAAP;MACJ,IAAIzI,gCAAgC,CAAC,KAAK4G,OAAN,EAAe,gBAAf,CAApC,EACI,OAAO6B,QAAP,CANS,CAOb;;MACA,IAAM6I,SAAS,GAAGjP,IAAI,CAAC+P,gBAAL,CAAsB,KAAKjI,UAA3B,EAAuCiQ,YAAvC,CAAoD,KAAKjQ,UAAL,CAAgBxB,MAApE,CAAlB;;MACAvF,eAAe,CAACiV,MAAhB,CAAuBpW,OAAvB,EAAgCqP,SAAhC,EAA2C,KAAK1K,OAAL,CAAakD,EAAxD;;MACA,KAAK,IAAI1I,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,CAApB,EAAuBA,CAAC,EAAxB,EAA4B;QACxB,IAAMiZ,eAAe,GAAG/X,IAAI,CAACwE,IAAL,CAAU,KAAKyD,iBAAL,CAAuBnJ,CAAvB,CAAV,CAAxB;;QACAiZ,eAAe,CAACC,YAAhB,CAA6BlX,eAA7B;;QACA,IAAMmX,MAAM,GAAGhY,IAAI,CAACiY,UAAL,CAAgB,KAAKvT,OAArB,EAA8BoT,eAA9B,CAAf;;QACAhX,UAAU,CAAC3D,GAAX,CAAe6a,MAAf,EAAuBjJ,SAAvB;;QACAjO,UAAU,CAACyU,GAAX,GAAiB,KAAK3N,UAAL,CAAgBxB,MAAhB,GAAyB,CAA1C;;QACA,IAAM8R,UAAU,GAAGpX,UAAU,CAACqX,gBAAX,CAA4B,KAAK9V,cAAjC,CAAnB;;QACA,IAAI6V,UAAU,CAAC1a,MAAX,KAAsB,CAAtB,IAA2B0a,UAAU,CAAC,CAAD,CAAV,CAAchS,QAAd,GAAyBA,QAAxD,EAAkE;UAC9DA,QAAQ,GAAGgS,UAAU,CAAC,CAAD,CAAV,CAAchS,QAAzB;QACH;MACJ;;MACD,OAAOA,QAAP;IACH;IACD;AACJ;AACA;;;;WACI,wBAAexL,MAAf,EAAuB;MACnB,IAAI,CAAC,KAAK2O,WAAV,EACI;;MACJ,IAAM+O,IAAI,GAAG,KAAK/O,WAAL,CAAiBgP,qBAAjB,EAAb;;MACA3d,MAAM,CAACM,CAAP,GAAWod,IAAI,CAACnT,IAAhB;MACAvK,MAAM,CAACiB,CAAP,GAAWyc,IAAI,CAAChT,GAAhB;;MACA,IAAI,KAAK3C,SAAT,EAAoB;QAChB/H,MAAM,CAACM,CAAP,IAAY,KAAKyH,SAAL,CAAezH,CAA3B;QACAN,MAAM,CAACiB,CAAP,IAAYyc,IAAI,CAACrT,MAAL,GAAc,KAAKtC,SAAL,CAAe6V,CAA7B,GAAiC,KAAK7V,SAAL,CAAe9G,CAA5D;QACAjB,MAAM,CAACyK,KAAP,GAAe,KAAK1C,SAAL,CAAe5G,CAA9B;QACAnB,MAAM,CAACqK,MAAP,GAAgB,KAAKtC,SAAL,CAAe6V,CAA/B;MACH,CALD,MAMK;QACD5d,MAAM,CAACyK,KAAP,GAAeiT,IAAI,CAACjT,KAApB;QACAzK,MAAM,CAACqK,MAAP,GAAgBqT,IAAI,CAACrT,MAArB;MACH;;MACD,OAAOrK,MAAP;IACH;;;WACD,8BAAqBiT,kBAArB,EAAyC;MAAA;;MACrC,IAAIA,kBAAJ,EACI,OAAOS,OAAO,CAACC,OAAR,EAAP;MACJ,KAAK1L,UAAL,GAAkB,KAAlB;MACA,KAAK0I,aAAL,CAAmB;QAAEtN,IAAI,EAAE;MAAR,CAAnB;MACA,OAAO,IAAIqQ,OAAJ,CAAY,UAACC,OAAD,EAAa;QAC5B,IAAMkK,SAAS,GAAG,SAAZA,SAAY,GAAM;UACpB,MAAI,CAACzO,mBAAL,CAAyB,MAAzB,EAAiCyO,SAAjC;;UACAlK,OAAO;QACV,CAHD;;QAIA,MAAI,CAACnE,gBAAL,CAAsB,MAAtB,EAA8BqO,SAA9B;MACH,CANM,CAAP;IAOH,C,CACD;;;;WACA,+BAAsBlP,WAAtB,EAAmC,CAAG;;;WACtC,oCAA2B,CAAG;IAC9B;AACJ;AACA;AACA;AACA;;;;SACI,eAAoB;MAChB1L,OAAO,CAACC,IAAR,CAAa,0EAAb;MACA,OAAO,CAAP;IACH;IACD;AACJ;AACA;AACA;AACA;;SACI,aAAkB4a,CAAlB,EAAqB;MACjB7a,OAAO,CAACC,IAAR,CAAa,0EAAb;IACH;IACD;AACJ;AACA;AACA;AACA;;;;SACI,eAA4B;MACxBD,OAAO,CAACC,IAAR,CAAa,0FAAb;MACA,OAAO,CAAP;IACH;IACD;AACJ;AACA;AACA;AACA;;SACI,aAA0B4a,CAA1B,EAA6B;MACzB7a,OAAO,CAACC,IAAR,CAAa,0FAAb;IACH;;;;IApmED;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;IAEI,iBAAe6a,IAAf,EAAqB;MACjBhZ,KAAK,GAAGgZ,IAAI,CAAChZ,KAAb;MACAC,OAAO,GAAGlI,MAAM,CAACC,MAAP,CAAc,IAAIgI,KAAK,CAACoE,OAAV,CAAkB,CAAlB,EAAqB,CAArB,EAAwB,CAAxB,CAAd,CAAV;MACAlE,OAAO,GAAGnI,MAAM,CAACC,MAAP,CAAc,IAAIgI,KAAK,CAACoE,OAAV,CAAkB,CAAlB,EAAqB,CAArB,EAAwB,CAAxB,CAAd,CAAV;MACAjE,OAAO,GAAGpI,MAAM,CAACC,MAAP,CAAc,IAAIgI,KAAK,CAACoE,OAAV,CAAkB,CAAlB,EAAqB,CAArB,EAAwB,CAAxB,CAAd,CAAV;MACAhE,GAAG,GAAG,IAAIJ,KAAK,CAACgJ,OAAV,EAAN;MACA3I,IAAI,GAAG,IAAIL,KAAK,CAACoE,OAAV,EAAP;MACA9D,IAAI,GAAG,IAAIN,KAAK,CAACoE,OAAV,EAAP;MACA7D,IAAI,GAAG,IAAIP,KAAK,CAACoE,OAAV,EAAP;MACA5D,QAAQ,GAAG,IAAIR,KAAK,CAACoE,OAAV,EAAX;MACA3D,QAAQ,GAAG,IAAIT,KAAK,CAACoE,OAAV,EAAX;MACA1D,QAAQ,GAAG,IAAIV,KAAK,CAACoE,OAAV,EAAX;MACAzD,YAAY,GAAG,IAAIX,KAAK,CAACoE,OAAV,EAAf;MACAxD,YAAY,GAAG,IAAIZ,KAAK,CAACoE,OAAV,EAAf;MACAvD,WAAW,GAAG,IAAIb,KAAK,CAACoI,SAAV,EAAd;MACAtH,WAAW,GAAG,IAAId,KAAK,CAACoI,SAAV,EAAd;MACArH,MAAM,GAAG,IAAIf,KAAK,CAAC0I,IAAV,EAAT;MACA1H,MAAM,GAAG,IAAIhB,KAAK,CAAC0I,IAAV,EAAT;MACAzH,OAAO,GAAG,IAAIjB,KAAK,CAACwR,MAAV,EAAV;MACAtQ,YAAY,GAAG,IAAIlB,KAAK,CAAC4H,UAAV,EAAf;MACAzG,YAAY,GAAG,IAAInB,KAAK,CAAC4H,UAAV,EAAf;MACAxG,eAAe,GAAG,IAAIpB,KAAK,CAACiZ,OAAV,EAAlB;MACA5X,UAAU,GAAG,IAAIrB,KAAK,CAACkZ,SAAV,EAAb;IACH;IACD;AACJ;AACA;AACA;;;;SACI,eAAoB;MAChB,OAAOphB,MAAP;IACH;;;WA+hED,8BAA4BqhB,QAA5B,EAAgE;MAAA,IAA1Bpd,GAA0B,uEAApB,IAAIiE,KAAK,CAACwR,MAAV,EAAoB;MAC5D,IAAMC,cAAc,GAAG1V,GAAvB;MACA,IAAMmV,MAAM,GAAGO,cAAc,CAACP,MAA9B;;MACAnQ,MAAM,CAAC2P,SAAP,GAH4D,CAI5D;;;MACAyI,QAAQ,CAACC,eAAT,CAAyB,UAACC,MAAD,EAAY;QACjC,IAAI,CAACA,MAAM,CAACC,MAAZ,EACI;;QACJvY,MAAM,CAACwY,cAAP,CAAsBF,MAAtB;MACH,CAJD;;MAKAtY,MAAM,CAACoQ,SAAP,CAAiBD,MAAjB,EAV4D,CAW5D;;;MACA,IAAIsI,WAAW,GAAG,CAAlB;MACAL,QAAQ,CAACC,eAAT,CAAyB,UAACC,MAAD,EAAY;QACjC,IAAI,CAACA,MAAM,CAACC,MAAZ,EACI;QACJ,IAAMG,IAAI,GAAGJ,MAAb;QACA,IAAMK,QAAQ,GAAGD,IAAI,CAACC,QAAL,CAAc1R,KAAd,EAAjB;QACA0R,QAAQ,CAACpB,YAAT,CAAsBmB,IAAI,CAACE,WAA3B;QACA,IAAMC,cAAc,GAAGF,QAAvB;QACA,IAAM3U,QAAQ,GAAG6U,cAAc,CAACC,UAAf,CAA0B9U,QAA3C;;QACA,KAAK,IAAI3F,CAAC,GAAG,CAAR,EAAWC,CAAC,GAAG0F,QAAQ,CAAC+U,KAA7B,EAAoC1a,CAAC,GAAGC,CAAxC,EAA2CD,CAAC,EAA5C,EAAgD;UAC5CiB,IAAI,CAAC0Z,mBAAL,CAAyBhV,QAAzB,EAAmC3F,CAAnC;;UACAoa,WAAW,GAAGlgB,IAAI,CAACQ,GAAL,CAAS0f,WAAT,EAAsBtI,MAAM,CAAC8I,iBAAP,CAAyB3Z,IAAzB,CAAtB,CAAd;QACH;MACJ,CAZD;MAaAoR,cAAc,CAAC9K,MAAf,GAAwBrN,IAAI,CAACwD,IAAL,CAAU0c,WAAV,CAAxB;MACA,OAAO/H,cAAP;IACH;;;;EAloEwBrT,e;;AAqoE7B,SAASkD,cAAc,IAAI2Y,OAA3B"},"metadata":{},"sourceType":"module"}