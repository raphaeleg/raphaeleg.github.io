{"ast":null,"code":"import { useLoader } from '@react-three/fiber';\nimport { CubeReflectionMapping, EquirectangularReflectionMapping, sRGBEncoding, LinearEncoding, CubeTextureLoader } from 'three';\nimport { RGBELoader } from 'three-stdlib';\nimport { presetsObj } from '../helpers/environment-assets.js';\nconst CUBEMAP_ROOT = 'https://market-assets.fra1.cdn.digitaloceanspaces.com/market-assets/hdris/';\n\nfunction useEnvironment() {\n  let {\n    files = ['/px.png', '/nx.png', '/py.png', '/ny.png', '/pz.png', '/nz.png'],\n    path = '',\n    preset = undefined,\n    encoding = undefined,\n    extensions\n  } = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n  if (preset) {\n    if (!(preset in presetsObj)) throw new Error('Preset must be one of: ' + Object.keys(presetsObj).join(', '));\n    files = presetsObj[preset];\n    path = CUBEMAP_ROOT;\n  }\n\n  const isCubeMap = Array.isArray(files);\n  const loader = isCubeMap ? CubeTextureLoader : RGBELoader;\n  const loaderResult = useLoader( // @ts-expect-error\n  loader, isCubeMap ? [files] : files, loader => {\n    loader.setPath(path);\n    if (extensions) extensions(loader);\n  });\n  const texture = isCubeMap ? // @ts-ignore\n  loaderResult[0] : loaderResult;\n  texture.mapping = isCubeMap ? CubeReflectionMapping : EquirectangularReflectionMapping;\n  texture.encoding = (encoding !== null && encoding !== void 0 ? encoding : isCubeMap) ? sRGBEncoding : LinearEncoding;\n  return texture;\n}\n\nexport { useEnvironment };","map":{"version":3,"names":["useLoader","CubeReflectionMapping","EquirectangularReflectionMapping","sRGBEncoding","LinearEncoding","CubeTextureLoader","RGBELoader","presetsObj","CUBEMAP_ROOT","useEnvironment","files","path","preset","undefined","encoding","extensions","Error","Object","keys","join","isCubeMap","Array","isArray","loader","loaderResult","setPath","texture","mapping"],"sources":["/Users/crushedsummers/Documents/GitHub/raphaeleg.github.io/node_modules/@react-three/drei/core/useEnvironment.js"],"sourcesContent":["import { useLoader } from '@react-three/fiber';\nimport { CubeReflectionMapping, EquirectangularReflectionMapping, sRGBEncoding, LinearEncoding, CubeTextureLoader } from 'three';\nimport { RGBELoader } from 'three-stdlib';\nimport { presetsObj } from '../helpers/environment-assets.js';\n\nconst CUBEMAP_ROOT = 'https://market-assets.fra1.cdn.digitaloceanspaces.com/market-assets/hdris/';\nfunction useEnvironment({\n  files = ['/px.png', '/nx.png', '/py.png', '/ny.png', '/pz.png', '/nz.png'],\n  path = '',\n  preset = undefined,\n  encoding = undefined,\n  extensions\n} = {}) {\n  if (preset) {\n    if (!(preset in presetsObj)) throw new Error('Preset must be one of: ' + Object.keys(presetsObj).join(', '));\n    files = presetsObj[preset];\n    path = CUBEMAP_ROOT;\n  }\n\n  const isCubeMap = Array.isArray(files);\n  const loader = isCubeMap ? CubeTextureLoader : RGBELoader;\n  const loaderResult = useLoader( // @ts-expect-error\n  loader, isCubeMap ? [files] : files, loader => {\n    loader.setPath(path);\n    if (extensions) extensions(loader);\n  });\n  const texture = isCubeMap ? // @ts-ignore\n  loaderResult[0] : loaderResult;\n  texture.mapping = isCubeMap ? CubeReflectionMapping : EquirectangularReflectionMapping;\n  texture.encoding = (encoding !== null && encoding !== void 0 ? encoding : isCubeMap) ? sRGBEncoding : LinearEncoding;\n  return texture;\n}\n\nexport { useEnvironment };\n"],"mappings":"AAAA,SAASA,SAAT,QAA0B,oBAA1B;AACA,SAASC,qBAAT,EAAgCC,gCAAhC,EAAkEC,YAAlE,EAAgFC,cAAhF,EAAgGC,iBAAhG,QAAyH,OAAzH;AACA,SAASC,UAAT,QAA2B,cAA3B;AACA,SAASC,UAAT,QAA2B,kCAA3B;AAEA,MAAMC,YAAY,GAAG,4EAArB;;AACA,SAASC,cAAT,GAMQ;EAAA,IANgB;IACtBC,KAAK,GAAG,CAAC,SAAD,EAAY,SAAZ,EAAuB,SAAvB,EAAkC,SAAlC,EAA6C,SAA7C,EAAwD,SAAxD,CADc;IAEtBC,IAAI,GAAG,EAFe;IAGtBC,MAAM,GAAGC,SAHa;IAItBC,QAAQ,GAAGD,SAJW;IAKtBE;EALsB,CAMhB,uEAAJ,EAAI;;EACN,IAAIH,MAAJ,EAAY;IACV,IAAI,EAAEA,MAAM,IAAIL,UAAZ,CAAJ,EAA6B,MAAM,IAAIS,KAAJ,CAAU,4BAA4BC,MAAM,CAACC,IAAP,CAAYX,UAAZ,EAAwBY,IAAxB,CAA6B,IAA7B,CAAtC,CAAN;IAC7BT,KAAK,GAAGH,UAAU,CAACK,MAAD,CAAlB;IACAD,IAAI,GAAGH,YAAP;EACD;;EAED,MAAMY,SAAS,GAAGC,KAAK,CAACC,OAAN,CAAcZ,KAAd,CAAlB;EACA,MAAMa,MAAM,GAAGH,SAAS,GAAGf,iBAAH,GAAuBC,UAA/C;EACA,MAAMkB,YAAY,GAAGxB,SAAS,EAAE;EAChCuB,MAD8B,EACtBH,SAAS,GAAG,CAACV,KAAD,CAAH,GAAaA,KADA,EACOa,MAAM,IAAI;IAC7CA,MAAM,CAACE,OAAP,CAAed,IAAf;IACA,IAAII,UAAJ,EAAgBA,UAAU,CAACQ,MAAD,CAAV;EACjB,CAJ6B,CAA9B;EAKA,MAAMG,OAAO,GAAGN,SAAS,GAAG;EAC5BI,YAAY,CAAC,CAAD,CADa,GACPA,YADlB;EAEAE,OAAO,CAACC,OAAR,GAAkBP,SAAS,GAAGnB,qBAAH,GAA2BC,gCAAtD;EACAwB,OAAO,CAACZ,QAAR,GAAmB,CAACA,QAAQ,KAAK,IAAb,IAAqBA,QAAQ,KAAK,KAAK,CAAvC,GAA2CA,QAA3C,GAAsDM,SAAvD,IAAoEjB,YAApE,GAAmFC,cAAtG;EACA,OAAOsB,OAAP;AACD;;AAED,SAASjB,cAAT"},"metadata":{},"sourceType":"module"}