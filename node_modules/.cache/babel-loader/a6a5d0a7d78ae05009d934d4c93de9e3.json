{"ast":null,"code":"import _classCallCheck from \"/Users/crushedsummers/Documents/GitHub/raphaeleg.github.io/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/Users/crushedsummers/Documents/GitHub/raphaeleg.github.io/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _inherits from \"/Users/crushedsummers/Documents/GitHub/raphaeleg.github.io/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"/Users/crushedsummers/Documents/GitHub/raphaeleg.github.io/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\nimport { Box3, Vector3, InstancedBufferGeometry, Float32BufferAttribute, InstancedInterleavedBuffer, InterleavedBufferAttribute, WireframeGeometry, Sphere } from 'three';\n\nvar _box = new Box3();\n\nvar _vector = new Vector3();\n\nvar LineSegmentsGeometry = /*#__PURE__*/function (_InstancedBufferGeome) {\n  _inherits(LineSegmentsGeometry, _InstancedBufferGeome);\n\n  var _super = _createSuper(LineSegmentsGeometry);\n\n  function LineSegmentsGeometry() {\n    var _this;\n\n    _classCallCheck(this, LineSegmentsGeometry);\n\n    _this = _super.call(this);\n    _this.isLineSegmentsGeometry = true;\n    _this.type = 'LineSegmentsGeometry';\n    var positions = [-1, 2, 0, 1, 2, 0, -1, 1, 0, 1, 1, 0, -1, 0, 0, 1, 0, 0, -1, -1, 0, 1, -1, 0];\n    var uvs = [-1, 2, 1, 2, -1, 1, 1, 1, -1, -1, 1, -1, -1, -2, 1, -2];\n    var index = [0, 2, 1, 2, 3, 1, 2, 4, 3, 4, 5, 3, 4, 6, 5, 6, 7, 5];\n\n    _this.setIndex(index);\n\n    _this.setAttribute('position', new Float32BufferAttribute(positions, 3));\n\n    _this.setAttribute('uv', new Float32BufferAttribute(uvs, 2));\n\n    return _this;\n  }\n\n  _createClass(LineSegmentsGeometry, [{\n    key: \"applyMatrix4\",\n    value: function applyMatrix4(matrix) {\n      var start = this.attributes.instanceStart;\n      var end = this.attributes.instanceEnd;\n\n      if (start !== undefined) {\n        start.applyMatrix4(matrix);\n        end.applyMatrix4(matrix);\n        start.needsUpdate = true;\n      }\n\n      if (this.boundingBox !== null) {\n        this.computeBoundingBox();\n      }\n\n      if (this.boundingSphere !== null) {\n        this.computeBoundingSphere();\n      }\n\n      return this;\n    }\n  }, {\n    key: \"setPositions\",\n    value: function setPositions(array) {\n      var lineSegments;\n\n      if (array instanceof Float32Array) {\n        lineSegments = array;\n      } else if (Array.isArray(array)) {\n        lineSegments = new Float32Array(array);\n      }\n\n      var instanceBuffer = new InstancedInterleavedBuffer(lineSegments, 6, 1); // xyz, xyz\n\n      this.setAttribute('instanceStart', new InterleavedBufferAttribute(instanceBuffer, 3, 0)); // xyz\n\n      this.setAttribute('instanceEnd', new InterleavedBufferAttribute(instanceBuffer, 3, 3)); // xyz\n      //\n\n      this.computeBoundingBox();\n      this.computeBoundingSphere();\n      return this;\n    }\n  }, {\n    key: \"setColors\",\n    value: function setColors(array) {\n      var colors;\n\n      if (array instanceof Float32Array) {\n        colors = array;\n      } else if (Array.isArray(array)) {\n        colors = new Float32Array(array);\n      }\n\n      var instanceColorBuffer = new InstancedInterleavedBuffer(colors, 6, 1); // rgb, rgb\n\n      this.setAttribute('instanceColorStart', new InterleavedBufferAttribute(instanceColorBuffer, 3, 0)); // rgb\n\n      this.setAttribute('instanceColorEnd', new InterleavedBufferAttribute(instanceColorBuffer, 3, 3)); // rgb\n\n      return this;\n    }\n  }, {\n    key: \"fromWireframeGeometry\",\n    value: function fromWireframeGeometry(geometry) {\n      this.setPositions(geometry.attributes.position.array);\n      return this;\n    }\n  }, {\n    key: \"fromEdgesGeometry\",\n    value: function fromEdgesGeometry(geometry) {\n      this.setPositions(geometry.attributes.position.array);\n      return this;\n    }\n  }, {\n    key: \"fromMesh\",\n    value: function fromMesh(mesh) {\n      this.fromWireframeGeometry(new WireframeGeometry(mesh.geometry)); // set colors, maybe\n\n      return this;\n    }\n  }, {\n    key: \"fromLineSegments\",\n    value: function fromLineSegments(lineSegments) {\n      var geometry = lineSegments.geometry;\n      this.setPositions(geometry.attributes.position.array); // assumes non-indexed\n      // set colors, maybe\n\n      return this;\n    }\n  }, {\n    key: \"computeBoundingBox\",\n    value: function computeBoundingBox() {\n      if (this.boundingBox === null) {\n        this.boundingBox = new Box3();\n      }\n\n      var start = this.attributes.instanceStart;\n      var end = this.attributes.instanceEnd;\n\n      if (start !== undefined && end !== undefined) {\n        this.boundingBox.setFromBufferAttribute(start);\n\n        _box.setFromBufferAttribute(end);\n\n        this.boundingBox.union(_box);\n      }\n    }\n  }, {\n    key: \"computeBoundingSphere\",\n    value: function computeBoundingSphere() {\n      if (this.boundingSphere === null) {\n        this.boundingSphere = new Sphere();\n      }\n\n      if (this.boundingBox === null) {\n        this.computeBoundingBox();\n      }\n\n      var start = this.attributes.instanceStart;\n      var end = this.attributes.instanceEnd;\n\n      if (start !== undefined && end !== undefined) {\n        var center = this.boundingSphere.center;\n        this.boundingBox.getCenter(center);\n        var maxRadiusSq = 0;\n\n        for (var i = 0, il = start.count; i < il; i++) {\n          _vector.fromBufferAttribute(start, i);\n\n          maxRadiusSq = Math.max(maxRadiusSq, center.distanceToSquared(_vector));\n\n          _vector.fromBufferAttribute(end, i);\n\n          maxRadiusSq = Math.max(maxRadiusSq, center.distanceToSquared(_vector));\n        }\n\n        this.boundingSphere.radius = Math.sqrt(maxRadiusSq);\n\n        if (isNaN(this.boundingSphere.radius)) {\n          console.error('THREE.LineSegmentsGeometry.computeBoundingSphere(): Computed radius is NaN. The instanced position data is likely to have NaN values.', this);\n        }\n      }\n    }\n  }, {\n    key: \"toJSON\",\n    value: function toJSON() {// todo\n    }\n  }, {\n    key: \"applyMatrix\",\n    value: function applyMatrix(matrix) {\n      console.warn('THREE.LineSegmentsGeometry: applyMatrix() has been renamed to applyMatrix4().');\n      return this.applyMatrix4(matrix);\n    }\n  }]);\n\n  return LineSegmentsGeometry;\n}(InstancedBufferGeometry);\n\nexport { LineSegmentsGeometry };","map":{"version":3,"names":["Box3","Vector3","InstancedBufferGeometry","Float32BufferAttribute","InstancedInterleavedBuffer","InterleavedBufferAttribute","WireframeGeometry","Sphere","_box","_vector","LineSegmentsGeometry","isLineSegmentsGeometry","type","positions","uvs","index","setIndex","setAttribute","matrix","start","attributes","instanceStart","end","instanceEnd","undefined","applyMatrix4","needsUpdate","boundingBox","computeBoundingBox","boundingSphere","computeBoundingSphere","array","lineSegments","Float32Array","Array","isArray","instanceBuffer","colors","instanceColorBuffer","geometry","setPositions","position","mesh","fromWireframeGeometry","setFromBufferAttribute","union","center","getCenter","maxRadiusSq","i","il","count","fromBufferAttribute","Math","max","distanceToSquared","radius","sqrt","isNaN","console","error","warn"],"sources":["/Users/crushedsummers/Documents/GitHub/raphaeleg.github.io/node_modules/three-stdlib/lines/LineSegmentsGeometry.js"],"sourcesContent":["import { Box3, Vector3, InstancedBufferGeometry, Float32BufferAttribute, InstancedInterleavedBuffer, InterleavedBufferAttribute, WireframeGeometry, Sphere } from 'three';\n\nconst _box = new Box3();\n\nconst _vector = new Vector3();\n\nclass LineSegmentsGeometry extends InstancedBufferGeometry {\n  constructor() {\n    super();\n    this.isLineSegmentsGeometry = true;\n    this.type = 'LineSegmentsGeometry';\n    const positions = [-1, 2, 0, 1, 2, 0, -1, 1, 0, 1, 1, 0, -1, 0, 0, 1, 0, 0, -1, -1, 0, 1, -1, 0];\n    const uvs = [-1, 2, 1, 2, -1, 1, 1, 1, -1, -1, 1, -1, -1, -2, 1, -2];\n    const index = [0, 2, 1, 2, 3, 1, 2, 4, 3, 4, 5, 3, 4, 6, 5, 6, 7, 5];\n    this.setIndex(index);\n    this.setAttribute('position', new Float32BufferAttribute(positions, 3));\n    this.setAttribute('uv', new Float32BufferAttribute(uvs, 2));\n  }\n\n  applyMatrix4(matrix) {\n    const start = this.attributes.instanceStart;\n    const end = this.attributes.instanceEnd;\n\n    if (start !== undefined) {\n      start.applyMatrix4(matrix);\n      end.applyMatrix4(matrix);\n      start.needsUpdate = true;\n    }\n\n    if (this.boundingBox !== null) {\n      this.computeBoundingBox();\n    }\n\n    if (this.boundingSphere !== null) {\n      this.computeBoundingSphere();\n    }\n\n    return this;\n  }\n\n  setPositions(array) {\n    let lineSegments;\n\n    if (array instanceof Float32Array) {\n      lineSegments = array;\n    } else if (Array.isArray(array)) {\n      lineSegments = new Float32Array(array);\n    }\n\n    const instanceBuffer = new InstancedInterleavedBuffer(lineSegments, 6, 1); // xyz, xyz\n\n    this.setAttribute('instanceStart', new InterleavedBufferAttribute(instanceBuffer, 3, 0)); // xyz\n\n    this.setAttribute('instanceEnd', new InterleavedBufferAttribute(instanceBuffer, 3, 3)); // xyz\n    //\n\n    this.computeBoundingBox();\n    this.computeBoundingSphere();\n    return this;\n  }\n\n  setColors(array) {\n    let colors;\n\n    if (array instanceof Float32Array) {\n      colors = array;\n    } else if (Array.isArray(array)) {\n      colors = new Float32Array(array);\n    }\n\n    const instanceColorBuffer = new InstancedInterleavedBuffer(colors, 6, 1); // rgb, rgb\n\n    this.setAttribute('instanceColorStart', new InterleavedBufferAttribute(instanceColorBuffer, 3, 0)); // rgb\n\n    this.setAttribute('instanceColorEnd', new InterleavedBufferAttribute(instanceColorBuffer, 3, 3)); // rgb\n\n    return this;\n  }\n\n  fromWireframeGeometry(geometry) {\n    this.setPositions(geometry.attributes.position.array);\n    return this;\n  }\n\n  fromEdgesGeometry(geometry) {\n    this.setPositions(geometry.attributes.position.array);\n    return this;\n  }\n\n  fromMesh(mesh) {\n    this.fromWireframeGeometry(new WireframeGeometry(mesh.geometry)); // set colors, maybe\n\n    return this;\n  }\n\n  fromLineSegments(lineSegments) {\n    const geometry = lineSegments.geometry;\n    this.setPositions(geometry.attributes.position.array); // assumes non-indexed\n    // set colors, maybe\n\n    return this;\n  }\n\n  computeBoundingBox() {\n    if (this.boundingBox === null) {\n      this.boundingBox = new Box3();\n    }\n\n    const start = this.attributes.instanceStart;\n    const end = this.attributes.instanceEnd;\n\n    if (start !== undefined && end !== undefined) {\n      this.boundingBox.setFromBufferAttribute(start);\n\n      _box.setFromBufferAttribute(end);\n\n      this.boundingBox.union(_box);\n    }\n  }\n\n  computeBoundingSphere() {\n    if (this.boundingSphere === null) {\n      this.boundingSphere = new Sphere();\n    }\n\n    if (this.boundingBox === null) {\n      this.computeBoundingBox();\n    }\n\n    const start = this.attributes.instanceStart;\n    const end = this.attributes.instanceEnd;\n\n    if (start !== undefined && end !== undefined) {\n      const center = this.boundingSphere.center;\n      this.boundingBox.getCenter(center);\n      let maxRadiusSq = 0;\n\n      for (let i = 0, il = start.count; i < il; i++) {\n        _vector.fromBufferAttribute(start, i);\n\n        maxRadiusSq = Math.max(maxRadiusSq, center.distanceToSquared(_vector));\n\n        _vector.fromBufferAttribute(end, i);\n\n        maxRadiusSq = Math.max(maxRadiusSq, center.distanceToSquared(_vector));\n      }\n\n      this.boundingSphere.radius = Math.sqrt(maxRadiusSq);\n\n      if (isNaN(this.boundingSphere.radius)) {\n        console.error('THREE.LineSegmentsGeometry.computeBoundingSphere(): Computed radius is NaN. The instanced position data is likely to have NaN values.', this);\n      }\n    }\n  }\n\n  toJSON() {// todo\n  }\n\n  applyMatrix(matrix) {\n    console.warn('THREE.LineSegmentsGeometry: applyMatrix() has been renamed to applyMatrix4().');\n    return this.applyMatrix4(matrix);\n  }\n\n}\n\nexport { LineSegmentsGeometry };\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}