{"ast":null,"code":"import { FontLoader } from 'three-stdlib';\nimport { suspend, preload, clear } from 'suspend-react';\nlet fontLoader = null;\n\nasync function loader(font) {\n  if (!fontLoader) fontLoader = new FontLoader();\n  let data = typeof font === 'string' ? await (await fetch(font)).json() : font;\n  return fontLoader.parse(data);\n}\n\nfunction useFont(font) {\n  return suspend(loader, [font]);\n}\n\nuseFont.preload = font => preload(loader, [font]);\n\nuseFont.clear = font => clear([font]);\n\nexport { useFont };","map":{"version":3,"names":["FontLoader","suspend","preload","clear","fontLoader","loader","font","data","fetch","json","parse","useFont"],"sources":["/Users/crushedsummers/Documents/GitHub/raphaeleg.github.io/node_modules/@react-three/drei/core/useFont.js"],"sourcesContent":["import { FontLoader } from 'three-stdlib';\nimport { suspend, preload, clear } from 'suspend-react';\n\nlet fontLoader = null;\n\nasync function loader(font) {\n  if (!fontLoader) fontLoader = new FontLoader();\n  let data = typeof font === 'string' ? await (await fetch(font)).json() : font;\n  return fontLoader.parse(data);\n}\n\nfunction useFont(font) {\n  return suspend(loader, [font]);\n}\n\nuseFont.preload = font => preload(loader, [font]);\n\nuseFont.clear = font => clear([font]);\n\nexport { useFont };\n"],"mappings":"AAAA,SAASA,UAAT,QAA2B,cAA3B;AACA,SAASC,OAAT,EAAkBC,OAAlB,EAA2BC,KAA3B,QAAwC,eAAxC;AAEA,IAAIC,UAAU,GAAG,IAAjB;;AAEA,eAAeC,MAAf,CAAsBC,IAAtB,EAA4B;EAC1B,IAAI,CAACF,UAAL,EAAiBA,UAAU,GAAG,IAAIJ,UAAJ,EAAb;EACjB,IAAIO,IAAI,GAAG,OAAOD,IAAP,KAAgB,QAAhB,GAA2B,MAAM,CAAC,MAAME,KAAK,CAACF,IAAD,CAAZ,EAAoBG,IAApB,EAAjC,GAA8DH,IAAzE;EACA,OAAOF,UAAU,CAACM,KAAX,CAAiBH,IAAjB,CAAP;AACD;;AAED,SAASI,OAAT,CAAiBL,IAAjB,EAAuB;EACrB,OAAOL,OAAO,CAACI,MAAD,EAAS,CAACC,IAAD,CAAT,CAAd;AACD;;AAEDK,OAAO,CAACT,OAAR,GAAkBI,IAAI,IAAIJ,OAAO,CAACG,MAAD,EAAS,CAACC,IAAD,CAAT,CAAjC;;AAEAK,OAAO,CAACR,KAAR,GAAgBG,IAAI,IAAIH,KAAK,CAAC,CAACG,IAAD,CAAD,CAA7B;;AAEA,SAASK,OAAT"},"metadata":{},"sourceType":"module"}