{"ast":null,"code":"import _extends from '@babel/runtime/helpers/esm/extends';\nimport * as React from 'react';\nimport * as THREE from 'three';\nimport { extend } from '@react-three/fiber';\nimport { shaderMaterial } from './shaderMaterial.js';\nimport { useTexture } from './useTexture.js';\nconst ImageMaterialImpl = shaderMaterial({\n  color: new THREE.Color('white'),\n  scale: [1, 1],\n  imageBounds: [1, 1],\n  map: null,\n  zoom: 1,\n  grayscale: 0,\n  opacity: 1\n},\n/* glsl */\n`\n  varying vec2 vUv;\n  void main() {\n    gl_Position = projectionMatrix * viewMatrix * modelMatrix * vec4(position, 1.);\n    vUv = uv;\n  }\n`,\n/* glsl */\n`\n  // mostly from https://gist.github.com/statico/df64c5d167362ecf7b34fca0b1459a44\n  varying vec2 vUv;\n  uniform vec2 scale;\n  uniform vec2 imageBounds;\n  uniform vec3 color;\n  uniform sampler2D map;\n  uniform float zoom;\n  uniform float grayscale;\n  uniform float opacity;\n  const vec3 luma = vec3(.299, 0.587, 0.114);\n  vec4 toGrayscale(vec4 color, float intensity) {\n    return vec4(mix(color.rgb, vec3(dot(color.rgb, luma)), intensity), color.a);\n  }\n  vec2 aspect(vec2 size) {\n    return size / min(size.x, size.y);\n  }\n  void main() {\n    vec2 s = aspect(scale);\n    vec2 i = aspect(imageBounds);\n    float rs = s.x / s.y;\n    float ri = i.x / i.y;\n    vec2 new = rs < ri ? vec2(i.x * s.y / i.y, s.y) : vec2(s.x, i.y * s.x / i.x);\n    vec2 offset = (rs < ri ? vec2((new.x - s.x) / 2.0, 0.0) : vec2(0.0, (new.y - s.y) / 2.0)) / new;\n    vec2 uv = vUv * s / new + offset;\n    vec2 zUv = (uv - vec2(0.5, 0.5)) / zoom + vec2(0.5, 0.5);\n    gl_FragColor = toGrayscale(texture2D(map, zUv) * vec4(color, opacity), grayscale);\n    \n    #include <tonemapping_fragment>\n    #include <encodings_fragment>\n  }\n`);\nconst ImageBase = /*#__PURE__*/React.forwardRef((_ref, ref) => {\n  let {\n    children,\n    color,\n    segments = 1,\n    scale = 1,\n    zoom = 1,\n    grayscale = 0,\n    opacity = 1,\n    texture,\n    toneMapped,\n    transparent,\n    ...props\n  } = _ref;\n  extend({\n    ImageMaterial: ImageMaterialImpl\n  });\n  const planeBounds = Array.isArray(scale) ? [scale[0], scale[1]] : [scale, scale];\n  const imageBounds = [texture.image.width, texture.image.height];\n  return /*#__PURE__*/React.createElement(\"mesh\", _extends({\n    ref: ref,\n    scale: Array.isArray(scale) ? [...scale, 1] : scale\n  }, props), /*#__PURE__*/React.createElement(\"planeGeometry\", {\n    args: [1, 1, segments, segments]\n  }), /*#__PURE__*/React.createElement(\"imageMaterial\", {\n    color: color,\n    map: texture,\n    zoom: zoom,\n    grayscale: grayscale,\n    opacity: opacity,\n    scale: planeBounds,\n    imageBounds: imageBounds,\n    toneMapped: toneMapped,\n    transparent: transparent\n  }), children);\n});\nconst ImageWithUrl = /*#__PURE__*/React.forwardRef((_ref2, ref) => {\n  let {\n    url,\n    ...props\n  } = _ref2;\n  const texture = useTexture(url);\n  return /*#__PURE__*/React.createElement(ImageBase, _extends({}, props, {\n    texture: texture,\n    ref: ref\n  }));\n});\nconst ImageWithTexture = /*#__PURE__*/React.forwardRef((_ref3, ref) => {\n  let {\n    url: _url,\n    ...props\n  } = _ref3;\n  return /*#__PURE__*/React.createElement(ImageBase, _extends({}, props, {\n    ref: ref\n  }));\n});\nconst Image = /*#__PURE__*/React.forwardRef((props, ref) => {\n  if (props.url) return /*#__PURE__*/React.createElement(ImageWithUrl, _extends({}, props, {\n    ref: ref\n  }));else if (props.texture) return /*#__PURE__*/React.createElement(ImageWithTexture, _extends({}, props, {\n    ref: ref\n  }));else throw new Error('<Image /> requires a url or texture');\n});\nexport { Image };","map":{"version":3,"names":["_extends","React","THREE","extend","shaderMaterial","useTexture","ImageMaterialImpl","color","Color","scale","imageBounds","map","zoom","grayscale","opacity","ImageBase","forwardRef","ref","children","segments","texture","toneMapped","transparent","props","ImageMaterial","planeBounds","Array","isArray","image","width","height","createElement","args","ImageWithUrl","url","ImageWithTexture","_url","Image","Error"],"sources":["/Users/crushedsummers/Desktop/Work/Application/portfolio22/node_modules/@react-three/drei/core/Image.js"],"sourcesContent":["import _extends from '@babel/runtime/helpers/esm/extends';\nimport * as React from 'react';\nimport * as THREE from 'three';\nimport { extend } from '@react-three/fiber';\nimport { shaderMaterial } from './shaderMaterial.js';\nimport { useTexture } from './useTexture.js';\n\nconst ImageMaterialImpl = shaderMaterial({\n  color: new THREE.Color('white'),\n  scale: [1, 1],\n  imageBounds: [1, 1],\n  map: null,\n  zoom: 1,\n  grayscale: 0,\n  opacity: 1\n},\n/* glsl */\n`\n  varying vec2 vUv;\n  void main() {\n    gl_Position = projectionMatrix * viewMatrix * modelMatrix * vec4(position, 1.);\n    vUv = uv;\n  }\n`,\n/* glsl */\n`\n  // mostly from https://gist.github.com/statico/df64c5d167362ecf7b34fca0b1459a44\n  varying vec2 vUv;\n  uniform vec2 scale;\n  uniform vec2 imageBounds;\n  uniform vec3 color;\n  uniform sampler2D map;\n  uniform float zoom;\n  uniform float grayscale;\n  uniform float opacity;\n  const vec3 luma = vec3(.299, 0.587, 0.114);\n  vec4 toGrayscale(vec4 color, float intensity) {\n    return vec4(mix(color.rgb, vec3(dot(color.rgb, luma)), intensity), color.a);\n  }\n  vec2 aspect(vec2 size) {\n    return size / min(size.x, size.y);\n  }\n  void main() {\n    vec2 s = aspect(scale);\n    vec2 i = aspect(imageBounds);\n    float rs = s.x / s.y;\n    float ri = i.x / i.y;\n    vec2 new = rs < ri ? vec2(i.x * s.y / i.y, s.y) : vec2(s.x, i.y * s.x / i.x);\n    vec2 offset = (rs < ri ? vec2((new.x - s.x) / 2.0, 0.0) : vec2(0.0, (new.y - s.y) / 2.0)) / new;\n    vec2 uv = vUv * s / new + offset;\n    vec2 zUv = (uv - vec2(0.5, 0.5)) / zoom + vec2(0.5, 0.5);\n    gl_FragColor = toGrayscale(texture2D(map, zUv) * vec4(color, opacity), grayscale);\n    \n    #include <tonemapping_fragment>\n    #include <encodings_fragment>\n  }\n`);\nconst ImageBase = /*#__PURE__*/React.forwardRef(({\n  children,\n  color,\n  segments = 1,\n  scale = 1,\n  zoom = 1,\n  grayscale = 0,\n  opacity = 1,\n  texture,\n  toneMapped,\n  transparent,\n  ...props\n}, ref) => {\n  extend({\n    ImageMaterial: ImageMaterialImpl\n  });\n  const planeBounds = Array.isArray(scale) ? [scale[0], scale[1]] : [scale, scale];\n  const imageBounds = [texture.image.width, texture.image.height];\n  return /*#__PURE__*/React.createElement(\"mesh\", _extends({\n    ref: ref,\n    scale: Array.isArray(scale) ? [...scale, 1] : scale\n  }, props), /*#__PURE__*/React.createElement(\"planeGeometry\", {\n    args: [1, 1, segments, segments]\n  }), /*#__PURE__*/React.createElement(\"imageMaterial\", {\n    color: color,\n    map: texture,\n    zoom: zoom,\n    grayscale: grayscale,\n    opacity: opacity,\n    scale: planeBounds,\n    imageBounds: imageBounds,\n    toneMapped: toneMapped,\n    transparent: transparent\n  }), children);\n});\nconst ImageWithUrl = /*#__PURE__*/React.forwardRef(({\n  url,\n  ...props\n}, ref) => {\n  const texture = useTexture(url);\n  return /*#__PURE__*/React.createElement(ImageBase, _extends({}, props, {\n    texture: texture,\n    ref: ref\n  }));\n});\nconst ImageWithTexture = /*#__PURE__*/React.forwardRef(({\n  url: _url,\n  ...props\n}, ref) => {\n  return /*#__PURE__*/React.createElement(ImageBase, _extends({}, props, {\n    ref: ref\n  }));\n});\nconst Image = /*#__PURE__*/React.forwardRef((props, ref) => {\n  if (props.url) return /*#__PURE__*/React.createElement(ImageWithUrl, _extends({}, props, {\n    ref: ref\n  }));else if (props.texture) return /*#__PURE__*/React.createElement(ImageWithTexture, _extends({}, props, {\n    ref: ref\n  }));else throw new Error('<Image /> requires a url or texture');\n});\n\nexport { Image };\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}