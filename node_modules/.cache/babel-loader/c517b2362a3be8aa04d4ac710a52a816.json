{"ast":null,"code":"import _regeneratorRuntime from \"/Users/crushedsummers/Documents/GitHub/raphaeleg.github.io/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _asyncToGenerator from \"/Users/crushedsummers/Documents/GitHub/raphaeleg.github.io/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { FontLoader } from 'three-stdlib';\nimport { suspend, preload, clear } from 'suspend-react';\nvar fontLoader = null;\n\nfunction loader(_x) {\n  return _loader.apply(this, arguments);\n}\n\nfunction _loader() {\n  _loader = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee(font) {\n    var data;\n    return _regeneratorRuntime().wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            if (!fontLoader) fontLoader = new FontLoader();\n\n            if (!(typeof font === 'string')) {\n              _context.next = 9;\n              break;\n            }\n\n            _context.next = 4;\n            return fetch(font);\n\n          case 4:\n            _context.next = 6;\n            return _context.sent.json();\n\n          case 6:\n            _context.t0 = _context.sent;\n            _context.next = 10;\n            break;\n\n          case 9:\n            _context.t0 = font;\n\n          case 10:\n            data = _context.t0;\n            return _context.abrupt(\"return\", fontLoader.parse(data));\n\n          case 12:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n  return _loader.apply(this, arguments);\n}\n\nfunction useFont(font) {\n  return suspend(loader, [font]);\n}\n\nuseFont.preload = function (font) {\n  return preload(loader, [font]);\n};\n\nuseFont.clear = function (font) {\n  return clear([font]);\n};\n\nexport { useFont };","map":{"version":3,"names":["FontLoader","suspend","preload","clear","fontLoader","loader","font","fetch","json","data","parse","useFont"],"sources":["/Users/crushedsummers/Documents/GitHub/raphaeleg.github.io/node_modules/@react-three/drei/core/useFont.js"],"sourcesContent":["import { FontLoader } from 'three-stdlib';\nimport { suspend, preload, clear } from 'suspend-react';\n\nlet fontLoader = null;\n\nasync function loader(font) {\n  if (!fontLoader) fontLoader = new FontLoader();\n  let data = typeof font === 'string' ? await (await fetch(font)).json() : font;\n  return fontLoader.parse(data);\n}\n\nfunction useFont(font) {\n  return suspend(loader, [font]);\n}\n\nuseFont.preload = font => preload(loader, [font]);\n\nuseFont.clear = font => clear([font]);\n\nexport { useFont };\n"],"mappings":";;AAAA,SAASA,UAAT,QAA2B,cAA3B;AACA,SAASC,OAAT,EAAkBC,OAAlB,EAA2BC,KAA3B,QAAwC,eAAxC;AAEA,IAAIC,UAAU,GAAG,IAAjB;;SAEeC,M;;;;;uEAAf,iBAAsBC,IAAtB;IAAA;IAAA;MAAA;QAAA;UAAA;YACE,IAAI,CAACF,UAAL,EAAiBA,UAAU,GAAG,IAAIJ,UAAJ,EAAb;;YADnB,MAEa,OAAOM,IAAP,KAAgB,QAF7B;cAAA;cAAA;YAAA;;YAAA;YAAA,OAEqDC,KAAK,CAACD,IAAD,CAF1D;;UAAA;YAAA;YAAA,qBAEkEE,IAFlE;;UAAA;YAAA;YAAA;YAAA;;UAAA;YAAA,cAE2EF,IAF3E;;UAAA;YAEMG,IAFN;YAAA,iCAGSL,UAAU,CAACM,KAAX,CAAiBD,IAAjB,CAHT;;UAAA;UAAA;YAAA;QAAA;MAAA;IAAA;EAAA,C;;;;AAMA,SAASE,OAAT,CAAiBL,IAAjB,EAAuB;EACrB,OAAOL,OAAO,CAACI,MAAD,EAAS,CAACC,IAAD,CAAT,CAAd;AACD;;AAEDK,OAAO,CAACT,OAAR,GAAkB,UAAAI,IAAI;EAAA,OAAIJ,OAAO,CAACG,MAAD,EAAS,CAACC,IAAD,CAAT,CAAX;AAAA,CAAtB;;AAEAK,OAAO,CAACR,KAAR,GAAgB,UAAAG,IAAI;EAAA,OAAIH,KAAK,CAAC,CAACG,IAAD,CAAD,CAAT;AAAA,CAApB;;AAEA,SAASK,OAAT"},"metadata":{},"sourceType":"module"}