{"ast":null,"code":"import _classCallCheck from \"/Users/crushedsummers/Documents/GitHub/raphaeleg.github.io/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/Users/crushedsummers/Documents/GitHub/raphaeleg.github.io/node_modules/@babel/runtime/helpers/esm/createClass.js\";\n\n/**\n * @author Deepkolos / https://github.com/deepkolos\n */\nvar WorkerPool = /*#__PURE__*/function () {\n  function WorkerPool() {\n    var pool = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 4;\n\n    _classCallCheck(this, WorkerPool);\n\n    this.pool = pool;\n    this.queue = [];\n    this.workers = [];\n    this.workersResolve = [];\n    this.workerStatus = 0;\n  }\n\n  _createClass(WorkerPool, [{\n    key: \"_initWorker\",\n    value: function _initWorker(workerId) {\n      if (!this.workers[workerId]) {\n        var worker = this.workerCreator();\n        worker.addEventListener('message', this._onMessage.bind(this, workerId));\n        this.workers[workerId] = worker;\n      }\n    }\n  }, {\n    key: \"_getIdleWorker\",\n    value: function _getIdleWorker() {\n      for (var i = 0; i < this.pool; i++) {\n        if (!(this.workerStatus & 1 << i)) return i;\n      }\n\n      return -1;\n    }\n  }, {\n    key: \"_onMessage\",\n    value: function _onMessage(workerId, msg) {\n      var resolve = this.workersResolve[workerId];\n      resolve && resolve(msg);\n\n      if (this.queue.length) {\n        var _this$queue$shift = this.queue.shift(),\n            _resolve = _this$queue$shift.resolve,\n            _msg = _this$queue$shift.msg,\n            transfer = _this$queue$shift.transfer;\n\n        this.workersResolve[workerId] = _resolve;\n        this.workers[workerId].postMessage(_msg, transfer);\n      } else {\n        this.workerStatus ^= 1 << workerId;\n      }\n    }\n  }, {\n    key: \"setWorkerCreator\",\n    value: function setWorkerCreator(workerCreator) {\n      this.workerCreator = workerCreator;\n    }\n  }, {\n    key: \"setWorkerLimit\",\n    value: function setWorkerLimit(pool) {\n      this.pool = pool;\n    }\n  }, {\n    key: \"postMessage\",\n    value: function postMessage(msg, transfer) {\n      var _this = this;\n\n      return new Promise(function (resolve) {\n        var workerId = _this._getIdleWorker();\n\n        if (workerId !== -1) {\n          _this._initWorker(workerId);\n\n          _this.workerStatus |= 1 << workerId;\n          _this.workersResolve[workerId] = resolve;\n\n          _this.workers[workerId].postMessage(msg, transfer);\n        } else {\n          _this.queue.push({\n            resolve: resolve,\n            msg: msg,\n            transfer: transfer\n          });\n        }\n      });\n    }\n  }, {\n    key: \"dispose\",\n    value: function dispose() {\n      this.workers.forEach(function (worker) {\n        return worker.terminate();\n      });\n      this.workersResolve.length = 0;\n      this.workers.length = 0;\n      this.queue.length = 0;\n      this.workerStatus = 0;\n    }\n  }]);\n\n  return WorkerPool;\n}();\n\nexport { WorkerPool };","map":{"version":3,"names":["WorkerPool","pool","queue","workers","workersResolve","workerStatus","workerId","worker","workerCreator","addEventListener","_onMessage","bind","i","msg","resolve","length","shift","transfer","postMessage","Promise","_getIdleWorker","_initWorker","push","forEach","terminate"],"sources":["/Users/crushedsummers/Documents/GitHub/raphaeleg.github.io/node_modules/three-stdlib/utils/WorkerPool.js"],"sourcesContent":["/**\n * @author Deepkolos / https://github.com/deepkolos\n */\nclass WorkerPool {\n  constructor(pool = 4) {\n    this.pool = pool;\n    this.queue = [];\n    this.workers = [];\n    this.workersResolve = [];\n    this.workerStatus = 0;\n  }\n\n  _initWorker(workerId) {\n    if (!this.workers[workerId]) {\n      const worker = this.workerCreator();\n      worker.addEventListener('message', this._onMessage.bind(this, workerId));\n      this.workers[workerId] = worker;\n    }\n  }\n\n  _getIdleWorker() {\n    for (let i = 0; i < this.pool; i++) if (!(this.workerStatus & 1 << i)) return i;\n\n    return -1;\n  }\n\n  _onMessage(workerId, msg) {\n    const resolve = this.workersResolve[workerId];\n    resolve && resolve(msg);\n\n    if (this.queue.length) {\n      const {\n        resolve,\n        msg,\n        transfer\n      } = this.queue.shift();\n      this.workersResolve[workerId] = resolve;\n      this.workers[workerId].postMessage(msg, transfer);\n    } else {\n      this.workerStatus ^= 1 << workerId;\n    }\n  }\n\n  setWorkerCreator(workerCreator) {\n    this.workerCreator = workerCreator;\n  }\n\n  setWorkerLimit(pool) {\n    this.pool = pool;\n  }\n\n  postMessage(msg, transfer) {\n    return new Promise(resolve => {\n      const workerId = this._getIdleWorker();\n\n      if (workerId !== -1) {\n        this._initWorker(workerId);\n\n        this.workerStatus |= 1 << workerId;\n        this.workersResolve[workerId] = resolve;\n        this.workers[workerId].postMessage(msg, transfer);\n      } else {\n        this.queue.push({\n          resolve,\n          msg,\n          transfer\n        });\n      }\n    });\n  }\n\n  dispose() {\n    this.workers.forEach(worker => worker.terminate());\n    this.workersResolve.length = 0;\n    this.workers.length = 0;\n    this.queue.length = 0;\n    this.workerStatus = 0;\n  }\n\n}\n\nexport { WorkerPool };\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}