{"ast":null,"code":"export const processLazyPreloader = (swiper, imageEl) => {\n  if (!swiper || swiper.destroyed || !swiper.params) return;\n\n  const slideSelector = () => swiper.isElement ? `swiper-slide` : `.${swiper.params.slideClass}`;\n\n  const slideEl = imageEl.closest(slideSelector());\n\n  if (slideEl) {\n    const lazyEl = slideEl.querySelector(`.${swiper.params.lazyPreloaderClass}`);\n    if (lazyEl) lazyEl.remove();\n  }\n};\n\nconst unlazy = (swiper, index) => {\n  if (!swiper.slides[index]) return;\n  const imageEl = swiper.slides[index].querySelector('[loading=\"lazy\"]');\n  if (imageEl) imageEl.removeAttribute('loading');\n};\n\nexport const preload = swiper => {\n  if (!swiper || swiper.destroyed || !swiper.params) return;\n  let amount = swiper.params.lazyPreloadPrevNext;\n  const len = swiper.slides.length;\n  if (!len || !amount || amount < 0) return;\n  amount = Math.min(amount, len);\n  const slidesPerView = swiper.params.slidesPerView === 'auto' ? swiper.slidesPerViewDynamic() : Math.ceil(swiper.params.slidesPerView);\n  const activeIndex = swiper.activeIndex;\n  const slideIndexLastInView = activeIndex + slidesPerView - 1;\n\n  if (swiper.params.rewind) {\n    for (let i = activeIndex - amount; i <= slideIndexLastInView + amount; i += 1) {\n      const realIndex = (i % len + len) % len;\n      if (realIndex !== activeIndex && realIndex > slideIndexLastInView) unlazy(swiper, realIndex);\n    }\n  } else {\n    for (let i = Math.max(slideIndexLastInView - amount, 0); i <= Math.min(slideIndexLastInView + amount, len - 1); i += 1) {\n      if (i !== activeIndex && i > slideIndexLastInView) unlazy(swiper, i);\n    }\n  }\n};","map":{"version":3,"names":["processLazyPreloader","swiper","imageEl","destroyed","params","slideSelector","isElement","slideClass","slideEl","closest","lazyEl","querySelector","lazyPreloaderClass","remove","unlazy","index","slides","removeAttribute","preload","amount","lazyPreloadPrevNext","len","length","Math","min","slidesPerView","slidesPerViewDynamic","ceil","activeIndex","slideIndexLastInView","rewind","i","realIndex","max"],"sources":["/Users/crushedsummers/Documents/GitHub/raphaeleg.github.io/node_modules/swiper/shared/process-lazy-preloader.js"],"sourcesContent":["export const processLazyPreloader = (swiper, imageEl) => {\n  if (!swiper || swiper.destroyed || !swiper.params) return;\n  const slideSelector = () => swiper.isElement ? `swiper-slide` : `.${swiper.params.slideClass}`;\n  const slideEl = imageEl.closest(slideSelector());\n  if (slideEl) {\n    const lazyEl = slideEl.querySelector(`.${swiper.params.lazyPreloaderClass}`);\n    if (lazyEl) lazyEl.remove();\n  }\n};\nconst unlazy = (swiper, index) => {\n  if (!swiper.slides[index]) return;\n  const imageEl = swiper.slides[index].querySelector('[loading=\"lazy\"]');\n  if (imageEl) imageEl.removeAttribute('loading');\n};\nexport const preload = swiper => {\n  if (!swiper || swiper.destroyed || !swiper.params) return;\n  let amount = swiper.params.lazyPreloadPrevNext;\n  const len = swiper.slides.length;\n  if (!len || !amount || amount < 0) return;\n  amount = Math.min(amount, len);\n  const slidesPerView = swiper.params.slidesPerView === 'auto' ? swiper.slidesPerViewDynamic() : Math.ceil(swiper.params.slidesPerView);\n  const activeIndex = swiper.activeIndex;\n  const slideIndexLastInView = activeIndex + slidesPerView - 1;\n  if (swiper.params.rewind) {\n    for (let i = activeIndex - amount; i <= slideIndexLastInView + amount; i += 1) {\n      const realIndex = (i % len + len) % len;\n      if (realIndex !== activeIndex && realIndex > slideIndexLastInView) unlazy(swiper, realIndex);\n    }\n  } else {\n    for (let i = Math.max(slideIndexLastInView - amount, 0); i <= Math.min(slideIndexLastInView + amount, len - 1); i += 1) {\n      if (i !== activeIndex && i > slideIndexLastInView) unlazy(swiper, i);\n    }\n  }\n};"],"mappings":"AAAA,OAAO,MAAMA,oBAAoB,GAAG,CAACC,MAAD,EAASC,OAAT,KAAqB;EACvD,IAAI,CAACD,MAAD,IAAWA,MAAM,CAACE,SAAlB,IAA+B,CAACF,MAAM,CAACG,MAA3C,EAAmD;;EACnD,MAAMC,aAAa,GAAG,MAAMJ,MAAM,CAACK,SAAP,GAAoB,cAApB,GAAqC,IAAGL,MAAM,CAACG,MAAP,CAAcG,UAAW,EAA7F;;EACA,MAAMC,OAAO,GAAGN,OAAO,CAACO,OAAR,CAAgBJ,aAAa,EAA7B,CAAhB;;EACA,IAAIG,OAAJ,EAAa;IACX,MAAME,MAAM,GAAGF,OAAO,CAACG,aAAR,CAAuB,IAAGV,MAAM,CAACG,MAAP,CAAcQ,kBAAmB,EAA3D,CAAf;IACA,IAAIF,MAAJ,EAAYA,MAAM,CAACG,MAAP;EACb;AACF,CARM;;AASP,MAAMC,MAAM,GAAG,CAACb,MAAD,EAASc,KAAT,KAAmB;EAChC,IAAI,CAACd,MAAM,CAACe,MAAP,CAAcD,KAAd,CAAL,EAA2B;EAC3B,MAAMb,OAAO,GAAGD,MAAM,CAACe,MAAP,CAAcD,KAAd,EAAqBJ,aAArB,CAAmC,kBAAnC,CAAhB;EACA,IAAIT,OAAJ,EAAaA,OAAO,CAACe,eAAR,CAAwB,SAAxB;AACd,CAJD;;AAKA,OAAO,MAAMC,OAAO,GAAGjB,MAAM,IAAI;EAC/B,IAAI,CAACA,MAAD,IAAWA,MAAM,CAACE,SAAlB,IAA+B,CAACF,MAAM,CAACG,MAA3C,EAAmD;EACnD,IAAIe,MAAM,GAAGlB,MAAM,CAACG,MAAP,CAAcgB,mBAA3B;EACA,MAAMC,GAAG,GAAGpB,MAAM,CAACe,MAAP,CAAcM,MAA1B;EACA,IAAI,CAACD,GAAD,IAAQ,CAACF,MAAT,IAAmBA,MAAM,GAAG,CAAhC,EAAmC;EACnCA,MAAM,GAAGI,IAAI,CAACC,GAAL,CAASL,MAAT,EAAiBE,GAAjB,CAAT;EACA,MAAMI,aAAa,GAAGxB,MAAM,CAACG,MAAP,CAAcqB,aAAd,KAAgC,MAAhC,GAAyCxB,MAAM,CAACyB,oBAAP,EAAzC,GAAyEH,IAAI,CAACI,IAAL,CAAU1B,MAAM,CAACG,MAAP,CAAcqB,aAAxB,CAA/F;EACA,MAAMG,WAAW,GAAG3B,MAAM,CAAC2B,WAA3B;EACA,MAAMC,oBAAoB,GAAGD,WAAW,GAAGH,aAAd,GAA8B,CAA3D;;EACA,IAAIxB,MAAM,CAACG,MAAP,CAAc0B,MAAlB,EAA0B;IACxB,KAAK,IAAIC,CAAC,GAAGH,WAAW,GAAGT,MAA3B,EAAmCY,CAAC,IAAIF,oBAAoB,GAAGV,MAA/D,EAAuEY,CAAC,IAAI,CAA5E,EAA+E;MAC7E,MAAMC,SAAS,GAAG,CAACD,CAAC,GAAGV,GAAJ,GAAUA,GAAX,IAAkBA,GAApC;MACA,IAAIW,SAAS,KAAKJ,WAAd,IAA6BI,SAAS,GAAGH,oBAA7C,EAAmEf,MAAM,CAACb,MAAD,EAAS+B,SAAT,CAAN;IACpE;EACF,CALD,MAKO;IACL,KAAK,IAAID,CAAC,GAAGR,IAAI,CAACU,GAAL,CAASJ,oBAAoB,GAAGV,MAAhC,EAAwC,CAAxC,CAAb,EAAyDY,CAAC,IAAIR,IAAI,CAACC,GAAL,CAASK,oBAAoB,GAAGV,MAAhC,EAAwCE,GAAG,GAAG,CAA9C,CAA9D,EAAgHU,CAAC,IAAI,CAArH,EAAwH;MACtH,IAAIA,CAAC,KAAKH,WAAN,IAAqBG,CAAC,GAAGF,oBAA7B,EAAmDf,MAAM,CAACb,MAAD,EAAS8B,CAAT,CAAN;IACpD;EACF;AACF,CAnBM"},"metadata":{},"sourceType":"module"}