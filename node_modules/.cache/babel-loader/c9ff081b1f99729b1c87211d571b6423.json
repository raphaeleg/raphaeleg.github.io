{"ast":null,"code":"export default function updateProgress(translate) {\n  const swiper = this;\n\n  if (typeof translate === 'undefined') {\n    const multiplier = swiper.rtlTranslate ? -1 : 1; // eslint-disable-next-line\n\n    translate = swiper && swiper.translate && swiper.translate * multiplier || 0;\n  }\n\n  const params = swiper.params;\n  const translatesDiff = swiper.maxTranslate() - swiper.minTranslate();\n  let {\n    progress,\n    isBeginning,\n    isEnd,\n    progressLoop\n  } = swiper;\n  const wasBeginning = isBeginning;\n  const wasEnd = isEnd;\n\n  if (translatesDiff === 0) {\n    progress = 0;\n    isBeginning = true;\n    isEnd = true;\n  } else {\n    progress = (translate - swiper.minTranslate()) / translatesDiff;\n    const isBeginningRounded = Math.abs(translate - swiper.minTranslate()) < 1;\n    const isEndRounded = Math.abs(translate - swiper.maxTranslate()) < 1;\n    isBeginning = isBeginningRounded || progress <= 0;\n    isEnd = isEndRounded || progress >= 1;\n    if (isBeginningRounded) progress = 0;\n    if (isEndRounded) progress = 1;\n  }\n\n  if (params.loop) {\n    const firstSlideIndex = swiper.getSlideIndexByData(0);\n    const lastSlideIndex = swiper.getSlideIndexByData(swiper.slides.length - 1);\n    const firstSlideTranslate = swiper.slidesGrid[firstSlideIndex];\n    const lastSlideTranslate = swiper.slidesGrid[lastSlideIndex];\n    const translateMax = swiper.slidesGrid[swiper.slidesGrid.length - 1];\n    const translateAbs = Math.abs(translate);\n\n    if (translateAbs >= firstSlideTranslate) {\n      progressLoop = (translateAbs - firstSlideTranslate) / translateMax;\n    } else {\n      progressLoop = (translateAbs + translateMax - lastSlideTranslate) / translateMax;\n    }\n\n    if (progressLoop > 1) progressLoop -= 1;\n  }\n\n  Object.assign(swiper, {\n    progress,\n    progressLoop,\n    isBeginning,\n    isEnd\n  });\n  if (params.watchSlidesProgress || params.centeredSlides && params.autoHeight) swiper.updateSlidesProgress(translate);\n\n  if (isBeginning && !wasBeginning) {\n    swiper.emit('reachBeginning toEdge');\n  }\n\n  if (isEnd && !wasEnd) {\n    swiper.emit('reachEnd toEdge');\n  }\n\n  if (wasBeginning && !isBeginning || wasEnd && !isEnd) {\n    swiper.emit('fromEdge');\n  }\n\n  swiper.emit('progress', progress);\n}","map":{"version":3,"names":["updateProgress","translate","swiper","multiplier","rtlTranslate","params","translatesDiff","maxTranslate","minTranslate","progress","isBeginning","isEnd","progressLoop","wasBeginning","wasEnd","isBeginningRounded","Math","abs","isEndRounded","loop","firstSlideIndex","getSlideIndexByData","lastSlideIndex","slides","length","firstSlideTranslate","slidesGrid","lastSlideTranslate","translateMax","translateAbs","Object","assign","watchSlidesProgress","centeredSlides","autoHeight","updateSlidesProgress","emit"],"sources":["/Users/crushedsummers/Documents/GitHub/raphaeleg.github.io/node_modules/swiper/core/update/updateProgress.js"],"sourcesContent":["export default function updateProgress(translate) {\n  const swiper = this;\n  if (typeof translate === 'undefined') {\n    const multiplier = swiper.rtlTranslate ? -1 : 1;\n    // eslint-disable-next-line\n    translate = swiper && swiper.translate && swiper.translate * multiplier || 0;\n  }\n  const params = swiper.params;\n  const translatesDiff = swiper.maxTranslate() - swiper.minTranslate();\n  let {\n    progress,\n    isBeginning,\n    isEnd,\n    progressLoop\n  } = swiper;\n  const wasBeginning = isBeginning;\n  const wasEnd = isEnd;\n  if (translatesDiff === 0) {\n    progress = 0;\n    isBeginning = true;\n    isEnd = true;\n  } else {\n    progress = (translate - swiper.minTranslate()) / translatesDiff;\n    const isBeginningRounded = Math.abs(translate - swiper.minTranslate()) < 1;\n    const isEndRounded = Math.abs(translate - swiper.maxTranslate()) < 1;\n    isBeginning = isBeginningRounded || progress <= 0;\n    isEnd = isEndRounded || progress >= 1;\n    if (isBeginningRounded) progress = 0;\n    if (isEndRounded) progress = 1;\n  }\n  if (params.loop) {\n    const firstSlideIndex = swiper.getSlideIndexByData(0);\n    const lastSlideIndex = swiper.getSlideIndexByData(swiper.slides.length - 1);\n    const firstSlideTranslate = swiper.slidesGrid[firstSlideIndex];\n    const lastSlideTranslate = swiper.slidesGrid[lastSlideIndex];\n    const translateMax = swiper.slidesGrid[swiper.slidesGrid.length - 1];\n    const translateAbs = Math.abs(translate);\n    if (translateAbs >= firstSlideTranslate) {\n      progressLoop = (translateAbs - firstSlideTranslate) / translateMax;\n    } else {\n      progressLoop = (translateAbs + translateMax - lastSlideTranslate) / translateMax;\n    }\n    if (progressLoop > 1) progressLoop -= 1;\n  }\n  Object.assign(swiper, {\n    progress,\n    progressLoop,\n    isBeginning,\n    isEnd\n  });\n  if (params.watchSlidesProgress || params.centeredSlides && params.autoHeight) swiper.updateSlidesProgress(translate);\n  if (isBeginning && !wasBeginning) {\n    swiper.emit('reachBeginning toEdge');\n  }\n  if (isEnd && !wasEnd) {\n    swiper.emit('reachEnd toEdge');\n  }\n  if (wasBeginning && !isBeginning || wasEnd && !isEnd) {\n    swiper.emit('fromEdge');\n  }\n  swiper.emit('progress', progress);\n}"],"mappings":"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"},"metadata":{},"sourceType":"module"}