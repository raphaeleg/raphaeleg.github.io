{"ast":null,"code":"import _objectSpread from \"/Users/crushedsummers/Documents/GitHub/raphaeleg.github.io/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport _objectWithoutProperties from \"/Users/crushedsummers/Documents/GitHub/raphaeleg.github.io/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js\";\nimport _createClass from \"/Users/crushedsummers/Documents/GitHub/raphaeleg.github.io/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _classCallCheck from \"/Users/crushedsummers/Documents/GitHub/raphaeleg.github.io/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _possibleConstructorReturn from \"/Users/crushedsummers/Documents/GitHub/raphaeleg.github.io/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn.js\";\nimport _inherits from \"/Users/crushedsummers/Documents/GitHub/raphaeleg.github.io/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"/Users/crushedsummers/Documents/GitHub/raphaeleg.github.io/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\nvar _excluded = [\"bevelEnabled\", \"bevelSize\", \"bevelThickness\", \"font\", \"height\", \"size\", \"lineHeight\", \"letterSpacing\"];\nimport { ExtrudeGeometry } from 'three';\n\nvar TextGeometry = /*#__PURE__*/function (_ExtrudeGeometry) {\n  _inherits(TextGeometry, _ExtrudeGeometry);\n\n  var _super = _createSuper(TextGeometry);\n\n  function TextGeometry(text) {\n    var _this;\n\n    var parameters = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n    _classCallCheck(this, TextGeometry);\n\n    var _parameters$bevelEnab = parameters.bevelEnabled,\n        bevelEnabled = _parameters$bevelEnab === void 0 ? false : _parameters$bevelEnab,\n        _parameters$bevelSize = parameters.bevelSize,\n        bevelSize = _parameters$bevelSize === void 0 ? 8 : _parameters$bevelSize,\n        _parameters$bevelThic = parameters.bevelThickness,\n        bevelThickness = _parameters$bevelThic === void 0 ? 10 : _parameters$bevelThic,\n        font = parameters.font,\n        _parameters$height = parameters.height,\n        height = _parameters$height === void 0 ? 50 : _parameters$height,\n        _parameters$size = parameters.size,\n        size = _parameters$size === void 0 ? 100 : _parameters$size,\n        _parameters$lineHeigh = parameters.lineHeight,\n        lineHeight = _parameters$lineHeigh === void 0 ? 1 : _parameters$lineHeigh,\n        _parameters$letterSpa = parameters.letterSpacing,\n        letterSpacing = _parameters$letterSpa === void 0 ? 0 : _parameters$letterSpa,\n        rest = _objectWithoutProperties(parameters, _excluded);\n\n    if (font === undefined) {\n      _this = _super.call(this); // generate default extrude geometry\n    } else {\n      var shapes = font.generateShapes(text, size, {\n        lineHeight: lineHeight,\n        letterSpacing: letterSpacing\n      });\n      _this = _super.call(this, shapes, _objectSpread(_objectSpread({}, rest), {}, {\n        bevelEnabled: bevelEnabled,\n        bevelSize: bevelSize,\n        bevelThickness: bevelThickness,\n        depth: height\n      }));\n    }\n\n    _this.type = 'TextGeometry';\n    return _possibleConstructorReturn(_this);\n  }\n\n  return _createClass(TextGeometry);\n}(ExtrudeGeometry);\n\nexport { TextGeometry as TextBufferGeometry, TextGeometry };","map":{"version":3,"names":["ExtrudeGeometry","TextGeometry","text","parameters","bevelEnabled","bevelSize","bevelThickness","font","height","size","lineHeight","letterSpacing","rest","undefined","shapes","generateShapes","depth","type","TextBufferGeometry"],"sources":["/Users/crushedsummers/Documents/GitHub/raphaeleg.github.io/node_modules/three-stdlib/geometries/TextGeometry.js"],"sourcesContent":["import { ExtrudeGeometry } from 'three';\n\nclass TextGeometry extends ExtrudeGeometry {\n  constructor(text, parameters = {}) {\n    const {\n      bevelEnabled = false,\n      bevelSize = 8,\n      bevelThickness = 10,\n      font,\n      height = 50,\n      size = 100,\n      lineHeight = 1,\n      letterSpacing = 0,\n      ...rest\n    } = parameters;\n\n    if (font === undefined) {\n      super(); // generate default extrude geometry\n    } else {\n      const shapes = font.generateShapes(text, size, {\n        lineHeight,\n        letterSpacing\n      });\n      super(shapes, { ...rest,\n        bevelEnabled,\n        bevelSize,\n        bevelThickness,\n        depth: height\n      });\n    }\n\n    this.type = 'TextGeometry';\n  }\n\n}\n\nexport { TextGeometry as TextBufferGeometry, TextGeometry };\n"],"mappings":";;;;;;;;AAAA,SAASA,eAAT,QAAgC,OAAhC;;IAEMC,Y;;;;;EACJ,sBAAYC,IAAZ,EAAmC;IAAA;;IAAA,IAAjBC,UAAiB,uEAAJ,EAAI;;IAAA;;IACjC,4BAUIA,UAVJ,CACEC,YADF;IAAA,IACEA,YADF,sCACiB,KADjB;IAAA,4BAUID,UAVJ,CAEEE,SAFF;IAAA,IAEEA,SAFF,sCAEc,CAFd;IAAA,4BAUIF,UAVJ,CAGEG,cAHF;IAAA,IAGEA,cAHF,sCAGmB,EAHnB;IAAA,IAIEC,IAJF,GAUIJ,UAVJ,CAIEI,IAJF;IAAA,yBAUIJ,UAVJ,CAKEK,MALF;IAAA,IAKEA,MALF,mCAKW,EALX;IAAA,uBAUIL,UAVJ,CAMEM,IANF;IAAA,IAMEA,IANF,iCAMS,GANT;IAAA,4BAUIN,UAVJ,CAOEO,UAPF;IAAA,IAOEA,UAPF,sCAOe,CAPf;IAAA,4BAUIP,UAVJ,CAQEQ,aARF;IAAA,IAQEA,aARF,sCAQkB,CARlB;IAAA,IASKC,IATL,4BAUIT,UAVJ;;IAYA,IAAII,IAAI,KAAKM,SAAb,EAAwB;MACtB,0BADsB,CACb;IACV,CAFD,MAEO;MACL,IAAMC,MAAM,GAAGP,IAAI,CAACQ,cAAL,CAAoBb,IAApB,EAA0BO,IAA1B,EAAgC;QAC7CC,UAAU,EAAVA,UAD6C;QAE7CC,aAAa,EAAbA;MAF6C,CAAhC,CAAf;MAIA,0BAAMG,MAAN,kCAAmBF,IAAnB;QACER,YAAY,EAAZA,YADF;QAEEC,SAAS,EAATA,SAFF;QAGEC,cAAc,EAAdA,cAHF;QAIEU,KAAK,EAAER;MAJT;IAMD;;IAED,MAAKS,IAAL,GAAY,cAAZ;IA5BiC;EA6BlC;;;EA9BwBjB,e;;AAkC3B,SAASC,YAAY,IAAIiB,kBAAzB,EAA6CjB,YAA7C"},"metadata":{},"sourceType":"module"}