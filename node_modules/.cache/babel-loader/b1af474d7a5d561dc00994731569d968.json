{"ast":null,"code":"import _objectWithoutProperties from \"/Users/crushedsummers/Documents/GitHub/raphaeleg.github.io/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js\";\nimport _slicedToArray from \"/Users/crushedsummers/Documents/GitHub/raphaeleg.github.io/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nvar _excluded = [\"children\", \"weight\", \"transform\", \"instances\", \"mesh\", \"count\"];\nimport _extends from '@babel/runtime/helpers/esm/extends';\nimport * as React from 'react';\nimport { MeshSurfaceSampler } from 'three-stdlib';\nimport { InstancedBufferAttribute, Vector3, Color, Object3D } from 'three';\n\nfunction useSurfaceSampler(mesh) {\n  var count = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 16;\n  var transform = arguments.length > 2 ? arguments[2] : undefined;\n  var weight = arguments.length > 3 ? arguments[3] : undefined;\n  var instanceMesh = arguments.length > 4 ? arguments[4] : undefined;\n\n  var _React$useState = React.useState(function () {\n    var arr = Array.from({\n      length: count\n    }, function () {\n      return [1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1];\n    }).flat();\n    return new InstancedBufferAttribute(Float32Array.from(arr), 16);\n  }),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      buffer = _React$useState2[0],\n      setBuffer = _React$useState2[1];\n\n  React.useLayoutEffect(function () {\n    if (typeof mesh.current === 'undefined') return;\n    var sampler = new MeshSurfaceSampler(mesh.current);\n\n    if (weight) {\n      sampler.setWeightAttribute(weight);\n    }\n\n    sampler.build();\n    var position = new Vector3();\n    var normal = new Vector3();\n    var color = new Color();\n    var dummy = new Object3D();\n    mesh.current.updateMatrixWorld(true);\n\n    for (var i = 0; i < count; i++) {\n      sampler.sample(position, normal, color);\n\n      if (typeof transform === 'function') {\n        transform({\n          dummy: dummy,\n          sampledMesh: mesh.current,\n          position: position,\n          normal: normal,\n          color: color\n        }, i);\n      } else {\n        dummy.position.copy(position);\n      }\n\n      dummy.updateMatrix();\n\n      if (instanceMesh != null && instanceMesh.current) {\n        instanceMesh.current.setMatrixAt(i, dummy.matrix);\n      }\n\n      dummy.matrix.toArray(buffer.array, i * 16);\n    }\n\n    if (instanceMesh != null && instanceMesh.current) {\n      instanceMesh.current.instanceMatrix.needsUpdate = true;\n    }\n\n    buffer.needsUpdate = true;\n    setBuffer(buffer.clone());\n  }, [mesh, instanceMesh, weight, count, transform]);\n  return buffer;\n}\n\nfunction Sampler(_ref) {\n  var children = _ref.children,\n      weight = _ref.weight,\n      transform = _ref.transform,\n      instances = _ref.instances,\n      mesh = _ref.mesh,\n      _ref$count = _ref.count,\n      count = _ref$count === void 0 ? 16 : _ref$count,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  var group = React.useRef(null);\n  var instancedRef = React.useRef(null);\n  var meshToSampleRef = React.useRef(null);\n  React.useLayoutEffect(function () {\n    var _instances$current, _mesh$current;\n\n    instancedRef.current = (_instances$current = instances == null ? void 0 : instances.current) !== null && _instances$current !== void 0 ? _instances$current : group.current.children.find(function (c) {\n      return c.hasOwnProperty('instanceMatrix');\n    });\n    meshToSampleRef.current = (_mesh$current = mesh == null ? void 0 : mesh.current) !== null && _mesh$current !== void 0 ? _mesh$current : group.current.children.find(function (c) {\n      return c.type === 'Mesh';\n    });\n  }, [children, mesh == null ? void 0 : mesh.current, instances == null ? void 0 : instances.current]);\n  useSurfaceSampler(meshToSampleRef, count, transform, weight, instancedRef);\n  return /*#__PURE__*/React.createElement(\"group\", _extends({\n    ref: group\n  }, props), children);\n}\n\nexport { Sampler, useSurfaceSampler };","map":{"version":3,"names":["_extends","React","MeshSurfaceSampler","InstancedBufferAttribute","Vector3","Color","Object3D","useSurfaceSampler","mesh","count","transform","weight","instanceMesh","useState","arr","Array","from","length","flat","Float32Array","buffer","setBuffer","useLayoutEffect","current","sampler","setWeightAttribute","build","position","normal","color","dummy","updateMatrixWorld","i","sample","sampledMesh","copy","updateMatrix","setMatrixAt","matrix","toArray","array","instanceMatrix","needsUpdate","clone","Sampler","children","instances","props","group","useRef","instancedRef","meshToSampleRef","_instances$current","_mesh$current","find","c","hasOwnProperty","type","createElement","ref"],"sources":["/Users/crushedsummers/Documents/GitHub/raphaeleg.github.io/node_modules/@react-three/drei/core/Sampler.js"],"sourcesContent":["import _extends from '@babel/runtime/helpers/esm/extends';\nimport * as React from 'react';\nimport { MeshSurfaceSampler } from 'three-stdlib';\nimport { InstancedBufferAttribute, Vector3, Color, Object3D } from 'three';\n\nfunction useSurfaceSampler(mesh, count = 16, transform, weight, instanceMesh) {\n  const [buffer, setBuffer] = React.useState(() => {\n    const arr = Array.from({\n      length: count\n    }, () => [1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1]).flat();\n    return new InstancedBufferAttribute(Float32Array.from(arr), 16);\n  });\n  React.useLayoutEffect(() => {\n    if (typeof mesh.current === 'undefined') return;\n    const sampler = new MeshSurfaceSampler(mesh.current);\n\n    if (weight) {\n      sampler.setWeightAttribute(weight);\n    }\n\n    sampler.build();\n    const position = new Vector3();\n    const normal = new Vector3();\n    const color = new Color();\n    const dummy = new Object3D();\n    mesh.current.updateMatrixWorld(true);\n\n    for (let i = 0; i < count; i++) {\n      sampler.sample(position, normal, color);\n\n      if (typeof transform === 'function') {\n        transform({\n          dummy,\n          sampledMesh: mesh.current,\n          position,\n          normal,\n          color\n        }, i);\n      } else {\n        dummy.position.copy(position);\n      }\n\n      dummy.updateMatrix();\n\n      if (instanceMesh != null && instanceMesh.current) {\n        instanceMesh.current.setMatrixAt(i, dummy.matrix);\n      }\n\n      dummy.matrix.toArray(buffer.array, i * 16);\n    }\n\n    if (instanceMesh != null && instanceMesh.current) {\n      instanceMesh.current.instanceMatrix.needsUpdate = true;\n    }\n\n    buffer.needsUpdate = true;\n    setBuffer(buffer.clone());\n  }, [mesh, instanceMesh, weight, count, transform]);\n  return buffer;\n}\nfunction Sampler({\n  children,\n  weight,\n  transform,\n  instances,\n  mesh,\n  count = 16,\n  ...props\n}) {\n  const group = React.useRef(null);\n  const instancedRef = React.useRef(null);\n  const meshToSampleRef = React.useRef(null);\n  React.useLayoutEffect(() => {\n    var _instances$current, _mesh$current;\n\n    instancedRef.current = (_instances$current = instances == null ? void 0 : instances.current) !== null && _instances$current !== void 0 ? _instances$current : group.current.children.find(c => c.hasOwnProperty('instanceMatrix'));\n    meshToSampleRef.current = (_mesh$current = mesh == null ? void 0 : mesh.current) !== null && _mesh$current !== void 0 ? _mesh$current : group.current.children.find(c => c.type === 'Mesh');\n  }, [children, mesh == null ? void 0 : mesh.current, instances == null ? void 0 : instances.current]);\n  useSurfaceSampler(meshToSampleRef, count, transform, weight, instancedRef);\n  return /*#__PURE__*/React.createElement(\"group\", _extends({\n    ref: group\n  }, props), children);\n}\n\nexport { Sampler, useSurfaceSampler };\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}