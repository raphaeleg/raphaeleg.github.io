{"ast":null,"code":"import _objectWithoutProperties from \"/Users/crushedsummers/Documents/GitHub/raphaeleg.github.io/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js\";\nimport _objectSpread from \"/Users/crushedsummers/Documents/GitHub/raphaeleg.github.io/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nvar _excluded = [\"isChild\", \"object\", \"children\", \"deep\", \"castShadow\", \"receiveShadow\", \"inject\", \"keys\"],\n    _excluded2 = [\"children\"];\nimport _extends from '@babel/runtime/helpers/esm/extends';\nimport * as THREE from 'three';\nimport * as React from 'react';\nimport pick from 'lodash.pick';\nimport { SkeletonUtils } from 'three-stdlib';\n\nfunction createSpread(child, _ref) {\n  var _ref$keys = _ref.keys,\n      keys = _ref$keys === void 0 ? ['near', 'far', 'color', 'distance', 'decay', 'penumbra', 'angle', 'intensity', 'skeleton', 'visible', 'castShadow', 'receiveShadow', 'morphTargetDictionary', 'morphTargetInfluences', 'name', 'geometry', 'material', 'position', 'rotation', 'scale', 'up', 'userData', 'bindMode', 'bindMatrix', 'bindMatrixInverse', 'skeleton'] : _ref$keys,\n      deep = _ref.deep,\n      inject = _ref.inject,\n      castShadow = _ref.castShadow,\n      receiveShadow = _ref.receiveShadow;\n  var spread = pick(child, keys);\n\n  if (deep) {\n    if (spread.geometry && deep !== 'materialsOnly') spread.geometry = spread.geometry.clone();\n    if (spread.material && deep !== 'geometriesOnly') spread.material = spread.material.clone();\n  }\n\n  if (inject) {\n    if (typeof inject === 'function') spread = _objectSpread(_objectSpread({}, spread), {}, {\n      children: inject(child)\n    });else if ( /*#__PURE__*/React.isValidElement(inject)) spread = _objectSpread(_objectSpread({}, spread), {}, {\n      children: inject\n    });else spread = _objectSpread(_objectSpread({}, spread), inject);\n  }\n\n  if (child instanceof THREE.Mesh) {\n    if (castShadow) spread.castShadow = true;\n    if (receiveShadow) spread.receiveShadow = true;\n  }\n\n  return spread;\n}\n\nvar Clone = /*#__PURE__*/React.forwardRef(function (_ref2, forwardRef) {\n  var _ref2$isChild = _ref2.isChild,\n      isChild = _ref2$isChild === void 0 ? false : _ref2$isChild,\n      object = _ref2.object,\n      children = _ref2.children,\n      deep = _ref2.deep,\n      castShadow = _ref2.castShadow,\n      receiveShadow = _ref2.receiveShadow,\n      inject = _ref2.inject,\n      keys = _ref2.keys,\n      props = _objectWithoutProperties(_ref2, _excluded);\n\n  var _object;\n\n  var config = {\n    keys: keys,\n    deep: deep,\n    inject: inject,\n    castShadow: castShadow,\n    receiveShadow: receiveShadow\n  };\n  object = React.useMemo(function () {\n    if (isChild === false && !Array.isArray(object)) {\n      var isSkinned = false;\n      object.traverse(function (object) {\n        if (object.isSkinnedMesh) isSkinned = true;\n      });\n      if (isSkinned) return SkeletonUtils.clone(object);\n    }\n\n    return object;\n  }, [object, isChild]); // Deal with arrayed clones\n\n  if (Array.isArray(object)) {\n    return /*#__PURE__*/React.createElement(\"group\", _extends({}, props, {\n      ref: forwardRef\n    }), object.map(function (o) {\n      return /*#__PURE__*/React.createElement(Clone, _extends({\n        key: o.uuid,\n        object: o\n      }, config));\n    }), children);\n  } // Singleton clones\n\n\n  var _createSpread = createSpread(object, config),\n      injectChildren = _createSpread.children,\n      spread = _objectWithoutProperties(_createSpread, _excluded2);\n\n  var Element = object.type[0].toLowerCase() + object.type.slice(1);\n  return /*#__PURE__*/React.createElement(Element, _extends({}, spread, props, {\n    ref: forwardRef\n  }), ((_object = object) == null ? void 0 : _object.children).map(function (child) {\n    if (child.type === 'Bone') return /*#__PURE__*/React.createElement(\"primitive\", _extends({\n      key: child.uuid,\n      object: child\n    }, config));\n    return /*#__PURE__*/React.createElement(Clone, _extends({\n      key: child.uuid,\n      object: child\n    }, config, {\n      isChild: true\n    }));\n  }), children, injectChildren);\n});\nexport { Clone };","map":{"version":3,"names":["_extends","THREE","React","pick","SkeletonUtils","createSpread","child","keys","deep","inject","castShadow","receiveShadow","spread","geometry","clone","material","children","isValidElement","Mesh","Clone","forwardRef","isChild","object","props","_object","config","useMemo","Array","isArray","isSkinned","traverse","isSkinnedMesh","createElement","ref","map","o","key","uuid","injectChildren","Element","type","toLowerCase","slice"],"sources":["/Users/crushedsummers/Documents/GitHub/raphaeleg.github.io/node_modules/@react-three/drei/core/Clone.js"],"sourcesContent":["import _extends from '@babel/runtime/helpers/esm/extends';\nimport * as THREE from 'three';\nimport * as React from 'react';\nimport pick from 'lodash.pick';\nimport { SkeletonUtils } from 'three-stdlib';\n\nfunction createSpread(child, {\n  keys = ['near', 'far', 'color', 'distance', 'decay', 'penumbra', 'angle', 'intensity', 'skeleton', 'visible', 'castShadow', 'receiveShadow', 'morphTargetDictionary', 'morphTargetInfluences', 'name', 'geometry', 'material', 'position', 'rotation', 'scale', 'up', 'userData', 'bindMode', 'bindMatrix', 'bindMatrixInverse', 'skeleton'],\n  deep,\n  inject,\n  castShadow,\n  receiveShadow\n}) {\n  let spread = pick(child, keys);\n\n  if (deep) {\n    if (spread.geometry && deep !== 'materialsOnly') spread.geometry = spread.geometry.clone();\n    if (spread.material && deep !== 'geometriesOnly') spread.material = spread.material.clone();\n  }\n\n  if (inject) {\n    if (typeof inject === 'function') spread = { ...spread,\n      children: inject(child)\n    };else if ( /*#__PURE__*/React.isValidElement(inject)) spread = { ...spread,\n      children: inject\n    };else spread = { ...spread,\n      ...inject\n    };\n  }\n\n  if (child instanceof THREE.Mesh) {\n    if (castShadow) spread.castShadow = true;\n    if (receiveShadow) spread.receiveShadow = true;\n  }\n\n  return spread;\n}\n\nconst Clone = /*#__PURE__*/React.forwardRef(({\n  isChild = false,\n  object,\n  children,\n  deep,\n  castShadow,\n  receiveShadow,\n  inject,\n  keys,\n  ...props\n}, forwardRef) => {\n  var _object;\n\n  const config = {\n    keys,\n    deep,\n    inject,\n    castShadow,\n    receiveShadow\n  };\n  object = React.useMemo(() => {\n    if (isChild === false && !Array.isArray(object)) {\n      let isSkinned = false;\n      object.traverse(object => {\n        if (object.isSkinnedMesh) isSkinned = true;\n      });\n      if (isSkinned) return SkeletonUtils.clone(object);\n    }\n\n    return object;\n  }, [object, isChild]); // Deal with arrayed clones\n\n  if (Array.isArray(object)) {\n    return /*#__PURE__*/React.createElement(\"group\", _extends({}, props, {\n      ref: forwardRef\n    }), object.map(o => /*#__PURE__*/React.createElement(Clone, _extends({\n      key: o.uuid,\n      object: o\n    }, config))), children);\n  } // Singleton clones\n\n\n  const {\n    children: injectChildren,\n    ...spread\n  } = createSpread(object, config);\n  const Element = object.type[0].toLowerCase() + object.type.slice(1);\n  return /*#__PURE__*/React.createElement(Element, _extends({}, spread, props, {\n    ref: forwardRef\n  }), ((_object = object) == null ? void 0 : _object.children).map(child => {\n    if (child.type === 'Bone') return /*#__PURE__*/React.createElement(\"primitive\", _extends({\n      key: child.uuid,\n      object: child\n    }, config));\n    return /*#__PURE__*/React.createElement(Clone, _extends({\n      key: child.uuid,\n      object: child\n    }, config, {\n      isChild: true\n    }));\n  }), children, injectChildren);\n});\n\nexport { Clone };\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}