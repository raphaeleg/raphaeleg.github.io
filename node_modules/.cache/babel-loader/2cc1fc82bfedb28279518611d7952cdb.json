{"ast":null,"code":"import _createClass from \"/Users/crushedsummers/Desktop/Work/Application/portfolio22/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _classCallCheck from \"/Users/crushedsummers/Desktop/Work/Application/portfolio22/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _assertThisInitialized from \"/Users/crushedsummers/Desktop/Work/Application/portfolio22/node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js\";\nimport _inherits from \"/Users/crushedsummers/Desktop/Work/Application/portfolio22/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"/Users/crushedsummers/Desktop/Work/Application/portfolio22/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\nimport { EventDispatcher, MOUSE, Quaternion, Spherical, TOUCH, Vector2, Vector3 } from 'three'; // OrbitControls performs orbiting, dollying (zooming), and panning.\n// Unlike TrackballControls, it maintains the \"up\" direction object.up (+Y by default).\n//\n//    Orbit - left mouse / touch: one-finger move\n//    Zoom - middle mouse, or mousewheel / touch: two-finger spread or squish\n//    Pan - right mouse, or left mouse + ctrl/meta/shiftKey, or arrow keys / touch: two-finger move\n\nvar _changeEvent = {\n  type: 'change'\n};\nvar _startEvent = {\n  type: 'start'\n};\nvar _endEvent = {\n  type: 'end'\n};\n\nvar OrbitControls = /*#__PURE__*/function (_EventDispatcher) {\n  _inherits(OrbitControls, _EventDispatcher);\n\n  var _super = _createSuper(OrbitControls);\n\n  function OrbitControls(object, domElement) {\n    var _this;\n\n    _classCallCheck(this, OrbitControls);\n\n    _this = _super.call(this);\n    _this.object = object;\n    _this.domElement = domElement;\n    _this.domElement.style.touchAction = 'none'; // disable touch scroll\n    // Set to false to disable this control\n\n    _this.enabled = true; // \"target\" sets the location of focus, where the object orbits around\n\n    _this.target = new Vector3(); // How far you can dolly in and out ( PerspectiveCamera only )\n\n    _this.minDistance = 0;\n    _this.maxDistance = Infinity; // How far you can zoom in and out ( OrthographicCamera only )\n\n    _this.minZoom = 0;\n    _this.maxZoom = Infinity; // How far you can orbit vertically, upper and lower limits.\n    // Range is 0 to Math.PI radians.\n\n    _this.minPolarAngle = 0; // radians\n\n    _this.maxPolarAngle = Math.PI; // radians\n    // How far you can orbit horizontally, upper and lower limits.\n    // If set, the interval [ min, max ] must be a sub-interval of [ - 2 PI, 2 PI ], with ( max - min < 2 PI )\n\n    _this.minAzimuthAngle = -Infinity; // radians\n\n    _this.maxAzimuthAngle = Infinity; // radians\n    // Set to true to enable damping (inertia)\n    // If damping is enabled, you must call controls.update() in your animation loop\n\n    _this.enableDamping = false;\n    _this.dampingFactor = 0.05; // This option actually enables dollying in and out; left as \"zoom\" for backwards compatibility.\n    // Set to false to disable zooming\n\n    _this.enableZoom = true;\n    _this.zoomSpeed = 1.0; // Set to false to disable rotating\n\n    _this.enableRotate = true;\n    _this.rotateSpeed = 1.0; // Set to false to disable panning\n\n    _this.enablePan = true;\n    _this.panSpeed = 1.0;\n    _this.screenSpacePanning = true; // if false, pan orthogonal to world-space direction camera.up\n\n    _this.keyPanSpeed = 7.0; // pixels moved per arrow key push\n    // Set to true to automatically rotate around the target\n    // If auto-rotate is enabled, you must call controls.update() in your animation loop\n\n    _this.autoRotate = false;\n    _this.autoRotateSpeed = 2.0; // 30 seconds per orbit when fps is 60\n    // The four arrow keys\n\n    _this.keys = {\n      LEFT: 'ArrowLeft',\n      UP: 'ArrowUp',\n      RIGHT: 'ArrowRight',\n      BOTTOM: 'ArrowDown'\n    }; // Mouse buttons\n\n    _this.mouseButtons = {\n      LEFT: MOUSE.ROTATE,\n      MIDDLE: MOUSE.DOLLY,\n      RIGHT: MOUSE.PAN\n    }; // Touch fingers\n\n    _this.touches = {\n      ONE: TOUCH.ROTATE,\n      TWO: TOUCH.DOLLY_PAN\n    }; // for reset\n\n    _this.target0 = _this.target.clone();\n    _this.position0 = _this.object.position.clone();\n    _this.zoom0 = _this.object.zoom; // the target DOM element for key events\n\n    _this._domElementKeyEvents = null; //\n    // public methods\n    //\n\n    _this.getPolarAngle = function () {\n      return spherical.phi;\n    };\n\n    _this.getAzimuthalAngle = function () {\n      return spherical.theta;\n    };\n\n    _this.getDistance = function () {\n      return this.object.position.distanceTo(this.target);\n    };\n\n    _this.listenToKeyEvents = function (domElement) {\n      domElement.addEventListener('keydown', onKeyDown);\n      this._domElementKeyEvents = domElement;\n    };\n\n    _this.stopListenToKeyEvents = function () {\n      this._domElementKeyEvents.removeEventListener('keydown', onKeyDown);\n\n      this._domElementKeyEvents = null;\n    };\n\n    _this.saveState = function () {\n      scope.target0.copy(scope.target);\n      scope.position0.copy(scope.object.position);\n      scope.zoom0 = scope.object.zoom;\n    };\n\n    _this.reset = function () {\n      scope.target.copy(scope.target0);\n      scope.object.position.copy(scope.position0);\n      scope.object.zoom = scope.zoom0;\n      scope.object.updateProjectionMatrix();\n      scope.dispatchEvent(_changeEvent);\n      scope.update();\n      state = STATE.NONE;\n    }; // this method is exposed, but perhaps it would be better if we can make it private...\n\n\n    _this.update = function () {\n      var offset = new Vector3(); // so camera.up is the orbit axis\n\n      var quat = new Quaternion().setFromUnitVectors(object.up, new Vector3(0, 1, 0));\n      var quatInverse = quat.clone().invert();\n      var lastPosition = new Vector3();\n      var lastQuaternion = new Quaternion();\n      var twoPI = 2 * Math.PI;\n      return function update() {\n        var position = scope.object.position;\n        offset.copy(position).sub(scope.target); // rotate offset to \"y-axis-is-up\" space\n\n        offset.applyQuaternion(quat); // angle from z-axis around y-axis\n\n        spherical.setFromVector3(offset);\n\n        if (scope.autoRotate && state === STATE.NONE) {\n          rotateLeft(getAutoRotationAngle());\n        }\n\n        if (scope.enableDamping) {\n          spherical.theta += sphericalDelta.theta * scope.dampingFactor;\n          spherical.phi += sphericalDelta.phi * scope.dampingFactor;\n        } else {\n          spherical.theta += sphericalDelta.theta;\n          spherical.phi += sphericalDelta.phi;\n        } // restrict theta to be between desired limits\n\n\n        var min = scope.minAzimuthAngle;\n        var max = scope.maxAzimuthAngle;\n\n        if (isFinite(min) && isFinite(max)) {\n          if (min < -Math.PI) min += twoPI;else if (min > Math.PI) min -= twoPI;\n          if (max < -Math.PI) max += twoPI;else if (max > Math.PI) max -= twoPI;\n\n          if (min <= max) {\n            spherical.theta = Math.max(min, Math.min(max, spherical.theta));\n          } else {\n            spherical.theta = spherical.theta > (min + max) / 2 ? Math.max(min, spherical.theta) : Math.min(max, spherical.theta);\n          }\n        } // restrict phi to be between desired limits\n\n\n        spherical.phi = Math.max(scope.minPolarAngle, Math.min(scope.maxPolarAngle, spherical.phi));\n        spherical.makeSafe();\n        spherical.radius *= scale; // restrict radius to be between desired limits\n\n        spherical.radius = Math.max(scope.minDistance, Math.min(scope.maxDistance, spherical.radius)); // move target to panned location\n\n        if (scope.enableDamping === true) {\n          scope.target.addScaledVector(panOffset, scope.dampingFactor);\n        } else {\n          scope.target.add(panOffset);\n        }\n\n        offset.setFromSpherical(spherical); // rotate offset back to \"camera-up-vector-is-up\" space\n\n        offset.applyQuaternion(quatInverse);\n        position.copy(scope.target).add(offset);\n        scope.object.lookAt(scope.target);\n\n        if (scope.enableDamping === true) {\n          sphericalDelta.theta *= 1 - scope.dampingFactor;\n          sphericalDelta.phi *= 1 - scope.dampingFactor;\n          panOffset.multiplyScalar(1 - scope.dampingFactor);\n        } else {\n          sphericalDelta.set(0, 0, 0);\n          panOffset.set(0, 0, 0);\n        }\n\n        scale = 1; // update condition is:\n        // min(camera displacement, camera rotation in radians)^2 > EPS\n        // using small-angle approximation cos(x/2) = 1 - x^2 / 8\n\n        if (zoomChanged || lastPosition.distanceToSquared(scope.object.position) > EPS || 8 * (1 - lastQuaternion.dot(scope.object.quaternion)) > EPS) {\n          scope.dispatchEvent(_changeEvent);\n          lastPosition.copy(scope.object.position);\n          lastQuaternion.copy(scope.object.quaternion);\n          zoomChanged = false;\n          return true;\n        }\n\n        return false;\n      };\n    }();\n\n    _this.dispose = function () {\n      scope.domElement.removeEventListener('contextmenu', onContextMenu);\n      scope.domElement.removeEventListener('pointerdown', onPointerDown);\n      scope.domElement.removeEventListener('pointercancel', onPointerUp);\n      scope.domElement.removeEventListener('wheel', onMouseWheel);\n      scope.domElement.removeEventListener('pointermove', onPointerMove);\n      scope.domElement.removeEventListener('pointerup', onPointerUp);\n\n      if (scope._domElementKeyEvents !== null) {\n        scope._domElementKeyEvents.removeEventListener('keydown', onKeyDown);\n\n        scope._domElementKeyEvents = null;\n      } //scope.dispatchEvent( { type: 'dispose' } ); // should this be added here?\n\n    }; //\n    // internals\n    //\n\n\n    var scope = _assertThisInitialized(_this);\n\n    var STATE = {\n      NONE: -1,\n      ROTATE: 0,\n      DOLLY: 1,\n      PAN: 2,\n      TOUCH_ROTATE: 3,\n      TOUCH_PAN: 4,\n      TOUCH_DOLLY_PAN: 5,\n      TOUCH_DOLLY_ROTATE: 6\n    };\n    var state = STATE.NONE;\n    var EPS = 0.000001; // current position in spherical coordinates\n\n    var spherical = new Spherical();\n    var sphericalDelta = new Spherical();\n    var scale = 1;\n    var panOffset = new Vector3();\n    var zoomChanged = false;\n    var rotateStart = new Vector2();\n    var rotateEnd = new Vector2();\n    var rotateDelta = new Vector2();\n    var panStart = new Vector2();\n    var panEnd = new Vector2();\n    var panDelta = new Vector2();\n    var dollyStart = new Vector2();\n    var dollyEnd = new Vector2();\n    var dollyDelta = new Vector2();\n    var pointers = [];\n    var pointerPositions = {};\n\n    function getAutoRotationAngle() {\n      return 2 * Math.PI / 60 / 60 * scope.autoRotateSpeed;\n    }\n\n    function getZoomScale() {\n      return Math.pow(0.95, scope.zoomSpeed);\n    }\n\n    function rotateLeft(angle) {\n      sphericalDelta.theta -= angle;\n    }\n\n    function rotateUp(angle) {\n      sphericalDelta.phi -= angle;\n    }\n\n    var panLeft = function () {\n      var v = new Vector3();\n      return function panLeft(distance, objectMatrix) {\n        v.setFromMatrixColumn(objectMatrix, 0); // get X column of objectMatrix\n\n        v.multiplyScalar(-distance);\n        panOffset.add(v);\n      };\n    }();\n\n    var panUp = function () {\n      var v = new Vector3();\n      return function panUp(distance, objectMatrix) {\n        if (scope.screenSpacePanning === true) {\n          v.setFromMatrixColumn(objectMatrix, 1);\n        } else {\n          v.setFromMatrixColumn(objectMatrix, 0);\n          v.crossVectors(scope.object.up, v);\n        }\n\n        v.multiplyScalar(distance);\n        panOffset.add(v);\n      };\n    }(); // deltaX and deltaY are in pixels; right and down are positive\n\n\n    var pan = function () {\n      var offset = new Vector3();\n      return function pan(deltaX, deltaY) {\n        var element = scope.domElement;\n\n        if (scope.object.isPerspectiveCamera) {\n          // perspective\n          var position = scope.object.position;\n          offset.copy(position).sub(scope.target);\n          var targetDistance = offset.length(); // half of the fov is center to top of screen\n\n          targetDistance *= Math.tan(scope.object.fov / 2 * Math.PI / 180.0); // we use only clientHeight here so aspect ratio does not distort speed\n\n          panLeft(2 * deltaX * targetDistance / element.clientHeight, scope.object.matrix);\n          panUp(2 * deltaY * targetDistance / element.clientHeight, scope.object.matrix);\n        } else if (scope.object.isOrthographicCamera) {\n          // orthographic\n          panLeft(deltaX * (scope.object.right - scope.object.left) / scope.object.zoom / element.clientWidth, scope.object.matrix);\n          panUp(deltaY * (scope.object.top - scope.object.bottom) / scope.object.zoom / element.clientHeight, scope.object.matrix);\n        } else {\n          // camera neither orthographic nor perspective\n          console.warn('WARNING: OrbitControls.js encountered an unknown camera type - pan disabled.');\n          scope.enablePan = false;\n        }\n      };\n    }();\n\n    function dollyOut(dollyScale) {\n      if (scope.object.isPerspectiveCamera) {\n        scale /= dollyScale;\n      } else if (scope.object.isOrthographicCamera) {\n        scope.object.zoom = Math.max(scope.minZoom, Math.min(scope.maxZoom, scope.object.zoom * dollyScale));\n        scope.object.updateProjectionMatrix();\n        zoomChanged = true;\n      } else {\n        console.warn('WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled.');\n        scope.enableZoom = false;\n      }\n    }\n\n    function dollyIn(dollyScale) {\n      if (scope.object.isPerspectiveCamera) {\n        scale *= dollyScale;\n      } else if (scope.object.isOrthographicCamera) {\n        scope.object.zoom = Math.max(scope.minZoom, Math.min(scope.maxZoom, scope.object.zoom / dollyScale));\n        scope.object.updateProjectionMatrix();\n        zoomChanged = true;\n      } else {\n        console.warn('WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled.');\n        scope.enableZoom = false;\n      }\n    } //\n    // event callbacks - update the object state\n    //\n\n\n    function handleMouseDownRotate(event) {\n      rotateStart.set(event.clientX, event.clientY);\n    }\n\n    function handleMouseDownDolly(event) {\n      dollyStart.set(event.clientX, event.clientY);\n    }\n\n    function handleMouseDownPan(event) {\n      panStart.set(event.clientX, event.clientY);\n    }\n\n    function handleMouseMoveRotate(event) {\n      rotateEnd.set(event.clientX, event.clientY);\n      rotateDelta.subVectors(rotateEnd, rotateStart).multiplyScalar(scope.rotateSpeed);\n      var element = scope.domElement;\n      rotateLeft(2 * Math.PI * rotateDelta.x / element.clientHeight); // yes, height\n\n      rotateUp(2 * Math.PI * rotateDelta.y / element.clientHeight);\n      rotateStart.copy(rotateEnd);\n      scope.update();\n    }\n\n    function handleMouseMoveDolly(event) {\n      dollyEnd.set(event.clientX, event.clientY);\n      dollyDelta.subVectors(dollyEnd, dollyStart);\n\n      if (dollyDelta.y > 0) {\n        dollyOut(getZoomScale());\n      } else if (dollyDelta.y < 0) {\n        dollyIn(getZoomScale());\n      }\n\n      dollyStart.copy(dollyEnd);\n      scope.update();\n    }\n\n    function handleMouseMovePan(event) {\n      panEnd.set(event.clientX, event.clientY);\n      panDelta.subVectors(panEnd, panStart).multiplyScalar(scope.panSpeed);\n      pan(panDelta.x, panDelta.y);\n      panStart.copy(panEnd);\n      scope.update();\n    }\n\n    function handleMouseWheel(event) {\n      if (event.deltaY < 0) {\n        dollyIn(getZoomScale());\n      } else if (event.deltaY > 0) {\n        dollyOut(getZoomScale());\n      }\n\n      scope.update();\n    }\n\n    function handleKeyDown(event) {\n      var needsUpdate = false;\n\n      switch (event.code) {\n        case scope.keys.UP:\n          if (event.ctrlKey || event.metaKey || event.shiftKey) {\n            rotateUp(2 * Math.PI * scope.rotateSpeed / scope.domElement.clientHeight);\n          } else {\n            pan(0, scope.keyPanSpeed);\n          }\n\n          needsUpdate = true;\n          break;\n\n        case scope.keys.BOTTOM:\n          if (event.ctrlKey || event.metaKey || event.shiftKey) {\n            rotateUp(-2 * Math.PI * scope.rotateSpeed / scope.domElement.clientHeight);\n          } else {\n            pan(0, -scope.keyPanSpeed);\n          }\n\n          needsUpdate = true;\n          break;\n\n        case scope.keys.LEFT:\n          if (event.ctrlKey || event.metaKey || event.shiftKey) {\n            rotateLeft(2 * Math.PI * scope.rotateSpeed / scope.domElement.clientHeight);\n          } else {\n            pan(scope.keyPanSpeed, 0);\n          }\n\n          needsUpdate = true;\n          break;\n\n        case scope.keys.RIGHT:\n          if (event.ctrlKey || event.metaKey || event.shiftKey) {\n            rotateLeft(-2 * Math.PI * scope.rotateSpeed / scope.domElement.clientHeight);\n          } else {\n            pan(-scope.keyPanSpeed, 0);\n          }\n\n          needsUpdate = true;\n          break;\n      }\n\n      if (needsUpdate) {\n        // prevent the browser from scrolling on cursor keys\n        event.preventDefault();\n        scope.update();\n      }\n    }\n\n    function handleTouchStartRotate() {\n      if (pointers.length === 1) {\n        rotateStart.set(pointers[0].pageX, pointers[0].pageY);\n      } else {\n        var x = 0.5 * (pointers[0].pageX + pointers[1].pageX);\n        var y = 0.5 * (pointers[0].pageY + pointers[1].pageY);\n        rotateStart.set(x, y);\n      }\n    }\n\n    function handleTouchStartPan() {\n      if (pointers.length === 1) {\n        panStart.set(pointers[0].pageX, pointers[0].pageY);\n      } else {\n        var x = 0.5 * (pointers[0].pageX + pointers[1].pageX);\n        var y = 0.5 * (pointers[0].pageY + pointers[1].pageY);\n        panStart.set(x, y);\n      }\n    }\n\n    function handleTouchStartDolly() {\n      var dx = pointers[0].pageX - pointers[1].pageX;\n      var dy = pointers[0].pageY - pointers[1].pageY;\n      var distance = Math.sqrt(dx * dx + dy * dy);\n      dollyStart.set(0, distance);\n    }\n\n    function handleTouchStartDollyPan() {\n      if (scope.enableZoom) handleTouchStartDolly();\n      if (scope.enablePan) handleTouchStartPan();\n    }\n\n    function handleTouchStartDollyRotate() {\n      if (scope.enableZoom) handleTouchStartDolly();\n      if (scope.enableRotate) handleTouchStartRotate();\n    }\n\n    function handleTouchMoveRotate(event) {\n      if (pointers.length == 1) {\n        rotateEnd.set(event.pageX, event.pageY);\n      } else {\n        var position = getSecondPointerPosition(event);\n        var x = 0.5 * (event.pageX + position.x);\n        var y = 0.5 * (event.pageY + position.y);\n        rotateEnd.set(x, y);\n      }\n\n      rotateDelta.subVectors(rotateEnd, rotateStart).multiplyScalar(scope.rotateSpeed);\n      var element = scope.domElement;\n      rotateLeft(2 * Math.PI * rotateDelta.x / element.clientHeight); // yes, height\n\n      rotateUp(2 * Math.PI * rotateDelta.y / element.clientHeight);\n      rotateStart.copy(rotateEnd);\n    }\n\n    function handleTouchMovePan(event) {\n      if (pointers.length === 1) {\n        panEnd.set(event.pageX, event.pageY);\n      } else {\n        var position = getSecondPointerPosition(event);\n        var x = 0.5 * (event.pageX + position.x);\n        var y = 0.5 * (event.pageY + position.y);\n        panEnd.set(x, y);\n      }\n\n      panDelta.subVectors(panEnd, panStart).multiplyScalar(scope.panSpeed);\n      pan(panDelta.x, panDelta.y);\n      panStart.copy(panEnd);\n    }\n\n    function handleTouchMoveDolly(event) {\n      var position = getSecondPointerPosition(event);\n      var dx = event.pageX - position.x;\n      var dy = event.pageY - position.y;\n      var distance = Math.sqrt(dx * dx + dy * dy);\n      dollyEnd.set(0, distance);\n      dollyDelta.set(0, Math.pow(dollyEnd.y / dollyStart.y, scope.zoomSpeed));\n      dollyOut(dollyDelta.y);\n      dollyStart.copy(dollyEnd);\n    }\n\n    function handleTouchMoveDollyPan(event) {\n      if (scope.enableZoom) handleTouchMoveDolly(event);\n      if (scope.enablePan) handleTouchMovePan(event);\n    }\n\n    function handleTouchMoveDollyRotate(event) {\n      if (scope.enableZoom) handleTouchMoveDolly(event);\n      if (scope.enableRotate) handleTouchMoveRotate(event);\n    } //\n    // event handlers - FSM: listen for events and reset state\n    //\n\n\n    function onPointerDown(event) {\n      if (scope.enabled === false) return;\n\n      if (pointers.length === 0) {\n        scope.domElement.setPointerCapture(event.pointerId);\n        scope.domElement.addEventListener('pointermove', onPointerMove);\n        scope.domElement.addEventListener('pointerup', onPointerUp);\n      } //\n\n\n      addPointer(event);\n\n      if (event.pointerType === 'touch') {\n        onTouchStart(event);\n      } else {\n        onMouseDown(event);\n      }\n    }\n\n    function onPointerMove(event) {\n      if (scope.enabled === false) return;\n\n      if (event.pointerType === 'touch') {\n        onTouchMove(event);\n      } else {\n        onMouseMove(event);\n      }\n    }\n\n    function onPointerUp(event) {\n      removePointer(event);\n\n      if (pointers.length === 0) {\n        scope.domElement.releasePointerCapture(event.pointerId);\n        scope.domElement.removeEventListener('pointermove', onPointerMove);\n        scope.domElement.removeEventListener('pointerup', onPointerUp);\n      }\n\n      scope.dispatchEvent(_endEvent);\n      state = STATE.NONE;\n    }\n\n    function onMouseDown(event) {\n      var mouseAction;\n\n      switch (event.button) {\n        case 0:\n          mouseAction = scope.mouseButtons.LEFT;\n          break;\n\n        case 1:\n          mouseAction = scope.mouseButtons.MIDDLE;\n          break;\n\n        case 2:\n          mouseAction = scope.mouseButtons.RIGHT;\n          break;\n\n        default:\n          mouseAction = -1;\n      }\n\n      switch (mouseAction) {\n        case MOUSE.DOLLY:\n          if (scope.enableZoom === false) return;\n          handleMouseDownDolly(event);\n          state = STATE.DOLLY;\n          break;\n\n        case MOUSE.ROTATE:\n          if (event.ctrlKey || event.metaKey || event.shiftKey) {\n            if (scope.enablePan === false) return;\n            handleMouseDownPan(event);\n            state = STATE.PAN;\n          } else {\n            if (scope.enableRotate === false) return;\n            handleMouseDownRotate(event);\n            state = STATE.ROTATE;\n          }\n\n          break;\n\n        case MOUSE.PAN:\n          if (event.ctrlKey || event.metaKey || event.shiftKey) {\n            if (scope.enableRotate === false) return;\n            handleMouseDownRotate(event);\n            state = STATE.ROTATE;\n          } else {\n            if (scope.enablePan === false) return;\n            handleMouseDownPan(event);\n            state = STATE.PAN;\n          }\n\n          break;\n\n        default:\n          state = STATE.NONE;\n      }\n\n      if (state !== STATE.NONE) {\n        scope.dispatchEvent(_startEvent);\n      }\n    }\n\n    function onMouseMove(event) {\n      switch (state) {\n        case STATE.ROTATE:\n          if (scope.enableRotate === false) return;\n          handleMouseMoveRotate(event);\n          break;\n\n        case STATE.DOLLY:\n          if (scope.enableZoom === false) return;\n          handleMouseMoveDolly(event);\n          break;\n\n        case STATE.PAN:\n          if (scope.enablePan === false) return;\n          handleMouseMovePan(event);\n          break;\n      }\n    }\n\n    function onMouseWheel(event) {\n      if (scope.enabled === false || scope.enableZoom === false || state !== STATE.NONE) return;\n      event.preventDefault();\n      scope.dispatchEvent(_startEvent);\n      handleMouseWheel(event);\n      scope.dispatchEvent(_endEvent);\n    }\n\n    function onKeyDown(event) {\n      if (scope.enabled === false || scope.enablePan === false) return;\n      handleKeyDown(event);\n    }\n\n    function onTouchStart(event) {\n      trackPointer(event);\n\n      switch (pointers.length) {\n        case 1:\n          switch (scope.touches.ONE) {\n            case TOUCH.ROTATE:\n              if (scope.enableRotate === false) return;\n              handleTouchStartRotate();\n              state = STATE.TOUCH_ROTATE;\n              break;\n\n            case TOUCH.PAN:\n              if (scope.enablePan === false) return;\n              handleTouchStartPan();\n              state = STATE.TOUCH_PAN;\n              break;\n\n            default:\n              state = STATE.NONE;\n          }\n\n          break;\n\n        case 2:\n          switch (scope.touches.TWO) {\n            case TOUCH.DOLLY_PAN:\n              if (scope.enableZoom === false && scope.enablePan === false) return;\n              handleTouchStartDollyPan();\n              state = STATE.TOUCH_DOLLY_PAN;\n              break;\n\n            case TOUCH.DOLLY_ROTATE:\n              if (scope.enableZoom === false && scope.enableRotate === false) return;\n              handleTouchStartDollyRotate();\n              state = STATE.TOUCH_DOLLY_ROTATE;\n              break;\n\n            default:\n              state = STATE.NONE;\n          }\n\n          break;\n\n        default:\n          state = STATE.NONE;\n      }\n\n      if (state !== STATE.NONE) {\n        scope.dispatchEvent(_startEvent);\n      }\n    }\n\n    function onTouchMove(event) {\n      trackPointer(event);\n\n      switch (state) {\n        case STATE.TOUCH_ROTATE:\n          if (scope.enableRotate === false) return;\n          handleTouchMoveRotate(event);\n          scope.update();\n          break;\n\n        case STATE.TOUCH_PAN:\n          if (scope.enablePan === false) return;\n          handleTouchMovePan(event);\n          scope.update();\n          break;\n\n        case STATE.TOUCH_DOLLY_PAN:\n          if (scope.enableZoom === false && scope.enablePan === false) return;\n          handleTouchMoveDollyPan(event);\n          scope.update();\n          break;\n\n        case STATE.TOUCH_DOLLY_ROTATE:\n          if (scope.enableZoom === false && scope.enableRotate === false) return;\n          handleTouchMoveDollyRotate(event);\n          scope.update();\n          break;\n\n        default:\n          state = STATE.NONE;\n      }\n    }\n\n    function onContextMenu(event) {\n      if (scope.enabled === false) return;\n      event.preventDefault();\n    }\n\n    function addPointer(event) {\n      pointers.push(event);\n    }\n\n    function removePointer(event) {\n      delete pointerPositions[event.pointerId];\n\n      for (var i = 0; i < pointers.length; i++) {\n        if (pointers[i].pointerId == event.pointerId) {\n          pointers.splice(i, 1);\n          return;\n        }\n      }\n    }\n\n    function trackPointer(event) {\n      var position = pointerPositions[event.pointerId];\n\n      if (position === undefined) {\n        position = new Vector2();\n        pointerPositions[event.pointerId] = position;\n      }\n\n      position.set(event.pageX, event.pageY);\n    }\n\n    function getSecondPointerPosition(event) {\n      var pointer = event.pointerId === pointers[0].pointerId ? pointers[1] : pointers[0];\n      return pointerPositions[pointer.pointerId];\n    } //\n\n\n    scope.domElement.addEventListener('contextmenu', onContextMenu);\n    scope.domElement.addEventListener('pointerdown', onPointerDown);\n    scope.domElement.addEventListener('pointercancel', onPointerUp);\n    scope.domElement.addEventListener('wheel', onMouseWheel, {\n      passive: false\n    }); // force an update at start\n\n    _this.update();\n\n    return _this;\n  }\n\n  return _createClass(OrbitControls);\n}(EventDispatcher);\n\nexport { OrbitControls };","map":{"version":3,"names":["EventDispatcher","MOUSE","Quaternion","Spherical","TOUCH","Vector2","Vector3","_changeEvent","type","_startEvent","_endEvent","OrbitControls","object","domElement","style","touchAction","enabled","target","minDistance","maxDistance","Infinity","minZoom","maxZoom","minPolarAngle","maxPolarAngle","Math","PI","minAzimuthAngle","maxAzimuthAngle","enableDamping","dampingFactor","enableZoom","zoomSpeed","enableRotate","rotateSpeed","enablePan","panSpeed","screenSpacePanning","keyPanSpeed","autoRotate","autoRotateSpeed","keys","LEFT","UP","RIGHT","BOTTOM","mouseButtons","ROTATE","MIDDLE","DOLLY","PAN","touches","ONE","TWO","DOLLY_PAN","target0","clone","position0","position","zoom0","zoom","_domElementKeyEvents","getPolarAngle","spherical","phi","getAzimuthalAngle","theta","getDistance","distanceTo","listenToKeyEvents","addEventListener","onKeyDown","stopListenToKeyEvents","removeEventListener","saveState","scope","copy","reset","updateProjectionMatrix","dispatchEvent","update","state","STATE","NONE","offset","quat","setFromUnitVectors","up","quatInverse","invert","lastPosition","lastQuaternion","twoPI","sub","applyQuaternion","setFromVector3","rotateLeft","getAutoRotationAngle","sphericalDelta","min","max","isFinite","makeSafe","radius","scale","addScaledVector","panOffset","add","setFromSpherical","lookAt","multiplyScalar","set","zoomChanged","distanceToSquared","EPS","dot","quaternion","dispose","onContextMenu","onPointerDown","onPointerUp","onMouseWheel","onPointerMove","TOUCH_ROTATE","TOUCH_PAN","TOUCH_DOLLY_PAN","TOUCH_DOLLY_ROTATE","rotateStart","rotateEnd","rotateDelta","panStart","panEnd","panDelta","dollyStart","dollyEnd","dollyDelta","pointers","pointerPositions","getZoomScale","pow","angle","rotateUp","panLeft","v","distance","objectMatrix","setFromMatrixColumn","panUp","crossVectors","pan","deltaX","deltaY","element","isPerspectiveCamera","targetDistance","length","tan","fov","clientHeight","matrix","isOrthographicCamera","right","left","clientWidth","top","bottom","console","warn","dollyOut","dollyScale","dollyIn","handleMouseDownRotate","event","clientX","clientY","handleMouseDownDolly","handleMouseDownPan","handleMouseMoveRotate","subVectors","x","y","handleMouseMoveDolly","handleMouseMovePan","handleMouseWheel","handleKeyDown","needsUpdate","code","ctrlKey","metaKey","shiftKey","preventDefault","handleTouchStartRotate","pageX","pageY","handleTouchStartPan","handleTouchStartDolly","dx","dy","sqrt","handleTouchStartDollyPan","handleTouchStartDollyRotate","handleTouchMoveRotate","getSecondPointerPosition","handleTouchMovePan","handleTouchMoveDolly","handleTouchMoveDollyPan","handleTouchMoveDollyRotate","setPointerCapture","pointerId","addPointer","pointerType","onTouchStart","onMouseDown","onTouchMove","onMouseMove","removePointer","releasePointerCapture","mouseAction","button","trackPointer","DOLLY_ROTATE","push","i","splice","undefined","pointer","passive"],"sources":["/Users/crushedsummers/Desktop/Work/Application/portfolio22/node_modules/three/examples/jsm/controls/OrbitControls.js"],"sourcesContent":["import {\n\tEventDispatcher,\n\tMOUSE,\n\tQuaternion,\n\tSpherical,\n\tTOUCH,\n\tVector2,\n\tVector3\n} from 'three';\n\n// OrbitControls performs orbiting, dollying (zooming), and panning.\n// Unlike TrackballControls, it maintains the \"up\" direction object.up (+Y by default).\n//\n//    Orbit - left mouse / touch: one-finger move\n//    Zoom - middle mouse, or mousewheel / touch: two-finger spread or squish\n//    Pan - right mouse, or left mouse + ctrl/meta/shiftKey, or arrow keys / touch: two-finger move\n\nconst _changeEvent = { type: 'change' };\nconst _startEvent = { type: 'start' };\nconst _endEvent = { type: 'end' };\n\nclass OrbitControls extends EventDispatcher {\n\n\tconstructor( object, domElement ) {\n\n\t\tsuper();\n\n\t\tthis.object = object;\n\t\tthis.domElement = domElement;\n\t\tthis.domElement.style.touchAction = 'none'; // disable touch scroll\n\n\t\t// Set to false to disable this control\n\t\tthis.enabled = true;\n\n\t\t// \"target\" sets the location of focus, where the object orbits around\n\t\tthis.target = new Vector3();\n\n\t\t// How far you can dolly in and out ( PerspectiveCamera only )\n\t\tthis.minDistance = 0;\n\t\tthis.maxDistance = Infinity;\n\n\t\t// How far you can zoom in and out ( OrthographicCamera only )\n\t\tthis.minZoom = 0;\n\t\tthis.maxZoom = Infinity;\n\n\t\t// How far you can orbit vertically, upper and lower limits.\n\t\t// Range is 0 to Math.PI radians.\n\t\tthis.minPolarAngle = 0; // radians\n\t\tthis.maxPolarAngle = Math.PI; // radians\n\n\t\t// How far you can orbit horizontally, upper and lower limits.\n\t\t// If set, the interval [ min, max ] must be a sub-interval of [ - 2 PI, 2 PI ], with ( max - min < 2 PI )\n\t\tthis.minAzimuthAngle = - Infinity; // radians\n\t\tthis.maxAzimuthAngle = Infinity; // radians\n\n\t\t// Set to true to enable damping (inertia)\n\t\t// If damping is enabled, you must call controls.update() in your animation loop\n\t\tthis.enableDamping = false;\n\t\tthis.dampingFactor = 0.05;\n\n\t\t// This option actually enables dollying in and out; left as \"zoom\" for backwards compatibility.\n\t\t// Set to false to disable zooming\n\t\tthis.enableZoom = true;\n\t\tthis.zoomSpeed = 1.0;\n\n\t\t// Set to false to disable rotating\n\t\tthis.enableRotate = true;\n\t\tthis.rotateSpeed = 1.0;\n\n\t\t// Set to false to disable panning\n\t\tthis.enablePan = true;\n\t\tthis.panSpeed = 1.0;\n\t\tthis.screenSpacePanning = true; // if false, pan orthogonal to world-space direction camera.up\n\t\tthis.keyPanSpeed = 7.0;\t// pixels moved per arrow key push\n\n\t\t// Set to true to automatically rotate around the target\n\t\t// If auto-rotate is enabled, you must call controls.update() in your animation loop\n\t\tthis.autoRotate = false;\n\t\tthis.autoRotateSpeed = 2.0; // 30 seconds per orbit when fps is 60\n\n\t\t// The four arrow keys\n\t\tthis.keys = { LEFT: 'ArrowLeft', UP: 'ArrowUp', RIGHT: 'ArrowRight', BOTTOM: 'ArrowDown' };\n\n\t\t// Mouse buttons\n\t\tthis.mouseButtons = { LEFT: MOUSE.ROTATE, MIDDLE: MOUSE.DOLLY, RIGHT: MOUSE.PAN };\n\n\t\t// Touch fingers\n\t\tthis.touches = { ONE: TOUCH.ROTATE, TWO: TOUCH.DOLLY_PAN };\n\n\t\t// for reset\n\t\tthis.target0 = this.target.clone();\n\t\tthis.position0 = this.object.position.clone();\n\t\tthis.zoom0 = this.object.zoom;\n\n\t\t// the target DOM element for key events\n\t\tthis._domElementKeyEvents = null;\n\n\t\t//\n\t\t// public methods\n\t\t//\n\n\t\tthis.getPolarAngle = function () {\n\n\t\t\treturn spherical.phi;\n\n\t\t};\n\n\t\tthis.getAzimuthalAngle = function () {\n\n\t\t\treturn spherical.theta;\n\n\t\t};\n\n\t\tthis.getDistance = function () {\n\n\t\t\treturn this.object.position.distanceTo( this.target );\n\n\t\t};\n\n\t\tthis.listenToKeyEvents = function ( domElement ) {\n\n\t\t\tdomElement.addEventListener( 'keydown', onKeyDown );\n\t\t\tthis._domElementKeyEvents = domElement;\n\n\t\t};\n\n\t\tthis.stopListenToKeyEvents = function () {\n\n\t\t\tthis._domElementKeyEvents.removeEventListener( 'keydown', onKeyDown );\n\t\t\tthis._domElementKeyEvents = null;\n\n\t\t};\n\n\t\tthis.saveState = function () {\n\n\t\t\tscope.target0.copy( scope.target );\n\t\t\tscope.position0.copy( scope.object.position );\n\t\t\tscope.zoom0 = scope.object.zoom;\n\n\t\t};\n\n\t\tthis.reset = function () {\n\n\t\t\tscope.target.copy( scope.target0 );\n\t\t\tscope.object.position.copy( scope.position0 );\n\t\t\tscope.object.zoom = scope.zoom0;\n\n\t\t\tscope.object.updateProjectionMatrix();\n\t\t\tscope.dispatchEvent( _changeEvent );\n\n\t\t\tscope.update();\n\n\t\t\tstate = STATE.NONE;\n\n\t\t};\n\n\t\t// this method is exposed, but perhaps it would be better if we can make it private...\n\t\tthis.update = function () {\n\n\t\t\tconst offset = new Vector3();\n\n\t\t\t// so camera.up is the orbit axis\n\t\t\tconst quat = new Quaternion().setFromUnitVectors( object.up, new Vector3( 0, 1, 0 ) );\n\t\t\tconst quatInverse = quat.clone().invert();\n\n\t\t\tconst lastPosition = new Vector3();\n\t\t\tconst lastQuaternion = new Quaternion();\n\n\t\t\tconst twoPI = 2 * Math.PI;\n\n\t\t\treturn function update() {\n\n\t\t\t\tconst position = scope.object.position;\n\n\t\t\t\toffset.copy( position ).sub( scope.target );\n\n\t\t\t\t// rotate offset to \"y-axis-is-up\" space\n\t\t\t\toffset.applyQuaternion( quat );\n\n\t\t\t\t// angle from z-axis around y-axis\n\t\t\t\tspherical.setFromVector3( offset );\n\n\t\t\t\tif ( scope.autoRotate && state === STATE.NONE ) {\n\n\t\t\t\t\trotateLeft( getAutoRotationAngle() );\n\n\t\t\t\t}\n\n\t\t\t\tif ( scope.enableDamping ) {\n\n\t\t\t\t\tspherical.theta += sphericalDelta.theta * scope.dampingFactor;\n\t\t\t\t\tspherical.phi += sphericalDelta.phi * scope.dampingFactor;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tspherical.theta += sphericalDelta.theta;\n\t\t\t\t\tspherical.phi += sphericalDelta.phi;\n\n\t\t\t\t}\n\n\t\t\t\t// restrict theta to be between desired limits\n\n\t\t\t\tlet min = scope.minAzimuthAngle;\n\t\t\t\tlet max = scope.maxAzimuthAngle;\n\n\t\t\t\tif ( isFinite( min ) && isFinite( max ) ) {\n\n\t\t\t\t\tif ( min < - Math.PI ) min += twoPI; else if ( min > Math.PI ) min -= twoPI;\n\n\t\t\t\t\tif ( max < - Math.PI ) max += twoPI; else if ( max > Math.PI ) max -= twoPI;\n\n\t\t\t\t\tif ( min <= max ) {\n\n\t\t\t\t\t\tspherical.theta = Math.max( min, Math.min( max, spherical.theta ) );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tspherical.theta = ( spherical.theta > ( min + max ) / 2 ) ?\n\t\t\t\t\t\t\tMath.max( min, spherical.theta ) :\n\t\t\t\t\t\t\tMath.min( max, spherical.theta );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\t// restrict phi to be between desired limits\n\t\t\t\tspherical.phi = Math.max( scope.minPolarAngle, Math.min( scope.maxPolarAngle, spherical.phi ) );\n\n\t\t\t\tspherical.makeSafe();\n\n\n\t\t\t\tspherical.radius *= scale;\n\n\t\t\t\t// restrict radius to be between desired limits\n\t\t\t\tspherical.radius = Math.max( scope.minDistance, Math.min( scope.maxDistance, spherical.radius ) );\n\n\t\t\t\t// move target to panned location\n\n\t\t\t\tif ( scope.enableDamping === true ) {\n\n\t\t\t\t\tscope.target.addScaledVector( panOffset, scope.dampingFactor );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tscope.target.add( panOffset );\n\n\t\t\t\t}\n\n\t\t\t\toffset.setFromSpherical( spherical );\n\n\t\t\t\t// rotate offset back to \"camera-up-vector-is-up\" space\n\t\t\t\toffset.applyQuaternion( quatInverse );\n\n\t\t\t\tposition.copy( scope.target ).add( offset );\n\n\t\t\t\tscope.object.lookAt( scope.target );\n\n\t\t\t\tif ( scope.enableDamping === true ) {\n\n\t\t\t\t\tsphericalDelta.theta *= ( 1 - scope.dampingFactor );\n\t\t\t\t\tsphericalDelta.phi *= ( 1 - scope.dampingFactor );\n\n\t\t\t\t\tpanOffset.multiplyScalar( 1 - scope.dampingFactor );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tsphericalDelta.set( 0, 0, 0 );\n\n\t\t\t\t\tpanOffset.set( 0, 0, 0 );\n\n\t\t\t\t}\n\n\t\t\t\tscale = 1;\n\n\t\t\t\t// update condition is:\n\t\t\t\t// min(camera displacement, camera rotation in radians)^2 > EPS\n\t\t\t\t// using small-angle approximation cos(x/2) = 1 - x^2 / 8\n\n\t\t\t\tif ( zoomChanged ||\n\t\t\t\t\tlastPosition.distanceToSquared( scope.object.position ) > EPS ||\n\t\t\t\t\t8 * ( 1 - lastQuaternion.dot( scope.object.quaternion ) ) > EPS ) {\n\n\t\t\t\t\tscope.dispatchEvent( _changeEvent );\n\n\t\t\t\t\tlastPosition.copy( scope.object.position );\n\t\t\t\t\tlastQuaternion.copy( scope.object.quaternion );\n\t\t\t\t\tzoomChanged = false;\n\n\t\t\t\t\treturn true;\n\n\t\t\t\t}\n\n\t\t\t\treturn false;\n\n\t\t\t};\n\n\t\t}();\n\n\t\tthis.dispose = function () {\n\n\t\t\tscope.domElement.removeEventListener( 'contextmenu', onContextMenu );\n\n\t\t\tscope.domElement.removeEventListener( 'pointerdown', onPointerDown );\n\t\t\tscope.domElement.removeEventListener( 'pointercancel', onPointerUp );\n\t\t\tscope.domElement.removeEventListener( 'wheel', onMouseWheel );\n\n\t\t\tscope.domElement.removeEventListener( 'pointermove', onPointerMove );\n\t\t\tscope.domElement.removeEventListener( 'pointerup', onPointerUp );\n\n\n\t\t\tif ( scope._domElementKeyEvents !== null ) {\n\n\t\t\t\tscope._domElementKeyEvents.removeEventListener( 'keydown', onKeyDown );\n\t\t\t\tscope._domElementKeyEvents = null;\n\n\t\t\t}\n\n\t\t\t//scope.dispatchEvent( { type: 'dispose' } ); // should this be added here?\n\n\t\t};\n\n\t\t//\n\t\t// internals\n\t\t//\n\n\t\tconst scope = this;\n\n\t\tconst STATE = {\n\t\t\tNONE: - 1,\n\t\t\tROTATE: 0,\n\t\t\tDOLLY: 1,\n\t\t\tPAN: 2,\n\t\t\tTOUCH_ROTATE: 3,\n\t\t\tTOUCH_PAN: 4,\n\t\t\tTOUCH_DOLLY_PAN: 5,\n\t\t\tTOUCH_DOLLY_ROTATE: 6\n\t\t};\n\n\t\tlet state = STATE.NONE;\n\n\t\tconst EPS = 0.000001;\n\n\t\t// current position in spherical coordinates\n\t\tconst spherical = new Spherical();\n\t\tconst sphericalDelta = new Spherical();\n\n\t\tlet scale = 1;\n\t\tconst panOffset = new Vector3();\n\t\tlet zoomChanged = false;\n\n\t\tconst rotateStart = new Vector2();\n\t\tconst rotateEnd = new Vector2();\n\t\tconst rotateDelta = new Vector2();\n\n\t\tconst panStart = new Vector2();\n\t\tconst panEnd = new Vector2();\n\t\tconst panDelta = new Vector2();\n\n\t\tconst dollyStart = new Vector2();\n\t\tconst dollyEnd = new Vector2();\n\t\tconst dollyDelta = new Vector2();\n\n\t\tconst pointers = [];\n\t\tconst pointerPositions = {};\n\n\t\tfunction getAutoRotationAngle() {\n\n\t\t\treturn 2 * Math.PI / 60 / 60 * scope.autoRotateSpeed;\n\n\t\t}\n\n\t\tfunction getZoomScale() {\n\n\t\t\treturn Math.pow( 0.95, scope.zoomSpeed );\n\n\t\t}\n\n\t\tfunction rotateLeft( angle ) {\n\n\t\t\tsphericalDelta.theta -= angle;\n\n\t\t}\n\n\t\tfunction rotateUp( angle ) {\n\n\t\t\tsphericalDelta.phi -= angle;\n\n\t\t}\n\n\t\tconst panLeft = function () {\n\n\t\t\tconst v = new Vector3();\n\n\t\t\treturn function panLeft( distance, objectMatrix ) {\n\n\t\t\t\tv.setFromMatrixColumn( objectMatrix, 0 ); // get X column of objectMatrix\n\t\t\t\tv.multiplyScalar( - distance );\n\n\t\t\t\tpanOffset.add( v );\n\n\t\t\t};\n\n\t\t}();\n\n\t\tconst panUp = function () {\n\n\t\t\tconst v = new Vector3();\n\n\t\t\treturn function panUp( distance, objectMatrix ) {\n\n\t\t\t\tif ( scope.screenSpacePanning === true ) {\n\n\t\t\t\t\tv.setFromMatrixColumn( objectMatrix, 1 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tv.setFromMatrixColumn( objectMatrix, 0 );\n\t\t\t\t\tv.crossVectors( scope.object.up, v );\n\n\t\t\t\t}\n\n\t\t\t\tv.multiplyScalar( distance );\n\n\t\t\t\tpanOffset.add( v );\n\n\t\t\t};\n\n\t\t}();\n\n\t\t// deltaX and deltaY are in pixels; right and down are positive\n\t\tconst pan = function () {\n\n\t\t\tconst offset = new Vector3();\n\n\t\t\treturn function pan( deltaX, deltaY ) {\n\n\t\t\t\tconst element = scope.domElement;\n\n\t\t\t\tif ( scope.object.isPerspectiveCamera ) {\n\n\t\t\t\t\t// perspective\n\t\t\t\t\tconst position = scope.object.position;\n\t\t\t\t\toffset.copy( position ).sub( scope.target );\n\t\t\t\t\tlet targetDistance = offset.length();\n\n\t\t\t\t\t// half of the fov is center to top of screen\n\t\t\t\t\ttargetDistance *= Math.tan( ( scope.object.fov / 2 ) * Math.PI / 180.0 );\n\n\t\t\t\t\t// we use only clientHeight here so aspect ratio does not distort speed\n\t\t\t\t\tpanLeft( 2 * deltaX * targetDistance / element.clientHeight, scope.object.matrix );\n\t\t\t\t\tpanUp( 2 * deltaY * targetDistance / element.clientHeight, scope.object.matrix );\n\n\t\t\t\t} else if ( scope.object.isOrthographicCamera ) {\n\n\t\t\t\t\t// orthographic\n\t\t\t\t\tpanLeft( deltaX * ( scope.object.right - scope.object.left ) / scope.object.zoom / element.clientWidth, scope.object.matrix );\n\t\t\t\t\tpanUp( deltaY * ( scope.object.top - scope.object.bottom ) / scope.object.zoom / element.clientHeight, scope.object.matrix );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// camera neither orthographic nor perspective\n\t\t\t\t\tconsole.warn( 'WARNING: OrbitControls.js encountered an unknown camera type - pan disabled.' );\n\t\t\t\t\tscope.enablePan = false;\n\n\t\t\t\t}\n\n\t\t\t};\n\n\t\t}();\n\n\t\tfunction dollyOut( dollyScale ) {\n\n\t\t\tif ( scope.object.isPerspectiveCamera ) {\n\n\t\t\t\tscale /= dollyScale;\n\n\t\t\t} else if ( scope.object.isOrthographicCamera ) {\n\n\t\t\t\tscope.object.zoom = Math.max( scope.minZoom, Math.min( scope.maxZoom, scope.object.zoom * dollyScale ) );\n\t\t\t\tscope.object.updateProjectionMatrix();\n\t\t\t\tzoomChanged = true;\n\n\t\t\t} else {\n\n\t\t\t\tconsole.warn( 'WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled.' );\n\t\t\t\tscope.enableZoom = false;\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction dollyIn( dollyScale ) {\n\n\t\t\tif ( scope.object.isPerspectiveCamera ) {\n\n\t\t\t\tscale *= dollyScale;\n\n\t\t\t} else if ( scope.object.isOrthographicCamera ) {\n\n\t\t\t\tscope.object.zoom = Math.max( scope.minZoom, Math.min( scope.maxZoom, scope.object.zoom / dollyScale ) );\n\t\t\t\tscope.object.updateProjectionMatrix();\n\t\t\t\tzoomChanged = true;\n\n\t\t\t} else {\n\n\t\t\t\tconsole.warn( 'WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled.' );\n\t\t\t\tscope.enableZoom = false;\n\n\t\t\t}\n\n\t\t}\n\n\t\t//\n\t\t// event callbacks - update the object state\n\t\t//\n\n\t\tfunction handleMouseDownRotate( event ) {\n\n\t\t\trotateStart.set( event.clientX, event.clientY );\n\n\t\t}\n\n\t\tfunction handleMouseDownDolly( event ) {\n\n\t\t\tdollyStart.set( event.clientX, event.clientY );\n\n\t\t}\n\n\t\tfunction handleMouseDownPan( event ) {\n\n\t\t\tpanStart.set( event.clientX, event.clientY );\n\n\t\t}\n\n\t\tfunction handleMouseMoveRotate( event ) {\n\n\t\t\trotateEnd.set( event.clientX, event.clientY );\n\n\t\t\trotateDelta.subVectors( rotateEnd, rotateStart ).multiplyScalar( scope.rotateSpeed );\n\n\t\t\tconst element = scope.domElement;\n\n\t\t\trotateLeft( 2 * Math.PI * rotateDelta.x / element.clientHeight ); // yes, height\n\n\t\t\trotateUp( 2 * Math.PI * rotateDelta.y / element.clientHeight );\n\n\t\t\trotateStart.copy( rotateEnd );\n\n\t\t\tscope.update();\n\n\t\t}\n\n\t\tfunction handleMouseMoveDolly( event ) {\n\n\t\t\tdollyEnd.set( event.clientX, event.clientY );\n\n\t\t\tdollyDelta.subVectors( dollyEnd, dollyStart );\n\n\t\t\tif ( dollyDelta.y > 0 ) {\n\n\t\t\t\tdollyOut( getZoomScale() );\n\n\t\t\t} else if ( dollyDelta.y < 0 ) {\n\n\t\t\t\tdollyIn( getZoomScale() );\n\n\t\t\t}\n\n\t\t\tdollyStart.copy( dollyEnd );\n\n\t\t\tscope.update();\n\n\t\t}\n\n\t\tfunction handleMouseMovePan( event ) {\n\n\t\t\tpanEnd.set( event.clientX, event.clientY );\n\n\t\t\tpanDelta.subVectors( panEnd, panStart ).multiplyScalar( scope.panSpeed );\n\n\t\t\tpan( panDelta.x, panDelta.y );\n\n\t\t\tpanStart.copy( panEnd );\n\n\t\t\tscope.update();\n\n\t\t}\n\n\t\tfunction handleMouseWheel( event ) {\n\n\t\t\tif ( event.deltaY < 0 ) {\n\n\t\t\t\tdollyIn( getZoomScale() );\n\n\t\t\t} else if ( event.deltaY > 0 ) {\n\n\t\t\t\tdollyOut( getZoomScale() );\n\n\t\t\t}\n\n\t\t\tscope.update();\n\n\t\t}\n\n\t\tfunction handleKeyDown( event ) {\n\n\t\t\tlet needsUpdate = false;\n\n\t\t\tswitch ( event.code ) {\n\n\t\t\t\tcase scope.keys.UP:\n\n\t\t\t\t\tif ( event.ctrlKey || event.metaKey || event.shiftKey ) {\n\n\t\t\t\t\t\trotateUp( 2 * Math.PI * scope.rotateSpeed / scope.domElement.clientHeight );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tpan( 0, scope.keyPanSpeed );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tneedsUpdate = true;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase scope.keys.BOTTOM:\n\n\t\t\t\t\tif ( event.ctrlKey || event.metaKey || event.shiftKey ) {\n\n\t\t\t\t\t\trotateUp( - 2 * Math.PI * scope.rotateSpeed / scope.domElement.clientHeight );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tpan( 0, - scope.keyPanSpeed );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tneedsUpdate = true;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase scope.keys.LEFT:\n\n\t\t\t\t\tif ( event.ctrlKey || event.metaKey || event.shiftKey ) {\n\n\t\t\t\t\t\trotateLeft( 2 * Math.PI * scope.rotateSpeed / scope.domElement.clientHeight );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tpan( scope.keyPanSpeed, 0 );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tneedsUpdate = true;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase scope.keys.RIGHT:\n\n\t\t\t\t\tif ( event.ctrlKey || event.metaKey || event.shiftKey ) {\n\n\t\t\t\t\t\trotateLeft( - 2 * Math.PI * scope.rotateSpeed / scope.domElement.clientHeight );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tpan( - scope.keyPanSpeed, 0 );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tneedsUpdate = true;\n\t\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t\tif ( needsUpdate ) {\n\n\t\t\t\t// prevent the browser from scrolling on cursor keys\n\t\t\t\tevent.preventDefault();\n\n\t\t\t\tscope.update();\n\n\t\t\t}\n\n\n\t\t}\n\n\t\tfunction handleTouchStartRotate() {\n\n\t\t\tif ( pointers.length === 1 ) {\n\n\t\t\t\trotateStart.set( pointers[ 0 ].pageX, pointers[ 0 ].pageY );\n\n\t\t\t} else {\n\n\t\t\t\tconst x = 0.5 * ( pointers[ 0 ].pageX + pointers[ 1 ].pageX );\n\t\t\t\tconst y = 0.5 * ( pointers[ 0 ].pageY + pointers[ 1 ].pageY );\n\n\t\t\t\trotateStart.set( x, y );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction handleTouchStartPan() {\n\n\t\t\tif ( pointers.length === 1 ) {\n\n\t\t\t\tpanStart.set( pointers[ 0 ].pageX, pointers[ 0 ].pageY );\n\n\t\t\t} else {\n\n\t\t\t\tconst x = 0.5 * ( pointers[ 0 ].pageX + pointers[ 1 ].pageX );\n\t\t\t\tconst y = 0.5 * ( pointers[ 0 ].pageY + pointers[ 1 ].pageY );\n\n\t\t\t\tpanStart.set( x, y );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction handleTouchStartDolly() {\n\n\t\t\tconst dx = pointers[ 0 ].pageX - pointers[ 1 ].pageX;\n\t\t\tconst dy = pointers[ 0 ].pageY - pointers[ 1 ].pageY;\n\n\t\t\tconst distance = Math.sqrt( dx * dx + dy * dy );\n\n\t\t\tdollyStart.set( 0, distance );\n\n\t\t}\n\n\t\tfunction handleTouchStartDollyPan() {\n\n\t\t\tif ( scope.enableZoom ) handleTouchStartDolly();\n\n\t\t\tif ( scope.enablePan ) handleTouchStartPan();\n\n\t\t}\n\n\t\tfunction handleTouchStartDollyRotate() {\n\n\t\t\tif ( scope.enableZoom ) handleTouchStartDolly();\n\n\t\t\tif ( scope.enableRotate ) handleTouchStartRotate();\n\n\t\t}\n\n\t\tfunction handleTouchMoveRotate( event ) {\n\n\t\t\tif ( pointers.length == 1 ) {\n\n\t\t\t\trotateEnd.set( event.pageX, event.pageY );\n\n\t\t\t} else {\n\n\t\t\t\tconst position = getSecondPointerPosition( event );\n\n\t\t\t\tconst x = 0.5 * ( event.pageX + position.x );\n\t\t\t\tconst y = 0.5 * ( event.pageY + position.y );\n\n\t\t\t\trotateEnd.set( x, y );\n\n\t\t\t}\n\n\t\t\trotateDelta.subVectors( rotateEnd, rotateStart ).multiplyScalar( scope.rotateSpeed );\n\n\t\t\tconst element = scope.domElement;\n\n\t\t\trotateLeft( 2 * Math.PI * rotateDelta.x / element.clientHeight ); // yes, height\n\n\t\t\trotateUp( 2 * Math.PI * rotateDelta.y / element.clientHeight );\n\n\t\t\trotateStart.copy( rotateEnd );\n\n\t\t}\n\n\t\tfunction handleTouchMovePan( event ) {\n\n\t\t\tif ( pointers.length === 1 ) {\n\n\t\t\t\tpanEnd.set( event.pageX, event.pageY );\n\n\t\t\t} else {\n\n\t\t\t\tconst position = getSecondPointerPosition( event );\n\n\t\t\t\tconst x = 0.5 * ( event.pageX + position.x );\n\t\t\t\tconst y = 0.5 * ( event.pageY + position.y );\n\n\t\t\t\tpanEnd.set( x, y );\n\n\t\t\t}\n\n\t\t\tpanDelta.subVectors( panEnd, panStart ).multiplyScalar( scope.panSpeed );\n\n\t\t\tpan( panDelta.x, panDelta.y );\n\n\t\t\tpanStart.copy( panEnd );\n\n\t\t}\n\n\t\tfunction handleTouchMoveDolly( event ) {\n\n\t\t\tconst position = getSecondPointerPosition( event );\n\n\t\t\tconst dx = event.pageX - position.x;\n\t\t\tconst dy = event.pageY - position.y;\n\n\t\t\tconst distance = Math.sqrt( dx * dx + dy * dy );\n\n\t\t\tdollyEnd.set( 0, distance );\n\n\t\t\tdollyDelta.set( 0, Math.pow( dollyEnd.y / dollyStart.y, scope.zoomSpeed ) );\n\n\t\t\tdollyOut( dollyDelta.y );\n\n\t\t\tdollyStart.copy( dollyEnd );\n\n\t\t}\n\n\t\tfunction handleTouchMoveDollyPan( event ) {\n\n\t\t\tif ( scope.enableZoom ) handleTouchMoveDolly( event );\n\n\t\t\tif ( scope.enablePan ) handleTouchMovePan( event );\n\n\t\t}\n\n\t\tfunction handleTouchMoveDollyRotate( event ) {\n\n\t\t\tif ( scope.enableZoom ) handleTouchMoveDolly( event );\n\n\t\t\tif ( scope.enableRotate ) handleTouchMoveRotate( event );\n\n\t\t}\n\n\t\t//\n\t\t// event handlers - FSM: listen for events and reset state\n\t\t//\n\n\t\tfunction onPointerDown( event ) {\n\n\t\t\tif ( scope.enabled === false ) return;\n\n\t\t\tif ( pointers.length === 0 ) {\n\n\t\t\t\tscope.domElement.setPointerCapture( event.pointerId );\n\n\t\t\t\tscope.domElement.addEventListener( 'pointermove', onPointerMove );\n\t\t\t\tscope.domElement.addEventListener( 'pointerup', onPointerUp );\n\n\t\t\t}\n\n\t\t\t//\n\n\t\t\taddPointer( event );\n\n\t\t\tif ( event.pointerType === 'touch' ) {\n\n\t\t\t\tonTouchStart( event );\n\n\t\t\t} else {\n\n\t\t\t\tonMouseDown( event );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction onPointerMove( event ) {\n\n\t\t\tif ( scope.enabled === false ) return;\n\n\t\t\tif ( event.pointerType === 'touch' ) {\n\n\t\t\t\tonTouchMove( event );\n\n\t\t\t} else {\n\n\t\t\t\tonMouseMove( event );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction onPointerUp( event ) {\n\n\t\t\tremovePointer( event );\n\n\t\t\tif ( pointers.length === 0 ) {\n\n\t\t\t\tscope.domElement.releasePointerCapture( event.pointerId );\n\n\t\t\t\tscope.domElement.removeEventListener( 'pointermove', onPointerMove );\n\t\t\t\tscope.domElement.removeEventListener( 'pointerup', onPointerUp );\n\n\t\t\t}\n\n\t\t\tscope.dispatchEvent( _endEvent );\n\n\t\t\tstate = STATE.NONE;\n\n\t\t}\n\n\t\tfunction onMouseDown( event ) {\n\n\t\t\tlet mouseAction;\n\n\t\t\tswitch ( event.button ) {\n\n\t\t\t\tcase 0:\n\n\t\t\t\t\tmouseAction = scope.mouseButtons.LEFT;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 1:\n\n\t\t\t\t\tmouseAction = scope.mouseButtons.MIDDLE;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 2:\n\n\t\t\t\t\tmouseAction = scope.mouseButtons.RIGHT;\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\n\n\t\t\t\t\tmouseAction = - 1;\n\n\t\t\t}\n\n\t\t\tswitch ( mouseAction ) {\n\n\t\t\t\tcase MOUSE.DOLLY:\n\n\t\t\t\t\tif ( scope.enableZoom === false ) return;\n\n\t\t\t\t\thandleMouseDownDolly( event );\n\n\t\t\t\t\tstate = STATE.DOLLY;\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase MOUSE.ROTATE:\n\n\t\t\t\t\tif ( event.ctrlKey || event.metaKey || event.shiftKey ) {\n\n\t\t\t\t\t\tif ( scope.enablePan === false ) return;\n\n\t\t\t\t\t\thandleMouseDownPan( event );\n\n\t\t\t\t\t\tstate = STATE.PAN;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tif ( scope.enableRotate === false ) return;\n\n\t\t\t\t\t\thandleMouseDownRotate( event );\n\n\t\t\t\t\t\tstate = STATE.ROTATE;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase MOUSE.PAN:\n\n\t\t\t\t\tif ( event.ctrlKey || event.metaKey || event.shiftKey ) {\n\n\t\t\t\t\t\tif ( scope.enableRotate === false ) return;\n\n\t\t\t\t\t\thandleMouseDownRotate( event );\n\n\t\t\t\t\t\tstate = STATE.ROTATE;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tif ( scope.enablePan === false ) return;\n\n\t\t\t\t\t\thandleMouseDownPan( event );\n\n\t\t\t\t\t\tstate = STATE.PAN;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\n\n\t\t\t\t\tstate = STATE.NONE;\n\n\t\t\t}\n\n\t\t\tif ( state !== STATE.NONE ) {\n\n\t\t\t\tscope.dispatchEvent( _startEvent );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction onMouseMove( event ) {\n\n\t\t\tswitch ( state ) {\n\n\t\t\t\tcase STATE.ROTATE:\n\n\t\t\t\t\tif ( scope.enableRotate === false ) return;\n\n\t\t\t\t\thandleMouseMoveRotate( event );\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase STATE.DOLLY:\n\n\t\t\t\t\tif ( scope.enableZoom === false ) return;\n\n\t\t\t\t\thandleMouseMoveDolly( event );\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase STATE.PAN:\n\n\t\t\t\t\tif ( scope.enablePan === false ) return;\n\n\t\t\t\t\thandleMouseMovePan( event );\n\n\t\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction onMouseWheel( event ) {\n\n\t\t\tif ( scope.enabled === false || scope.enableZoom === false || state !== STATE.NONE ) return;\n\n\t\t\tevent.preventDefault();\n\n\t\t\tscope.dispatchEvent( _startEvent );\n\n\t\t\thandleMouseWheel( event );\n\n\t\t\tscope.dispatchEvent( _endEvent );\n\n\t\t}\n\n\t\tfunction onKeyDown( event ) {\n\n\t\t\tif ( scope.enabled === false || scope.enablePan === false ) return;\n\n\t\t\thandleKeyDown( event );\n\n\t\t}\n\n\t\tfunction onTouchStart( event ) {\n\n\t\t\ttrackPointer( event );\n\n\t\t\tswitch ( pointers.length ) {\n\n\t\t\t\tcase 1:\n\n\t\t\t\t\tswitch ( scope.touches.ONE ) {\n\n\t\t\t\t\t\tcase TOUCH.ROTATE:\n\n\t\t\t\t\t\t\tif ( scope.enableRotate === false ) return;\n\n\t\t\t\t\t\t\thandleTouchStartRotate();\n\n\t\t\t\t\t\t\tstate = STATE.TOUCH_ROTATE;\n\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase TOUCH.PAN:\n\n\t\t\t\t\t\t\tif ( scope.enablePan === false ) return;\n\n\t\t\t\t\t\t\thandleTouchStartPan();\n\n\t\t\t\t\t\t\tstate = STATE.TOUCH_PAN;\n\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tdefault:\n\n\t\t\t\t\t\t\tstate = STATE.NONE;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 2:\n\n\t\t\t\t\tswitch ( scope.touches.TWO ) {\n\n\t\t\t\t\t\tcase TOUCH.DOLLY_PAN:\n\n\t\t\t\t\t\t\tif ( scope.enableZoom === false && scope.enablePan === false ) return;\n\n\t\t\t\t\t\t\thandleTouchStartDollyPan();\n\n\t\t\t\t\t\t\tstate = STATE.TOUCH_DOLLY_PAN;\n\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase TOUCH.DOLLY_ROTATE:\n\n\t\t\t\t\t\t\tif ( scope.enableZoom === false && scope.enableRotate === false ) return;\n\n\t\t\t\t\t\t\thandleTouchStartDollyRotate();\n\n\t\t\t\t\t\t\tstate = STATE.TOUCH_DOLLY_ROTATE;\n\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tdefault:\n\n\t\t\t\t\t\t\tstate = STATE.NONE;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\n\n\t\t\t\t\tstate = STATE.NONE;\n\n\t\t\t}\n\n\t\t\tif ( state !== STATE.NONE ) {\n\n\t\t\t\tscope.dispatchEvent( _startEvent );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction onTouchMove( event ) {\n\n\t\t\ttrackPointer( event );\n\n\t\t\tswitch ( state ) {\n\n\t\t\t\tcase STATE.TOUCH_ROTATE:\n\n\t\t\t\t\tif ( scope.enableRotate === false ) return;\n\n\t\t\t\t\thandleTouchMoveRotate( event );\n\n\t\t\t\t\tscope.update();\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase STATE.TOUCH_PAN:\n\n\t\t\t\t\tif ( scope.enablePan === false ) return;\n\n\t\t\t\t\thandleTouchMovePan( event );\n\n\t\t\t\t\tscope.update();\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase STATE.TOUCH_DOLLY_PAN:\n\n\t\t\t\t\tif ( scope.enableZoom === false && scope.enablePan === false ) return;\n\n\t\t\t\t\thandleTouchMoveDollyPan( event );\n\n\t\t\t\t\tscope.update();\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase STATE.TOUCH_DOLLY_ROTATE:\n\n\t\t\t\t\tif ( scope.enableZoom === false && scope.enableRotate === false ) return;\n\n\t\t\t\t\thandleTouchMoveDollyRotate( event );\n\n\t\t\t\t\tscope.update();\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\n\n\t\t\t\t\tstate = STATE.NONE;\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction onContextMenu( event ) {\n\n\t\t\tif ( scope.enabled === false ) return;\n\n\t\t\tevent.preventDefault();\n\n\t\t}\n\n\t\tfunction addPointer( event ) {\n\n\t\t\tpointers.push( event );\n\n\t\t}\n\n\t\tfunction removePointer( event ) {\n\n\t\t\tdelete pointerPositions[ event.pointerId ];\n\n\t\t\tfor ( let i = 0; i < pointers.length; i ++ ) {\n\n\t\t\t\tif ( pointers[ i ].pointerId == event.pointerId ) {\n\n\t\t\t\t\tpointers.splice( i, 1 );\n\t\t\t\t\treturn;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction trackPointer( event ) {\n\n\t\t\tlet position = pointerPositions[ event.pointerId ];\n\n\t\t\tif ( position === undefined ) {\n\n\t\t\t\tposition = new Vector2();\n\t\t\t\tpointerPositions[ event.pointerId ] = position;\n\n\t\t\t}\n\n\t\t\tposition.set( event.pageX, event.pageY );\n\n\t\t}\n\n\t\tfunction getSecondPointerPosition( event ) {\n\n\t\t\tconst pointer = ( event.pointerId === pointers[ 0 ].pointerId ) ? pointers[ 1 ] : pointers[ 0 ];\n\n\t\t\treturn pointerPositions[ pointer.pointerId ];\n\n\t\t}\n\n\t\t//\n\n\t\tscope.domElement.addEventListener( 'contextmenu', onContextMenu );\n\n\t\tscope.domElement.addEventListener( 'pointerdown', onPointerDown );\n\t\tscope.domElement.addEventListener( 'pointercancel', onPointerUp );\n\t\tscope.domElement.addEventListener( 'wheel', onMouseWheel, { passive: false } );\n\n\t\t// force an update at start\n\n\t\tthis.update();\n\n\t}\n\n}\n\nexport { OrbitControls };\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}