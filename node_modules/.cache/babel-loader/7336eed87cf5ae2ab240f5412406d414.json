{"ast":null,"code":"import * as THREE from 'three';\nimport * as React from 'react';\nimport { shaderMaterial } from '../core/shaderMaterial.js';\nconst WireframeMaterialShaders = {\n  uniforms: {\n    strokeOpacity: 1,\n    fillOpacity: 0.25,\n    fillMix: 0,\n    thickness: 0.05,\n    colorBackfaces: false,\n    dashInvert: true,\n    dash: false,\n    dashRepeats: 4,\n    dashLength: 0.5,\n    squeeze: false,\n    squeezeMin: 0.2,\n    squeezeMax: 1,\n    stroke: new THREE.Color('#ff0000'),\n    backfaceStroke: new THREE.Color('#0000ff'),\n    fill: new THREE.Color('#00ff00')\n  },\n  vertex:\n  /* glsl */\n  `\n\t  attribute vec3 barycentric;\n\t\n\t\tvarying vec3 v_edges_Barycentric;\n\t\tvarying vec3 v_edges_Position;\n\n\t\tvoid initWireframe() {\n\t\t\tv_edges_Barycentric = barycentric;\n\t\t\tv_edges_Position = position.xyz;\n\t\t}\n\t  `,\n  fragment:\n  /* glsl */\n  `\n\t\t#ifndef PI\n\t  \t#define PI 3.1415926535897932384626433832795\n\t\t#endif\n  \n\t  varying vec3 v_edges_Barycentric;\n\t  varying vec3 v_edges_Position;\n  \n\t  uniform float strokeOpacity;\n\t  uniform float fillOpacity;\n\t  uniform float fillMix;\n\t  uniform float thickness;\n\t  uniform bool colorBackfaces;\n  \n\t  // Dash\n\t  uniform bool dashInvert;\n\t  uniform bool dash;\n\t  uniform bool dashOnly;\n\t  uniform float dashRepeats;\n\t  uniform float dashLength;\n  \n\t  // Squeeze\n\t  uniform bool squeeze;\n\t  uniform float squeezeMin;\n\t  uniform float squeezeMax;\n  \n\t  // Colors\n\t  uniform vec3 stroke;\n\t  uniform vec3 backfaceStroke;\n\t  uniform vec3 fill;\n  \n\t  // This is like\n\t  float wireframe_aastep(float threshold, float dist) {\n\t\t  float afwidth = fwidth(dist) * 0.5;\n\t\t  return smoothstep(threshold - afwidth, threshold + afwidth, dist);\n\t  }\n  \n\t  float wireframe_map(float value, float min1, float max1, float min2, float max2) {\n\t\t  return min2 + (value - min1) * (max2 - min2) / (max1 - min1);\n\t  }\n  \n\t  float getWireframe() {\n\t\t\tvec3 barycentric = v_edges_Barycentric;\n\t\t\n\t\t\t// Distance from center of each triangle to its edges.\n\t\t\tfloat d = min(min(barycentric.x, barycentric.y), barycentric.z);\n\n\t\t\t// for dashed rendering, we can use this to get the 0 .. 1 value of the line length\n\t\t\tfloat positionAlong = max(barycentric.x, barycentric.y);\n\t\t\tif (barycentric.y < barycentric.x && barycentric.y < barycentric.z) {\n\t\t\t\tpositionAlong = 1.0 - positionAlong;\n\t\t\t}\n\n\t\t\t// the thickness of the stroke\n\t\t\tfloat computedThickness = wireframe_map(thickness, 0.0, 1.0, 0.0, 0.34);\n\n\t\t\t// if we want to shrink the thickness toward the center of the line segment\n\t\t\tif (squeeze) {\n\t\t\t\tcomputedThickness *= mix(squeezeMin, squeezeMax, (1.0 - sin(positionAlong * PI)));\n\t\t\t}\n\n\t\t\t// Create dash pattern\n\t\t\tif (dash) {\n\t\t\t\t// here we offset the stroke position depending on whether it\n\t\t\t\t// should overlap or not\n\t\t\t\tfloat offset = 1.0 / dashRepeats * dashLength / 2.0;\n\t\t\t\tif (!dashInvert) {\n\t\t\t\t\toffset += 1.0 / dashRepeats / 2.0;\n\t\t\t\t}\n\n\t\t\t\t// if we should animate the dash or not\n\t\t\t\t// if (dashAnimate) {\n\t\t\t\t// \toffset += time * 0.22;\n\t\t\t\t// }\n\n\t\t\t\t// create the repeating dash pattern\n\t\t\t\tfloat pattern = fract((positionAlong + offset) * dashRepeats);\n\t\t\t\tcomputedThickness *= 1.0 - wireframe_aastep(dashLength, pattern);\n\t\t\t}\n\n\t\t\t// compute the anti-aliased stroke edge  \n\t\t\tfloat edge = 1.0 - wireframe_aastep(computedThickness, d);\n\n\t\t\treturn edge;\n\t  }\n\t  `\n};\nconst WireframeMaterial = shaderMaterial(WireframeMaterialShaders.uniforms, WireframeMaterialShaders.vertex +\n/* glsl */\n`\n  \tvoid main() {\n\t\tinitWireframe();\n\t\tgl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.0);\n\t}\n  `, WireframeMaterialShaders.fragment +\n/* glsl */\n`\n  void main () {\n\t\t// Compute color\n\n\t\tfloat edge = getWireframe();\n\t\tvec4 colorStroke = vec4(stroke, edge);\n\n\t\t#ifdef FLIP_SIDED\n\t\t\tcolorStroke.rgb = backfaceStroke;\n\t\t#endif\n    \n\t\tvec4 colorFill = vec4(fill, fillOpacity);\n\t\tvec4 outColor = mix(colorFill, colorStroke, edge * strokeOpacity);\n\n\t\tgl_FragColor = outColor;\n\t}\n  `);\n\nfunction setWireframeOverride(material, uniforms) {\n  material.onBeforeCompile = shader => {\n    shader.uniforms = { ...shader.uniforms,\n      ...uniforms\n    };\n    shader.vertexShader = shader.vertexShader.replace('void main() {', `\n\t\t  ${WireframeMaterialShaders.vertex}\n\t\t  void main() {\n\t\t\tinitWireframe();\n\t\t`);\n    shader.fragmentShader = shader.fragmentShader.replace('void main() {', `\n\t\t  ${WireframeMaterialShaders.fragment}\n\t\t  void main() {\n\t\t`);\n    shader.fragmentShader = shader.fragmentShader.replace('#include <color_fragment>',\n    /* glsl */\n    `\n\t\t  #include <color_fragment>\n\t\t\t  float edge = getWireframe();\n\t\t  vec4 colorStroke = vec4(stroke, edge);\n\t\t  #ifdef FLIP_SIDED\n\t\t\tcolorStroke.rgb = backfaceStroke;\n\t\t  #endif\n\t\t  vec4 colorFill = vec4(mix(diffuseColor.rgb, fill, fillMix), mix(diffuseColor.a, fillOpacity, fillMix));\n\t\t  vec4 outColor = mix(colorFill, colorStroke, edge * strokeOpacity);\n\n\t\t  diffuseColor.rgb = outColor.rgb;\n\t\t  diffuseColor.a *= outColor.a;\n\t\t`);\n  };\n\n  material.side = THREE.DoubleSide;\n  material.transparent = true;\n}\n\nfunction useWireframeUniforms(uniforms, props) {\n  React.useEffect(() => {\n    var _props$fillOpacity;\n\n    return void (uniforms.fillOpacity.value = (_props$fillOpacity = props.fillOpacity) !== null && _props$fillOpacity !== void 0 ? _props$fillOpacity : uniforms.fillOpacity.value);\n  }, [props.fillOpacity]);\n  React.useEffect(() => {\n    var _props$fillMix;\n\n    return void (uniforms.fillMix.value = (_props$fillMix = props.fillMix) !== null && _props$fillMix !== void 0 ? _props$fillMix : uniforms.fillMix.value);\n  }, [props.fillMix]);\n  React.useEffect(() => {\n    var _props$strokeOpacity;\n\n    return void (uniforms.strokeOpacity.value = (_props$strokeOpacity = props.strokeOpacity) !== null && _props$strokeOpacity !== void 0 ? _props$strokeOpacity : uniforms.strokeOpacity.value);\n  }, [props.strokeOpacity]);\n  React.useEffect(() => {\n    var _props$thickness;\n\n    return void (uniforms.thickness.value = (_props$thickness = props.thickness) !== null && _props$thickness !== void 0 ? _props$thickness : uniforms.thickness.value);\n  }, [props.thickness]);\n  React.useEffect(() => void (uniforms.colorBackfaces.value = !!props.colorBackfaces), [props.colorBackfaces]);\n  React.useEffect(() => void (uniforms.dash.value = !!props.dash), [props.dash]);\n  React.useEffect(() => void (uniforms.dashInvert.value = !!props.dashInvert), [props.dashInvert]);\n  React.useEffect(() => {\n    var _props$dashRepeats;\n\n    return void (uniforms.dashRepeats.value = (_props$dashRepeats = props.dashRepeats) !== null && _props$dashRepeats !== void 0 ? _props$dashRepeats : uniforms.dashRepeats.value);\n  }, [props.dashRepeats]);\n  React.useEffect(() => {\n    var _props$dashLength;\n\n    return void (uniforms.dashLength.value = (_props$dashLength = props.dashLength) !== null && _props$dashLength !== void 0 ? _props$dashLength : uniforms.dashLength.value);\n  }, [props.dashLength]);\n  React.useEffect(() => void (uniforms.squeeze.value = !!props.squeeze), [props.squeeze]);\n  React.useEffect(() => {\n    var _props$squeezeMin;\n\n    return void (uniforms.squeezeMin.value = (_props$squeezeMin = props.squeezeMin) !== null && _props$squeezeMin !== void 0 ? _props$squeezeMin : uniforms.squeezeMin.value);\n  }, [props.squeezeMin]);\n  React.useEffect(() => {\n    var _props$squeezeMax;\n\n    return void (uniforms.squeezeMax.value = (_props$squeezeMax = props.squeezeMax) !== null && _props$squeezeMax !== void 0 ? _props$squeezeMax : uniforms.squeezeMax.value);\n  }, [props.squeezeMax]);\n  React.useEffect(() => void (uniforms.stroke.value = props.stroke ? new THREE.Color(props.stroke) : uniforms.stroke.value), [props.stroke]);\n  React.useEffect(() => void (uniforms.fill.value = props.fill ? new THREE.Color(props.fill) : uniforms.fill.value), [props.fill]);\n  React.useEffect(() => void (uniforms.backfaceStroke.value = props.backfaceStroke ? new THREE.Color(props.backfaceStroke) : uniforms.backfaceStroke.value), [props.backfaceStroke]);\n}\n\nexport { WireframeMaterial, WireframeMaterialShaders, setWireframeOverride, useWireframeUniforms };","map":{"version":3,"names":["THREE","React","shaderMaterial","WireframeMaterialShaders","uniforms","strokeOpacity","fillOpacity","fillMix","thickness","colorBackfaces","dashInvert","dash","dashRepeats","dashLength","squeeze","squeezeMin","squeezeMax","stroke","Color","backfaceStroke","fill","vertex","fragment","WireframeMaterial","setWireframeOverride","material","onBeforeCompile","shader","vertexShader","replace","fragmentShader","side","DoubleSide","transparent","useWireframeUniforms","props","useEffect","_props$fillOpacity","value","_props$fillMix","_props$strokeOpacity","_props$thickness","_props$dashRepeats","_props$dashLength","_props$squeezeMin","_props$squeezeMax"],"sources":["/Users/crushedsummers/Desktop/Work/Application/portfolio22/node_modules/@react-three/drei/materials/WireframeMaterial.js"],"sourcesContent":["import * as THREE from 'three';\nimport * as React from 'react';\nimport { shaderMaterial } from '../core/shaderMaterial.js';\n\nconst WireframeMaterialShaders = {\n  uniforms: {\n    strokeOpacity: 1,\n    fillOpacity: 0.25,\n    fillMix: 0,\n    thickness: 0.05,\n    colorBackfaces: false,\n    dashInvert: true,\n    dash: false,\n    dashRepeats: 4,\n    dashLength: 0.5,\n    squeeze: false,\n    squeezeMin: 0.2,\n    squeezeMax: 1,\n    stroke: new THREE.Color('#ff0000'),\n    backfaceStroke: new THREE.Color('#0000ff'),\n    fill: new THREE.Color('#00ff00')\n  },\n  vertex:\n  /* glsl */\n  `\n\t  attribute vec3 barycentric;\n\t\n\t\tvarying vec3 v_edges_Barycentric;\n\t\tvarying vec3 v_edges_Position;\n\n\t\tvoid initWireframe() {\n\t\t\tv_edges_Barycentric = barycentric;\n\t\t\tv_edges_Position = position.xyz;\n\t\t}\n\t  `,\n  fragment:\n  /* glsl */\n  `\n\t\t#ifndef PI\n\t  \t#define PI 3.1415926535897932384626433832795\n\t\t#endif\n  \n\t  varying vec3 v_edges_Barycentric;\n\t  varying vec3 v_edges_Position;\n  \n\t  uniform float strokeOpacity;\n\t  uniform float fillOpacity;\n\t  uniform float fillMix;\n\t  uniform float thickness;\n\t  uniform bool colorBackfaces;\n  \n\t  // Dash\n\t  uniform bool dashInvert;\n\t  uniform bool dash;\n\t  uniform bool dashOnly;\n\t  uniform float dashRepeats;\n\t  uniform float dashLength;\n  \n\t  // Squeeze\n\t  uniform bool squeeze;\n\t  uniform float squeezeMin;\n\t  uniform float squeezeMax;\n  \n\t  // Colors\n\t  uniform vec3 stroke;\n\t  uniform vec3 backfaceStroke;\n\t  uniform vec3 fill;\n  \n\t  // This is like\n\t  float wireframe_aastep(float threshold, float dist) {\n\t\t  float afwidth = fwidth(dist) * 0.5;\n\t\t  return smoothstep(threshold - afwidth, threshold + afwidth, dist);\n\t  }\n  \n\t  float wireframe_map(float value, float min1, float max1, float min2, float max2) {\n\t\t  return min2 + (value - min1) * (max2 - min2) / (max1 - min1);\n\t  }\n  \n\t  float getWireframe() {\n\t\t\tvec3 barycentric = v_edges_Barycentric;\n\t\t\n\t\t\t// Distance from center of each triangle to its edges.\n\t\t\tfloat d = min(min(barycentric.x, barycentric.y), barycentric.z);\n\n\t\t\t// for dashed rendering, we can use this to get the 0 .. 1 value of the line length\n\t\t\tfloat positionAlong = max(barycentric.x, barycentric.y);\n\t\t\tif (barycentric.y < barycentric.x && barycentric.y < barycentric.z) {\n\t\t\t\tpositionAlong = 1.0 - positionAlong;\n\t\t\t}\n\n\t\t\t// the thickness of the stroke\n\t\t\tfloat computedThickness = wireframe_map(thickness, 0.0, 1.0, 0.0, 0.34);\n\n\t\t\t// if we want to shrink the thickness toward the center of the line segment\n\t\t\tif (squeeze) {\n\t\t\t\tcomputedThickness *= mix(squeezeMin, squeezeMax, (1.0 - sin(positionAlong * PI)));\n\t\t\t}\n\n\t\t\t// Create dash pattern\n\t\t\tif (dash) {\n\t\t\t\t// here we offset the stroke position depending on whether it\n\t\t\t\t// should overlap or not\n\t\t\t\tfloat offset = 1.0 / dashRepeats * dashLength / 2.0;\n\t\t\t\tif (!dashInvert) {\n\t\t\t\t\toffset += 1.0 / dashRepeats / 2.0;\n\t\t\t\t}\n\n\t\t\t\t// if we should animate the dash or not\n\t\t\t\t// if (dashAnimate) {\n\t\t\t\t// \toffset += time * 0.22;\n\t\t\t\t// }\n\n\t\t\t\t// create the repeating dash pattern\n\t\t\t\tfloat pattern = fract((positionAlong + offset) * dashRepeats);\n\t\t\t\tcomputedThickness *= 1.0 - wireframe_aastep(dashLength, pattern);\n\t\t\t}\n\n\t\t\t// compute the anti-aliased stroke edge  \n\t\t\tfloat edge = 1.0 - wireframe_aastep(computedThickness, d);\n\n\t\t\treturn edge;\n\t  }\n\t  `\n};\nconst WireframeMaterial = shaderMaterial(WireframeMaterialShaders.uniforms, WireframeMaterialShaders.vertex +\n/* glsl */\n`\n  \tvoid main() {\n\t\tinitWireframe();\n\t\tgl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.0);\n\t}\n  `, WireframeMaterialShaders.fragment +\n/* glsl */\n`\n  void main () {\n\t\t// Compute color\n\n\t\tfloat edge = getWireframe();\n\t\tvec4 colorStroke = vec4(stroke, edge);\n\n\t\t#ifdef FLIP_SIDED\n\t\t\tcolorStroke.rgb = backfaceStroke;\n\t\t#endif\n    \n\t\tvec4 colorFill = vec4(fill, fillOpacity);\n\t\tvec4 outColor = mix(colorFill, colorStroke, edge * strokeOpacity);\n\n\t\tgl_FragColor = outColor;\n\t}\n  `);\nfunction setWireframeOverride(material, uniforms) {\n  material.onBeforeCompile = shader => {\n    shader.uniforms = { ...shader.uniforms,\n      ...uniforms\n    };\n    shader.vertexShader = shader.vertexShader.replace('void main() {', `\n\t\t  ${WireframeMaterialShaders.vertex}\n\t\t  void main() {\n\t\t\tinitWireframe();\n\t\t`);\n    shader.fragmentShader = shader.fragmentShader.replace('void main() {', `\n\t\t  ${WireframeMaterialShaders.fragment}\n\t\t  void main() {\n\t\t`);\n    shader.fragmentShader = shader.fragmentShader.replace('#include <color_fragment>',\n    /* glsl */\n    `\n\t\t  #include <color_fragment>\n\t\t\t  float edge = getWireframe();\n\t\t  vec4 colorStroke = vec4(stroke, edge);\n\t\t  #ifdef FLIP_SIDED\n\t\t\tcolorStroke.rgb = backfaceStroke;\n\t\t  #endif\n\t\t  vec4 colorFill = vec4(mix(diffuseColor.rgb, fill, fillMix), mix(diffuseColor.a, fillOpacity, fillMix));\n\t\t  vec4 outColor = mix(colorFill, colorStroke, edge * strokeOpacity);\n\n\t\t  diffuseColor.rgb = outColor.rgb;\n\t\t  diffuseColor.a *= outColor.a;\n\t\t`);\n  };\n\n  material.side = THREE.DoubleSide;\n  material.transparent = true;\n}\nfunction useWireframeUniforms(uniforms, props) {\n  React.useEffect(() => {\n    var _props$fillOpacity;\n\n    return void (uniforms.fillOpacity.value = (_props$fillOpacity = props.fillOpacity) !== null && _props$fillOpacity !== void 0 ? _props$fillOpacity : uniforms.fillOpacity.value);\n  }, [props.fillOpacity]);\n  React.useEffect(() => {\n    var _props$fillMix;\n\n    return void (uniforms.fillMix.value = (_props$fillMix = props.fillMix) !== null && _props$fillMix !== void 0 ? _props$fillMix : uniforms.fillMix.value);\n  }, [props.fillMix]);\n  React.useEffect(() => {\n    var _props$strokeOpacity;\n\n    return void (uniforms.strokeOpacity.value = (_props$strokeOpacity = props.strokeOpacity) !== null && _props$strokeOpacity !== void 0 ? _props$strokeOpacity : uniforms.strokeOpacity.value);\n  }, [props.strokeOpacity]);\n  React.useEffect(() => {\n    var _props$thickness;\n\n    return void (uniforms.thickness.value = (_props$thickness = props.thickness) !== null && _props$thickness !== void 0 ? _props$thickness : uniforms.thickness.value);\n  }, [props.thickness]);\n  React.useEffect(() => void (uniforms.colorBackfaces.value = !!props.colorBackfaces), [props.colorBackfaces]);\n  React.useEffect(() => void (uniforms.dash.value = !!props.dash), [props.dash]);\n  React.useEffect(() => void (uniforms.dashInvert.value = !!props.dashInvert), [props.dashInvert]);\n  React.useEffect(() => {\n    var _props$dashRepeats;\n\n    return void (uniforms.dashRepeats.value = (_props$dashRepeats = props.dashRepeats) !== null && _props$dashRepeats !== void 0 ? _props$dashRepeats : uniforms.dashRepeats.value);\n  }, [props.dashRepeats]);\n  React.useEffect(() => {\n    var _props$dashLength;\n\n    return void (uniforms.dashLength.value = (_props$dashLength = props.dashLength) !== null && _props$dashLength !== void 0 ? _props$dashLength : uniforms.dashLength.value);\n  }, [props.dashLength]);\n  React.useEffect(() => void (uniforms.squeeze.value = !!props.squeeze), [props.squeeze]);\n  React.useEffect(() => {\n    var _props$squeezeMin;\n\n    return void (uniforms.squeezeMin.value = (_props$squeezeMin = props.squeezeMin) !== null && _props$squeezeMin !== void 0 ? _props$squeezeMin : uniforms.squeezeMin.value);\n  }, [props.squeezeMin]);\n  React.useEffect(() => {\n    var _props$squeezeMax;\n\n    return void (uniforms.squeezeMax.value = (_props$squeezeMax = props.squeezeMax) !== null && _props$squeezeMax !== void 0 ? _props$squeezeMax : uniforms.squeezeMax.value);\n  }, [props.squeezeMax]);\n  React.useEffect(() => void (uniforms.stroke.value = props.stroke ? new THREE.Color(props.stroke) : uniforms.stroke.value), [props.stroke]);\n  React.useEffect(() => void (uniforms.fill.value = props.fill ? new THREE.Color(props.fill) : uniforms.fill.value), [props.fill]);\n  React.useEffect(() => void (uniforms.backfaceStroke.value = props.backfaceStroke ? new THREE.Color(props.backfaceStroke) : uniforms.backfaceStroke.value), [props.backfaceStroke]);\n}\n\nexport { WireframeMaterial, WireframeMaterialShaders, setWireframeOverride, useWireframeUniforms };\n"],"mappings":"AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,OAAO,KAAKC,KAAZ,MAAuB,OAAvB;AACA,SAASC,cAAT,QAA+B,2BAA/B;AAEA,MAAMC,wBAAwB,GAAG;EAC/BC,QAAQ,EAAE;IACRC,aAAa,EAAE,CADP;IAERC,WAAW,EAAE,IAFL;IAGRC,OAAO,EAAE,CAHD;IAIRC,SAAS,EAAE,IAJH;IAKRC,cAAc,EAAE,KALR;IAMRC,UAAU,EAAE,IANJ;IAORC,IAAI,EAAE,KAPE;IAQRC,WAAW,EAAE,CARL;IASRC,UAAU,EAAE,GATJ;IAURC,OAAO,EAAE,KAVD;IAWRC,UAAU,EAAE,GAXJ;IAYRC,UAAU,EAAE,CAZJ;IAaRC,MAAM,EAAE,IAAIjB,KAAK,CAACkB,KAAV,CAAgB,SAAhB,CAbA;IAcRC,cAAc,EAAE,IAAInB,KAAK,CAACkB,KAAV,CAAgB,SAAhB,CAdR;IAeRE,IAAI,EAAE,IAAIpB,KAAK,CAACkB,KAAV,CAAgB,SAAhB;EAfE,CADqB;EAkB/BG,MAAM;EACN;EACC;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IA9BiC;EA+B/BC,QAAQ;EACR;EACC;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAtHiC,CAAjC;AAwHA,MAAMC,iBAAiB,GAAGrB,cAAc,CAACC,wBAAwB,CAACC,QAA1B,EAAoCD,wBAAwB,CAACkB,MAAzB;AAC5E;AACC;A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"},"metadata":{},"sourceType":"module"}